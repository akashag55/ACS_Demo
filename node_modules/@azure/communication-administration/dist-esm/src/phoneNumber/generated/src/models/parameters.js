/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { LocationOptionsQueries as LocationOptionsQueriesMapper, UpdateNumberCapabilitiesRequest as UpdateNumberCapabilitiesRequestMapper, NumberConfigurationPhoneNumber as NumberConfigurationPhoneNumberMapper, NumberConfiguration as NumberConfigurationMapper, ReleaseRequest as ReleaseRequestMapper, CreateSearchOptions as CreateSearchOptionsMapper } from "../models/mappers";
export const endpoint = {
    parameterPath: "endpoint",
    mapper: {
        serializedName: "endpoint",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
export const locale = {
    parameterPath: ["options", "locale"],
    mapper: {
        defaultValue: "en-US",
        serializedName: "locale",
        type: {
            name: "String"
        }
    }
};
export const skip = {
    parameterPath: ["options", "skip"],
    mapper: {
        serializedName: "skip",
        type: {
            name: "Number"
        }
    }
};
export const take = {
    parameterPath: ["options", "take"],
    mapper: {
        defaultValue: 100,
        serializedName: "take",
        type: {
            name: "Number"
        }
    }
};
export const apiVersion = {
    parameterPath: "apiVersion",
    mapper: {
        defaultValue: "2020-07-20-preview1",
        isConstant: true,
        serializedName: "api-version",
        type: {
            name: "String"
        }
    }
};
export const contentType = {
    parameterPath: ["options", "contentType"],
    mapper: {
        defaultValue: "application/json",
        isConstant: true,
        serializedName: "Content-Type",
        type: {
            name: "String"
        }
    }
};
export const body = {
    parameterPath: "body",
    mapper: LocationOptionsQueriesMapper
};
export const locationType = {
    parameterPath: "locationType",
    mapper: {
        serializedName: "locationType",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const countryCode = {
    parameterPath: "countryCode",
    mapper: {
        serializedName: "countryCode",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const phonePlanId = {
    parameterPath: "phonePlanId",
    mapper: {
        serializedName: "phonePlanId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const capabilitiesUpdateId = {
    parameterPath: "capabilitiesUpdateId",
    mapper: {
        serializedName: "capabilitiesUpdateId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body1 = {
    parameterPath: "body",
    mapper: UpdateNumberCapabilitiesRequestMapper
};
export const body2 = {
    parameterPath: "body",
    mapper: NumberConfigurationPhoneNumberMapper
};
export const body3 = {
    parameterPath: "body",
    mapper: NumberConfigurationMapper
};
export const includeRateInformation = {
    parameterPath: ["options", "includeRateInformation"],
    mapper: {
        serializedName: "includeRateInformation",
        type: {
            name: "Boolean"
        }
    }
};
export const phonePlanGroupId = {
    parameterPath: "phonePlanGroupId",
    mapper: {
        serializedName: "phonePlanGroupId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const phonePlanId1 = {
    parameterPath: "phonePlanId",
    mapper: {
        serializedName: "phonePlanId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const releaseId = {
    parameterPath: "releaseId",
    mapper: {
        serializedName: "releaseId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body4 = {
    parameterPath: "body",
    mapper: ReleaseRequestMapper
};
export const searchId = {
    parameterPath: "searchId",
    mapper: {
        serializedName: "searchId",
        required: true,
        type: {
            name: "String"
        }
    }
};
export const body5 = {
    parameterPath: "body",
    mapper: CreateSearchOptionsMapper
};
export const nextLink = {
    parameterPath: "nextLink",
    mapper: {
        serializedName: "nextLink",
        required: true,
        type: {
            name: "String"
        }
    },
    skipEncoding: true
};
//# sourceMappingURL=parameters.js.map