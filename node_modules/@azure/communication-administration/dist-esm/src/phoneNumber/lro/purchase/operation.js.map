{"version":3,"file":"operation.js","sourceRoot":"","sources":["../../../../../src/phoneNumber/lro/purchase/operation.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { VoidResponse } from \"../../../common/models\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { PurchaseReservationPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PurchaseReservationOptions } from \"../../models\";\nimport { PhoneNumberReservationPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for purchasing a phone number reservation.\n */\nexport class PurchaseReservationPollOperation extends PhoneNumberReservationPollOperationBase<\n  PurchaseReservationPollOperationState,\n  void\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPollOperation\n   *\n   * @param {PurchaseReservationPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} _client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: PurchaseReservationPollOperationState,\n    private _client: PhoneNumberAdministration,\n    private requestOptions: OperationOptions\n  ) {\n    super(state, _client);\n  }\n\n  /**\n   * Purchases the phone number(s) in the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation being purchased.\n   * @param {PurchaseReservationOptions} options Additional request options.\n   */\n  private async purchaseReservation(\n    reservationId: string,\n    options: PurchaseReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-purchaseReservation\",\n      options\n    );\n    try {\n      const { _response } = await this._client.purchaseSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<PurchaseReservationPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<PurchaseReservationPollOperationState> = {}\n  ): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        await this.purchaseReservation(reservationId, this.requestOptions);\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted) {\n        const result = await this.getReservation(reservationId, this.requestOptions);\n        state.isCompleted = isComplete(result, \"Success\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n\n  /**\n   * Reaches to the service and cancels the operation, also updating the poll operation.\n   */\n  public async cancel(): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId, options = {} } = state;\n\n    if (reservationId) {\n      await this.cancelReservation(reservationId, options);\n    }\n\n    state.isCancelled = true;\n\n    return this;\n  }\n}\n"]}