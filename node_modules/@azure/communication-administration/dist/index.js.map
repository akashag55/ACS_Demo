{"version":3,"file":"index.js","sources":["../src/communicationIdentity/generated/src/models/mappers.ts","../src/communicationIdentity/generated/src/models/parameters.ts","../src/communicationIdentity/generated/src/operations/communicationIdentity.ts","../src/communicationIdentity/generated/src/identityRestClientContext.ts","../src/communicationIdentity/generated/src/identityRestClient.ts","../src/communicationIdentity/constants.ts","../src/common/logger.ts","../src/common/tracing.ts","../src/common/mappers.ts","../src/communicationIdentity/communicationIdentityClient.ts","../src/phoneNumber/generated/src/models/mappers.ts","../src/phoneNumber/generated/src/models/parameters.ts","../src/phoneNumber/generated/src/operations/phoneNumberAdministration.ts","../src/phoneNumber/generated/src/phoneNumberRestClientContext.ts","../src/phoneNumber/generated/src/phoneNumberRestClient.ts","../src/phoneNumber/constants.ts","../src/phoneNumber/lro/phoneNumberPollerBase.ts","../src/phoneNumber/lro/utils.ts","../src/phoneNumber/lro/release/operation.ts","../src/phoneNumber/lro/release/poller.ts","../src/phoneNumber/lro/reserve/operation.ts","../src/phoneNumber/lro/reserve/poller.ts","../src/phoneNumber/lro/purchase/operation.ts","../src/phoneNumber/lro/purchase/poller.ts","../src/phoneNumber/phoneNumberAdministrationClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const CommunicationIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentity\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityUpdateRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityUpdateRequest\",\n    modelProperties: {\n      tokensValidFrom: {\n        serializedName: \"tokensValidFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationTokenRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationTokenRequest\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityToken: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityToken\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      token: {\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"expiresOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationURLParameter,\n  OperationQueryParameter,\n  OperationParameter\n} from \"@azure/core-http\";\nimport {\n  CommunicationIdentityUpdateRequest as CommunicationIdentityUpdateRequestMapper,\n  CommunicationTokenRequest as CommunicationTokenRequestMapper\n} from \"../models/mappers\";\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-07-20-preview2\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/merge-patch+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CommunicationIdentityUpdateRequestMapper\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CommunicationTokenRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IdentityRestClient } from \"../identityRestClient\";\nimport {\n  CommunicationIdentityCreateResponse,\n  CommunicationIdentityUpdateRequest,\n  CommunicationTokenRequest,\n  CommunicationIdentityIssueTokenResponse\n} from \"../models\";\n\n/**\n * Class representing a CommunicationIdentity.\n */\nexport class CommunicationIdentity {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class CommunicationIdentity class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Create a new identity.\n   * @param options The options parameters.\n   */\n  create(options?: coreHttp.OperationOptions): Promise<CommunicationIdentityCreateResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      createOperationSpec\n    ) as Promise<CommunicationIdentityCreateResponse>;\n  }\n\n  /**\n   * Delete the identity, revoke all tokens of the identity and delete all associated data.\n   * @param id Identifier of the identity to be deleted.\n   * @param options The options parameters.\n   */\n  delete(id: string, options?: coreHttp.OperationOptions): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, options: operationOptions },\n      deleteOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Update an Identity.\n   * @param id Identifier of the identity.\n   * @param body The properties of the identity to be updated.\n   * @param options The options parameters.\n   */\n  update(\n    id: string,\n    body: CommunicationIdentityUpdateRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, body, options: operationOptions },\n      updateOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Generate a new token for an identity.\n   * @param id Identifier of the identity to issue token for.\n   * @param body Requesting scopes for the new token.\n   * @param options The options parameters.\n   */\n  issueToken(\n    id: string,\n    body: CommunicationTokenRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<CommunicationIdentityIssueTokenResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, body, options: operationOptions },\n      issueTokenOperationSpec\n    ) as Promise<CommunicationIdentityIssueTokenResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentity\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"DELETE\",\n  responses: { 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  serializer\n};\nconst updateOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"PATCH\",\n  responses: { 204: {} },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst issueTokenOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}/token\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityToken\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-administration-identity\";\nconst packageVersion = \"1.0.0-beta.4\";\n\nexport class IdentityRestClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the IdentityRestClientContext class.\n   * @param endpoint Auth and Identity endpoint\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2020-07-20-preview2\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { IdentityRestClientContext } from \"./identityRestClientContext\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nclass IdentityRestClient extends IdentityRestClientContext {\n  /**\n   * Initializes a new instance of the IdentityRestClient class.\n   * @param endpoint Auth and Identity endpoint\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    super(endpoint, options);\n    this.communicationIdentity = new operations.CommunicationIdentity(this);\n  }\n\n  communicationIdentity: operations.CommunicationIdentity;\n}\n\n// Operation Specifications\n\nexport {\n  IdentityRestClient,\n  IdentityRestClientContext,\n  Models as IdentityRestModels,\n  Mappers as IdentityRestMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0-beta.4\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The @azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-administration\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions } from \"@azure/core-http\";\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanOptions, SpanKind } from \"@opentelemetry/api\";\n\ntype OperationTracingOptions = OperationOptions[\"tracingOptions\"];\n\n/**\n * Creates a span using the global tracer.\n * @ignore\n * @param name The name of the operation being performed.\n * @param tracingOptions The options for the underlying http request.\n */\nexport function createSpan<T extends OperationOptions>(\n  operationName: string,\n  operationOptions: T\n): { span: Span; updatedOptions: T } {\n  const tracer = getTracer();\n  const tracingOptions = operationOptions.tracingOptions || {};\n  const spanOptions: SpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Communication.${operationName}`, spanOptions);\n\n  span.setAttribute(\"az.namespace\", \"Microsoft.Communication\");\n\n  let newSpanOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newSpanOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span.context(),\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Communication\"\n      }\n    };\n  }\n\n  const newTracingOptions: OperationTracingOptions = {\n    ...tracingOptions,\n    spanOptions: newSpanOptions\n  };\n\n  const newOperationOptions: T = {\n    ...operationOptions,\n    tracingOptions: newTracingOptions\n  };\n\n  return {\n    span,\n    updatedOptions: newOperationOptions\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse, HttpResponse } from \"@azure/core-http\";\nimport { WithResponse } from \"..\";\n\n/**\n * Attach http response to a model\n */\nexport const attachHttpResponse = <T>(\n  model: T,\n  httpResponse: (HttpResponse & { bodyAsText: string; parsedBody: any }) | HttpOperationResponse\n): WithResponse<T> => {\n  const { parsedBody, bodyAsText, ...r } = httpResponse;\n  return Object.defineProperty(model, \"_response\", {\n    value: r\n  });\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  createCommunicationAuthPolicy,\n  parseClientArguments,\n  isKeyCredential,\n  CommunicationUserIdentifier\n} from \"@azure/communication-common\";\nimport { isTokenCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  OperationOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { CommunicationIdentity, IdentityRestClient } from \"./generated/src/identityRestClient\";\nimport { SDK_VERSION } from \"./constants\";\nimport { logger } from \"../common/logger\";\nimport { createSpan } from \"../common/tracing\";\nimport {\n  CommunicationIdentityOptions,\n  TokenScope,\n  IssueTokenResponse,\n  CreateUserResponse,\n  CommunicationUserToken\n} from \"./models\";\nimport { VoidResponse } from \"../common/models\";\nimport { attachHttpResponse } from \"../common/mappers\";\n\nconst isCommunicationIdentityOptions = (options: any): options is CommunicationIdentityOptions =>\n  options && !isTokenCredential(options) && !isKeyCredential(options);\n\n/**\n * Client class for interacting with Azure Communication Services User Token Management.\n */\nexport class CommunicationIdentityClient {\n  /**\n   * A reference to the auto-generated UserToken HTTP client.\n   */\n  private readonly client: CommunicationIdentity;\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class.\n   * @param connectionString Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(connectionString: string, options?: CommunicationIdentityOptions);\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using an Azure KeyCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential An object that is used to authenticate requests to the service. Use the AzureKeyCredential or `@azure/identity` to create a credential.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: KeyCredential,\n    options?: CommunicationIdentityOptions\n  );\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using a TokenCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net)\n   * @param credential TokenCredential that is used to authenticate requests to the service.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: TokenCredential,\n    options?: CommunicationIdentityOptions\n  );\n  /**\n   * Creates an instance of CommunicationIdentity.\n   *\n   * @param {string} url The endpoint to the service\n   * @param {KeyCredential} credential An object that is used to authenticate requests to the service. Use the AzureKeyCredential or `@azure/identity` to create a credential.\n   * @param {CommunicationIdentityOptions} [options={}] Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | CommunicationIdentityOptions | TokenCredential,\n    maybeOptions: CommunicationIdentityOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isCommunicationIdentityOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n    const libInfo = `azsdk-js-communication-administration/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.client = new IdentityRestClient(url, pipeline).communicationIdentity;\n  }\n\n  /**\n   * Creates a scoped user token.\n   *\n   * @param {CommunicationUser} user The user whose tokens are being revoked.\n   * @param {TokenScope[]} scopes Scopes to include in the token.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async issueToken(\n    user: CommunicationUserIdentifier,\n    scopes: TokenScope[],\n    options: OperationOptions = {}\n  ): Promise<IssueTokenResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-issueToken\", options);\n    try {\n      const { token, id, expiresOn, _response } = await this.client.issueToken(\n        user.communicationUserId,\n        { scopes },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      const results: CommunicationUserToken = {\n        token,\n        expiresOn,\n        user: { communicationUserId: id }\n      };\n      return attachHttpResponse(results, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Revokes all data and tokens created for a user.\n   *\n   * @param {CommunicationUser} user The user whose tokens are being revoked.\n   * @param {Date} tokensValidFrom Tokens issued before this time will be revoked.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async revokeTokens(\n    user: CommunicationUserIdentifier,\n    tokensValidFrom: Date = new Date(),\n    options: OperationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-revokeTokens\", options);\n    try {\n      const { _response } = await this.client.update(\n        user.communicationUserId,\n        {\n          tokensValidFrom\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a single user.\n   *\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async createUser(options: OperationOptions = {}): Promise<CreateUserResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-createUser\", options);\n    try {\n      const { id, _response } = await this.client.create(\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      const user: CommunicationUserIdentifier = { communicationUserId: id };\n      return attachHttpResponse(user, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Triggers revocation event for user and deletes all its data.\n   *\n   * @param {CommunicationUser} user The user being deleted.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async deleteUser(\n    user: CommunicationUserIdentifier,\n    options: OperationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-deleteUser\", options);\n    try {\n      const { _response } = await this.client.delete(\n        user.communicationUserId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\nexport { CommunicationTokenRequest, CommunicationIdentityToken } from \"./generated/src/models\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const AcquiredPhoneNumbers: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcquiredPhoneNumbers\",\n    modelProperties: {\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"AcquiredPhoneNumber\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcquiredPhoneNumber: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcquiredPhoneNumber\",\n    modelProperties: {\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      acquiredCapabilities: {\n        serializedName: \"acquiredCapabilities\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      availableCapabilities: {\n        serializedName: \"availableCapabilities\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      assignmentStatus: {\n        serializedName: \"assignmentStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      placeName: {\n        serializedName: \"placeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      activationState: {\n        serializedName: \"activationState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorBody: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsQueries: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsQueries\",\n    modelProperties: {\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsQuery\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsQuery: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsQuery\",\n    modelProperties: {\n      labelId: {\n        serializedName: \"labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      optionsValue: {\n        serializedName: \"optionsValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AreaCodes: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AreaCodes\",\n    modelProperties: {\n      primaryAreaCodes: {\n        serializedName: \"primaryAreaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      secondaryAreaCodes: {\n        serializedName: \"secondaryAreaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdatePhoneNumberCapabilitiesResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdatePhoneNumberCapabilitiesResponse\",\n    modelProperties: {\n      capabilitiesUpdateId: {\n        serializedName: \"capabilitiesUpdateId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      capabilitiesUpdateStatus: {\n        serializedName: \"capabilitiesUpdateStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberCapabilitiesUpdates: {\n        serializedName: \"phoneNumberCapabilitiesUpdates\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"NumberUpdateCapabilities\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NumberUpdateCapabilities: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberUpdateCapabilities\",\n    modelProperties: {\n      add: {\n        serializedName: \"add\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      remove: {\n        serializedName: \"remove\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateNumberCapabilitiesRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateNumberCapabilitiesRequest\",\n    modelProperties: {\n      phoneNumberCapabilitiesUpdate: {\n        serializedName: \"phoneNumberCapabilitiesUpdate\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"NumberUpdateCapabilities\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateNumberCapabilitiesResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateNumberCapabilitiesResponse\",\n    modelProperties: {\n      capabilitiesUpdateId: {\n        serializedName: \"capabilitiesUpdateId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberCountries: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberCountries\",\n    modelProperties: {\n      countries: {\n        serializedName: \"countries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PhoneNumberCountry\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberCountry: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberCountry\",\n    modelProperties: {\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      countryCode: {\n        serializedName: \"countryCode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfigurationPhoneNumber: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfigurationPhoneNumber\",\n    modelProperties: {\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfigurationResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfigurationResponse\",\n    modelProperties: {\n      pstnConfiguration: {\n        serializedName: \"pstnConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PstnConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const PstnConfiguration: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PstnConfiguration\",\n    modelProperties: {\n      callbackUrl: {\n        serializedName: \"callbackUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfiguration: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfiguration\",\n    modelProperties: {\n      pstnConfiguration: {\n        serializedName: \"pstnConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PstnConfiguration\"\n        }\n      },\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlanGroups: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlanGroups\",\n    modelProperties: {\n      phonePlanGroups: {\n        serializedName: \"phonePlanGroups\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"PhonePlanGroup\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlanGroup: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlanGroup\",\n    modelProperties: {\n      phonePlanGroupId: {\n        serializedName: \"phonePlanGroupId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberType: {\n        serializedName: \"phoneNumberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedDescription: {\n        serializedName: \"localizedDescription\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      carrierDetails: {\n        serializedName: \"carrierDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"CarrierDetails\"\n        }\n      },\n      rateInformation: {\n        serializedName: \"rateInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"RateInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const CarrierDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CarrierDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RateInformation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RateInformation\",\n    modelProperties: {\n      monthlyRate: {\n        serializedName: \"monthlyRate\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currencyType: {\n        defaultValue: \"USD\",\n        isConstant: true,\n        serializedName: \"currencyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rateErrorMessage: {\n        serializedName: \"rateErrorMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlansResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlansResponse\",\n    modelProperties: {\n      phonePlans: {\n        serializedName: \"phonePlans\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"PhonePlan\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlan: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlan\",\n    modelProperties: {\n      phonePlanId: {\n        serializedName: \"phonePlanId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      locationType: {\n        serializedName: \"locationType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      areaCodes: {\n        serializedName: \"areaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      maximumSearchSize: {\n        serializedName: \"maximumSearchSize\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsResponse\",\n    modelProperties: {\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"LocationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptions\",\n    modelProperties: {\n      labelId: {\n        serializedName: \"labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labelName: {\n        serializedName: \"labelName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"LocationOptions\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberRelease: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberRelease\",\n    modelProperties: {\n      releaseId: {\n        serializedName: \"releaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberReleaseStatusDetails: {\n        serializedName: \"phoneNumberReleaseStatusDetails\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"PhoneNumberReleaseDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberReleaseDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberReleaseDetails\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReleaseRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReleaseRequest\",\n    modelProperties: {\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ReleaseResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReleaseResponse\",\n    modelProperties: {\n      releaseId: {\n        serializedName: \"releaseId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberEntities: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberEntities\",\n    modelProperties: {\n      entities: {\n        serializedName: \"entities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PhoneNumberEntity\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberEntity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberEntity\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      quantityObtained: {\n        serializedName: \"quantityObtained\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      focDate: {\n        serializedName: \"focDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberReservation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberReservation\",\n    modelProperties: {\n      reservationId: {\n        serializedName: \"searchId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phonePlanIds: {\n        serializedName: \"phonePlanIds\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      areaCode: {\n        serializedName: \"areaCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      reservationExpiryDate: {\n        serializedName: \"reservationExpiryDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateSearchOptions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateSearchOptions\",\n    modelProperties: {\n      displayName: {\n        constraints: {\n          MaxLength: 255\n        },\n        serializedName: \"displayName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        constraints: {\n          MaxLength: 255\n        },\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      phonePlanIds: {\n        serializedName: \"phonePlanIds\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      areaCode: {\n        serializedName: \"areaCode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        constraints: {\n          InclusiveMaximum: 2147483647,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateSearchResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateSearchResponse\",\n    modelProperties: {\n      searchId: {\n        serializedName: \"searchId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationURLParameter,\n  OperationQueryParameter,\n  OperationParameter\n} from \"@azure/core-http\";\nimport {\n  LocationOptionsQueries as LocationOptionsQueriesMapper,\n  UpdateNumberCapabilitiesRequest as UpdateNumberCapabilitiesRequestMapper,\n  NumberConfigurationPhoneNumber as NumberConfigurationPhoneNumberMapper,\n  NumberConfiguration as NumberConfigurationMapper,\n  ReleaseRequest as ReleaseRequestMapper,\n  CreateSearchOptions as CreateSearchOptionsMapper\n} from \"../models/mappers\";\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const locale: OperationQueryParameter = {\n  parameterPath: [\"options\", \"locale\"],\n  mapper: {\n    defaultValue: \"en-US\",\n    serializedName: \"locale\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const take: OperationQueryParameter = {\n  parameterPath: [\"options\", \"take\"],\n  mapper: {\n    defaultValue: 100,\n    serializedName: \"take\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-07-20-preview1\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: LocationOptionsQueriesMapper\n};\n\nexport const locationType: OperationQueryParameter = {\n  parameterPath: \"locationType\",\n  mapper: {\n    serializedName: \"locationType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const countryCode: OperationURLParameter = {\n  parameterPath: \"countryCode\",\n  mapper: {\n    serializedName: \"countryCode\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const phonePlanId: OperationQueryParameter = {\n  parameterPath: \"phonePlanId\",\n  mapper: {\n    serializedName: \"phonePlanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const capabilitiesUpdateId: OperationURLParameter = {\n  parameterPath: \"capabilitiesUpdateId\",\n  mapper: {\n    serializedName: \"capabilitiesUpdateId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: UpdateNumberCapabilitiesRequestMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: NumberConfigurationPhoneNumberMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: NumberConfigurationMapper\n};\n\nexport const includeRateInformation: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeRateInformation\"],\n  mapper: {\n    serializedName: \"includeRateInformation\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const phonePlanGroupId: OperationURLParameter = {\n  parameterPath: \"phonePlanGroupId\",\n  mapper: {\n    serializedName: \"phonePlanGroupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const phonePlanId1: OperationURLParameter = {\n  parameterPath: \"phonePlanId\",\n  mapper: {\n    serializedName: \"phonePlanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const releaseId: OperationURLParameter = {\n  parameterPath: \"releaseId\",\n  mapper: {\n    serializedName: \"releaseId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ReleaseRequestMapper\n};\n\nexport const searchId: OperationURLParameter = {\n  parameterPath: \"searchId\",\n  mapper: {\n    serializedName: \"searchId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CreateSearchOptionsMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PhoneNumberRestClient } from \"../phoneNumberRestClient\";\nimport {\n  PhoneNumberAdministrationGetAllPhoneNumbersOptionalParams,\n  PhoneNumberAdministrationGetAllPhoneNumbersResponse,\n  LocationOptionsQueries,\n  PhoneNumberAdministrationGetAllAreaCodesResponse,\n  PhoneNumberAdministrationGetCapabilitiesUpdateResponse,\n  UpdateNumberCapabilitiesRequest,\n  PhoneNumberAdministrationUpdateCapabilitiesResponse,\n  PhoneNumberAdministrationGetAllSupportedCountriesOptionalParams,\n  PhoneNumberAdministrationGetAllSupportedCountriesResponse,\n  NumberConfigurationPhoneNumber,\n  PhoneNumberAdministrationGetNumberConfigurationResponse,\n  NumberConfiguration,\n  PhoneNumberAdministrationGetPhonePlanGroupsOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanGroupsResponse,\n  PhoneNumberAdministrationGetPhonePlansOptionalParams,\n  PhoneNumberAdministrationGetPhonePlansResponse,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse,\n  PhoneNumberAdministrationGetReleaseByIdResponse,\n  ReleaseRequest,\n  PhoneNumberAdministrationReleasePhoneNumbersResponse,\n  PhoneNumberAdministrationGetAllReleasesOptionalParams,\n  PhoneNumberAdministrationGetAllReleasesResponse,\n  PhoneNumberAdministrationGetSearchByIdResponse,\n  CreateSearchOptions,\n  PhoneNumberAdministrationCreateSearchResponse,\n  PhoneNumberAdministrationGetAllSearchesOptionalParams,\n  PhoneNumberAdministrationGetAllSearchesResponse,\n  PhoneNumberAdministrationGetAllPhoneNumbersNextOptionalParams,\n  PhoneNumberAdministrationGetAllPhoneNumbersNextResponse,\n  PhoneNumberAdministrationGetAllSupportedCountriesNextOptionalParams,\n  PhoneNumberAdministrationGetAllSupportedCountriesNextResponse,\n  PhoneNumberAdministrationGetPhonePlanGroupsNextOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanGroupsNextResponse,\n  PhoneNumberAdministrationGetPhonePlansNextOptionalParams,\n  PhoneNumberAdministrationGetPhonePlansNextResponse,\n  PhoneNumberAdministrationGetAllReleasesNextOptionalParams,\n  PhoneNumberAdministrationGetAllReleasesNextResponse,\n  PhoneNumberAdministrationGetAllSearchesNextOptionalParams,\n  PhoneNumberAdministrationGetAllSearchesNextResponse\n} from \"../models\";\n\n/**\n * Class representing a PhoneNumberAdministration.\n */\nexport class PhoneNumberAdministration {\n  private readonly client: PhoneNumberRestClient;\n\n  /**\n   * Initialize a new instance of the class PhoneNumberAdministration class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PhoneNumberRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of the acquired phone numbers.\n   * @param options The options parameters.\n   */\n  getAllPhoneNumbers(\n    options?: PhoneNumberAdministrationGetAllPhoneNumbersOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllPhoneNumbersResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllPhoneNumbersOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllPhoneNumbersResponse>;\n  }\n\n  /**\n   * Gets a list of the supported area codes\n   * @param locationType The type of location information required by the plan.\n   * @param countryCode The ISO 3166-2 country code\n   * @param phonePlanId The plan id from which to search area codes.\n   * @param body Location options for when location type is selection.\n   * @param options The options parameters.\n   */\n  getAllAreaCodes(\n    locationType: string,\n    countryCode: string,\n    phonePlanId: string,\n    body: LocationOptionsQueries,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetAllAreaCodesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      {\n        locationType,\n        countryCode,\n        phonePlanId,\n        body,\n        options: operationOptions\n      },\n      getAllAreaCodesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllAreaCodesResponse>;\n  }\n\n  /**\n   * Get capabilities by capabilities update id.\n   * @param capabilitiesUpdateId\n   * @param options The options parameters.\n   */\n  getCapabilitiesUpdate(\n    capabilitiesUpdateId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetCapabilitiesUpdateResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { capabilitiesUpdateId, options: operationOptions },\n      getCapabilitiesUpdateOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetCapabilitiesUpdateResponse>;\n  }\n\n  /**\n   * Adds or removes phone number capabilities\n   * @param body Represents a numbers capabilities update request\n   * @param options The options parameters.\n   */\n  updateCapabilities(\n    body: UpdateNumberCapabilitiesRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationUpdateCapabilitiesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      updateCapabilitiesOperationSpec\n    ) as Promise<PhoneNumberAdministrationUpdateCapabilitiesResponse>;\n  }\n\n  /**\n   * Gets a list of supported countries\n   * @param options The options parameters.\n   */\n  getAllSupportedCountries(\n    options?: PhoneNumberAdministrationGetAllSupportedCountriesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSupportedCountriesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllSupportedCountriesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSupportedCountriesResponse>;\n  }\n\n  /**\n   * Endpoint for getting number configurations\n   * @param body The phone number whose configuration is to be fetched\n   * @param options The options parameters.\n   */\n  getNumberConfiguration(\n    body: NumberConfigurationPhoneNumber,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetNumberConfigurationResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      getNumberConfigurationOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetNumberConfigurationResponse>;\n  }\n\n  /**\n   * Endpoint for configuring a pstn number\n   * @param body Details of pstn number configuration of the given phoneNumber\n   * @param options The options parameters.\n   */\n  configureNumber(\n    body: NumberConfiguration,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      configureNumberOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Endpoint for unconfiguring a pstn number by removing the configuration\n   * @param body The phone number to un-configure\n   * @param options The options parameters.\n   */\n  unconfigureNumber(\n    body: NumberConfigurationPhoneNumber,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      unconfigureNumberOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Gets a list of phone plan groups for the given country\n   * @param countryCode The ISO 3166-2 country code.\n   * @param options The options parameters.\n   */\n  getPhonePlanGroups(\n    countryCode: string,\n    options?: PhoneNumberAdministrationGetPhonePlanGroupsOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanGroupsResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, options: operationOptions },\n      getPhonePlanGroupsOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanGroupsResponse>;\n  }\n\n  /**\n   * Gets a list of phone plans for a phone plan group\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param options The options parameters.\n   */\n  getPhonePlans(\n    countryCode: string,\n    phonePlanGroupId: string,\n    options?: PhoneNumberAdministrationGetPhonePlansOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlansResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, options: operationOptions },\n      getPhonePlansOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlansResponse>;\n  }\n\n  /**\n   * Gets a list of location options for a phone plan\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param phonePlanId\n   * @param options The options parameters.\n   */\n  getPhonePlanLocationOptions(\n    countryCode: string,\n    phonePlanGroupId: string,\n    phonePlanId: string,\n    options?: PhoneNumberAdministrationGetPhonePlanLocationOptionsOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, phonePlanId, options: operationOptions },\n      getPhonePlanLocationOptionsOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse>;\n  }\n\n  /**\n   * Gets a release by a release id\n   * @param releaseId Represents the release id\n   * @param options The options parameters.\n   */\n  getReleaseById(\n    releaseId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetReleaseByIdResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { releaseId, options: operationOptions },\n      getReleaseByIdOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetReleaseByIdResponse>;\n  }\n\n  /**\n   * Creates a release for the given phone numbers\n   * @param body Config api Release request\n   * @param options The options parameters.\n   */\n  releasePhoneNumbers(\n    body: ReleaseRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationReleasePhoneNumbersResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      releasePhoneNumbersOperationSpec\n    ) as Promise<PhoneNumberAdministrationReleasePhoneNumbersResponse>;\n  }\n\n  /**\n   * Gets a list of all releases\n   * @param options The options parameters.\n   */\n  getAllReleases(\n    options?: PhoneNumberAdministrationGetAllReleasesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllReleasesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllReleasesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllReleasesResponse>;\n  }\n\n  /**\n   * Get search by search id\n   * @param searchId The search id to be searched for\n   * @param options The options parameters.\n   */\n  getSearchById(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetSearchByIdResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      getSearchByIdOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetSearchByIdResponse>;\n  }\n\n  /**\n   * Creates a phone number search\n   * @param body Defines the search options\n   * @param options The options parameters.\n   */\n  createSearch(\n    body: CreateSearchOptions,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationCreateSearchResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      createSearchOperationSpec\n    ) as Promise<PhoneNumberAdministrationCreateSearchResponse>;\n  }\n\n  /**\n   * Gets a list of all searches\n   * @param options The options parameters.\n   */\n  getAllSearches(\n    options?: PhoneNumberAdministrationGetAllSearchesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSearchesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllSearchesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSearchesResponse>;\n  }\n\n  /**\n   * Cancels the search. This means existing numbers in the search will be made available.\n   * @param searchId The search id to be canceled\n   * @param options The options parameters.\n   */\n  cancelSearch(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      cancelSearchOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Purchases the phone number search.\n   * @param searchId The search id to be purchased\n   * @param options The options parameters.\n   */\n  purchaseSearch(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      purchaseSearchOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * GetAllPhoneNumbersNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllPhoneNumbers method.\n   * @param options The options parameters.\n   */\n  getAllPhoneNumbersNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllPhoneNumbersNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllPhoneNumbersNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllPhoneNumbersNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllPhoneNumbersNextResponse>;\n  }\n\n  /**\n   * GetAllSupportedCountriesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllSupportedCountries\n   *                 method.\n   * @param options The options parameters.\n   */\n  getAllSupportedCountriesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllSupportedCountriesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSupportedCountriesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllSupportedCountriesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSupportedCountriesNextResponse>;\n  }\n\n  /**\n   * GetPhonePlanGroupsNext\n   * @param countryCode The ISO 3166-2 country code.\n   * @param nextLink The nextLink from the previous successful call to the GetPhonePlanGroups method.\n   * @param options The options parameters.\n   */\n  getPhonePlanGroupsNext(\n    countryCode: string,\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetPhonePlanGroupsNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanGroupsNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, nextLink, options: operationOptions },\n      getPhonePlanGroupsNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanGroupsNextResponse>;\n  }\n\n  /**\n   * GetPhonePlansNext\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param nextLink The nextLink from the previous successful call to the GetPhonePlans method.\n   * @param options The options parameters.\n   */\n  getPhonePlansNext(\n    countryCode: string,\n    phonePlanGroupId: string,\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetPhonePlansNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlansNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, nextLink, options: operationOptions },\n      getPhonePlansNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlansNextResponse>;\n  }\n\n  /**\n   * GetAllReleasesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllReleases method.\n   * @param options The options parameters.\n   */\n  getAllReleasesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllReleasesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllReleasesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllReleasesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllReleasesNextResponse>;\n  }\n\n  /**\n   * GetAllSearchesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllSearches method.\n   * @param options The options parameters.\n   */\n  getAllSearchesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllSearchesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSearchesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllSearchesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSearchesNextResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getAllPhoneNumbersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/phonenumbers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcquiredPhoneNumbers\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getAllAreaCodesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries/{countryCode}/areacodes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AreaCodes\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion, Parameters.locationType, Parameters.phonePlanId],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getCapabilitiesUpdateOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/capabilities/{capabilitiesUpdateId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdatePhoneNumberCapabilitiesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.capabilitiesUpdateId],\n  serializer\n};\nconst updateCapabilitiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/capabilities\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateNumberCapabilitiesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllSupportedCountriesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberCountries\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getNumberConfigurationOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NumberConfigurationResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst configureNumberOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration/configure\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst unconfigureNumberOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration/unconfigure\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getPhonePlanGroupsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlanGroups\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.locale,\n    Parameters.skip,\n    Parameters.take,\n    Parameters.apiVersion,\n    Parameters.includeRateInformation\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode],\n  serializer\n};\nconst getPhonePlansOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups/{phonePlanGroupId}/phoneplans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlansResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode, Parameters.phonePlanGroupId],\n  serializer\n};\nconst getPhonePlanLocationOptionsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups/{phonePlanGroupId}/phoneplans/{phonePlanId}/locationoptions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocationOptionsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.countryCode,\n    Parameters.phonePlanGroupId,\n    Parameters.phonePlanId1\n  ],\n  serializer\n};\nconst getReleaseByIdOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases/{releaseId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberRelease\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.releaseId],\n  serializer\n};\nconst releasePhoneNumbersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReleaseResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllReleasesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getSearchByIdOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberReservation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst createSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CreateSearchResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllSearchesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst cancelSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst purchaseSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}/purchase\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst getAllPhoneNumbersNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcquiredPhoneNumbers\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getAllSupportedCountriesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberCountries\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getPhonePlanGroupsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlanGroups\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.locale,\n    Parameters.skip,\n    Parameters.take,\n    Parameters.apiVersion,\n    Parameters.includeRateInformation\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode, Parameters.nextLink],\n  serializer\n};\nconst getPhonePlansNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlansResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.countryCode,\n    Parameters.phonePlanGroupId,\n    Parameters.nextLink\n  ],\n  serializer\n};\nconst getAllReleasesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getAllSearchesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { PhoneNumberRestClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-administration-phoneNumber\";\nconst packageVersion = \"1.0.0-beta.4\";\n\nexport class PhoneNumberRestClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the PhoneNumberRestClientContext class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: PhoneNumberRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2020-07-20-preview1\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { PhoneNumberRestClientContext } from \"./phoneNumberRestClientContext\";\nimport { PhoneNumberRestClientOptionalParams } from \"./models\";\n\nclass PhoneNumberRestClient extends PhoneNumberRestClientContext {\n  /**\n   * Initializes a new instance of the PhoneNumberRestClient class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: PhoneNumberRestClientOptionalParams) {\n    super(endpoint, options);\n    this.phoneNumberAdministration = new operations.PhoneNumberAdministration(this);\n  }\n\n  phoneNumberAdministration: operations.PhoneNumberAdministration;\n}\n\n// Operation Specifications\n\nexport {\n  PhoneNumberRestClient,\n  PhoneNumberRestClientContext,\n  Models as PhoneNumberRestModels,\n  Mappers as PhoneNumberRestMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0-beta.4\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { delay, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { Poller, PollOperation } from \"@azure/core-lro\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { VoidResponse } from \"../../common/models\";\nimport { attachHttpResponse } from \"../../common/mappers\";\nimport { createSpan } from \"../../common/tracing\";\nimport { PhoneNumberAdministration } from \"../generated/src/phoneNumberRestClient\";\nimport { CancelReservationOptions, GetReservationOptions, GetReservationResponse } from \"../models\";\nimport { PhoneNumberReservation } from \"../generated/src/models\";\n\n/**\n * Common properties and methods of the phone number pollers.\n */\nexport abstract class PhoneNumberPollerBase<TState, TResult> extends Poller<TState, TResult> {\n  /**\n   * Defines how much time the poller is going to wait before making a new request to the service.\n   */\n  public pollInterval: number = 2000;\n\n  /**\n   * The method used by the poller to wait before attempting to update its operation\n   */\n  async delay(): Promise<void> {\n    return delay(this.pollInterval);\n  }\n}\n\n/**\n * Common properties and methods of the phone number poller operations.\n */\nexport class PhoneNumberPollOperationBase<TState, TResult>\n  implements PollOperation<TState, TResult> {\n  /**\n   * Initializes a new instance of the phone number poll operation\n   *\n   * @param {TState} state The state of the poll operation\n   * @param {string} cancelMessage A message to dispaly when a poll operation is cancelled.\n   */\n  constructor(public state: TState, private cancelMessage: string = \"Canceling not supported.\") {}\n\n  /**\n   * Reaches to the service and updates the Poller operation.\n   */\n  public async update(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(\"Operation not supported\");\n  }\n\n  /**\n   * Reaches to the service and cancels the Poller operation and the underlying request.\n   */\n  public async cancel(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(this.cancelMessage);\n  }\n\n  /**\n   * @summary Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state\n    });\n  }\n}\n\n/**\n * Common properties and methods of the phone number reservation poller operations.\n */\nexport class PhoneNumberReservationPollOperationBase<TState, TResult>\n  implements PollOperation<TState, TResult> {\n  /**\n   * Initializes a new instance of the phone number reservation poll operation\n   *\n   * @param {TState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} client A reference to the generated client used to make requests internally.\n   * @param {string} cancelMessage A message to dispaly when a poll operation is cancelled.\n   */\n  constructor(\n    public state: TState,\n    private client: PhoneNumberAdministration,\n    private cancelMessage: string = \"Canceling not supported.\"\n  ) {}\n\n  /**\n   * Gets the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation to fetch.\n   * @param {GetReservationOptions} options Additional request options.\n   */\n  public async getReservation(\n    reservationId: string,\n    options: GetReservationOptions = {}\n  ): Promise<GetReservationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getReservation\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getSearchById(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberReservation>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Cancels the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation to cancel.\n   * @param {CancelReservationOptions} options Additional request options.\n   */\n  public async cancelReservation(\n    reservationId: string,\n    options: CancelReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-cancelReservation\",\n      options\n    );\n    try {\n      const { _response } = await this.client.cancelSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and updates the Poller operation.\n   */\n  public async update(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(\"Operation not supported\");\n  }\n\n  /**\n   * Reaches to the service and cancels the Poller operation and the underlying request.\n   */\n  public async cancel(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(this.cancelMessage);\n  }\n\n  /**\n   * @summary Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberReservation, SearchStatus } from \"../..\";\nimport { PhoneNumberRelease, ReleaseStatus } from \"../generated/src/models\";\n\nexport const isComplete = (\n  results: PhoneNumberReservation | PhoneNumberRelease,\n  completionStatus: SearchStatus | ReleaseStatus\n): boolean | never => {\n  if (results.status === \"Error\" || results.status === \"Failed\" || results.status === \"Expired\") {\n    throw new Error(JSON.stringify(results));\n  }\n\n  return results.status === completionStatus;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport {\n  GetReleaseOptions,\n  GetReleaseResponse,\n  ReleasePhoneNumbersOptions,\n  ReleasePhoneNumbersResponse\n} from \"../../models\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberRelease, ReleaseResponse } from \"../../generated/src/models\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { ReleasePhoneNumbersPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PhoneNumberPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for releasing a phone number or list of phone numbers.\n */\nexport class ReleasePhoneNumbersPollOperation extends PhoneNumberPollOperationBase<\n  ReleasePhoneNumbersPollOperationState,\n  PhoneNumberRelease\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPollOperation\n   *\n   * @param {ReleasePhoneNumbersPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: ReleasePhoneNumbersPollOperationState,\n    private client: PhoneNumberAdministration,\n    private requestOptions: OperationOptions\n  ) {\n    super(state, \"Canceling a release is not supported.\");\n  }\n\n  /**\n   * Request the release of a list of acquired phone numbers.\n   *\n   * @param {string[]} phoneNumbers The phone numbers to be released.\n   * @param {ReleasePhoneNumbersOptions} options Additional request options.\n   */\n  private async releasePhoneNumbers(\n    phoneNumbers: string[],\n    options: ReleasePhoneNumbersOptions = {}\n  ): Promise<ReleasePhoneNumbersResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-releasePhoneNumbers\",\n      options\n    );\n    try {\n      const { releaseId, _response } = await this.client.releasePhoneNumbers(\n        {\n          phoneNumbers\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<ReleaseResponse>({ releaseId }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the release associated with a given id.\n   *\n   * @param {string} releaseId The id of the release returned by releasePhoneNumbers.\n   * @param {GetReleaseOptions} options Additional request options.\n   */\n  private async getRelease(\n    releaseId: string,\n    options: GetReleaseOptions = {}\n  ): Promise<GetReleaseResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getRelease\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getReleaseById(\n        releaseId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberRelease>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<ReleasePhoneNumbersPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<ReleasePhoneNumbersPollOperationState> = {}\n  ): Promise<ReleasePhoneNumbersPollOperation> {\n    const { state } = this;\n    const { phoneNumbers } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        const { releaseId } = await this.releasePhoneNumbers(phoneNumbers, this.requestOptions);\n        state.releaseId = releaseId;\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted && state.releaseId) {\n        state.result = await this.getRelease(state.releaseId, this.requestOptions);\n        state.isCompleted = isComplete(state.result, \"Complete\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberRelease } from \"../../generated/src/models\";\nimport {\n  ReleasePhoneNumbersPollerOptions,\n  ReleasePhoneNumbersPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { ReleasePhoneNumbersPollOperation } from \"./operation\";\n\n/**\n * The poller for release a phone number or list of phone numbers.\n */\nexport class ReleasePhoneNumbersPoller extends PhoneNumberPollerBase<\n  ReleasePhoneNumbersPollOperationState,\n  PhoneNumberRelease\n> {\n  /**\n   * Initializes an instance of ReleasePhoneNumbersPoller\n   *\n   * @param {ReleasePhoneNumbersPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: ReleasePhoneNumbersPollerOptions) {\n    const { client, phoneNumbers, requestOptions = {}, pollInterval = 2000, resumeFrom } = options;\n    let state: ReleasePhoneNumbersPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new ReleasePhoneNumbersPollOperation(\n      {\n        ...state,\n        phoneNumbers\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { operationOptionsToRequestOptionsBase, RequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport {\n  CreateReservationRequest,\n  CreateReservationOptions,\n  CreatePhoneNumberReservationResponse,\n  CreateReservationResponse\n} from \"../../models\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberReservation } from \"../../generated/src/models\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { ReservePhoneNumbersPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PhoneNumberReservationPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for reserving phone numbers.\n */\nexport class ReservePhoneNumbersPollOperation extends PhoneNumberReservationPollOperationBase<\n  ReservePhoneNumbersPollOperationState,\n  PhoneNumberReservation\n> {\n  /**\n   * Initializes an instance of ReservePhoneNumbersPollOperation\n   *\n   * @param {PurchaseReservationPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} _client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: ReservePhoneNumbersPollOperationState,\n    private _client: PhoneNumberAdministration,\n    private requestOptions: RequestOptionsBase\n  ) {\n    super(state, _client);\n  }\n\n  /**\n   * Starts a search for phone numbers given some constraints such as name or area code. The phone numbers that are\n   * found will then be reserved.\n   *\n   * @param {CreateReservationRequest} reservationRequest Request properties to constraint the search scope.\n   * @param {CreateReservationOptions} options Additional request options.\n   */\n  private async createReservation(\n    reservationRequest: CreateReservationRequest,\n    options: CreateReservationOptions = {}\n  ): Promise<CreatePhoneNumberReservationResponse> {\n    const { name, description, phonePlanIds, areaCode, quantity } = reservationRequest;\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-createReservation\",\n      options\n    );\n    try {\n      const { searchId, _response } = await this._client.createSearch(\n        {\n          displayName: name,\n          description,\n          phonePlanIds,\n          quantity,\n          areaCode\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<CreateReservationResponse>({ reservationId: searchId }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<ReservePhoneNumbersPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<ReservePhoneNumbersPollOperationState> = {}\n  ): Promise<ReservePhoneNumbersPollOperation> {\n    const state = this.state;\n    const { reservationRequest } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        const { reservationId } = await this.createReservation(\n          reservationRequest,\n          this.requestOptions\n        );\n        state.reservationId = reservationId;\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted && state.reservationId) {\n        state.result = await this.getReservation(state.reservationId, this.requestOptions);\n        state.isCompleted = isComplete(state.result, \"Reserved\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n\n  /**\n   * Reaches to the service and cancels the operation, also updating the poll operation.\n   */\n  public async cancel(): Promise<ReservePhoneNumbersPollOperation> {\n    const state = this.state;\n    const { reservationId, options = {} } = state;\n\n    if (reservationId) {\n      await this.cancelReservation(reservationId, options);\n    }\n\n    state.isCancelled = true;\n\n    return this;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberReservation } from \"../../generated/src/models\";\nimport {\n  ReservePhoneNumbersPollerOptions,\n  ReservePhoneNumbersPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { ReservePhoneNumbersPollOperation } from \"./operation\";\n\n/**\n * The poller for reserving phone numbers.\n */\nexport class ReservePhoneNumbersPoller extends PhoneNumberPollerBase<\n  ReservePhoneNumbersPollOperationState,\n  PhoneNumberReservation\n> {\n  /**\n   * Initializes an instance of ReservePhoneNumbersPoller\n   *\n   * @param {ReservePhoneNumbersPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: ReservePhoneNumbersPollerOptions) {\n    const {\n      client,\n      reservationRequest,\n      requestOptions = {},\n      pollInterval = 2000,\n      resumeFrom\n    } = options;\n    let state: ReservePhoneNumbersPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new ReservePhoneNumbersPollOperation(\n      {\n        ...state,\n        reservationRequest\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { VoidResponse } from \"../../../common/models\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { PurchaseReservationPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PurchaseReservationOptions } from \"../../models\";\nimport { PhoneNumberReservationPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for purchasing a phone number reservation.\n */\nexport class PurchaseReservationPollOperation extends PhoneNumberReservationPollOperationBase<\n  PurchaseReservationPollOperationState,\n  void\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPollOperation\n   *\n   * @param {PurchaseReservationPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} _client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: PurchaseReservationPollOperationState,\n    private _client: PhoneNumberAdministration,\n    private requestOptions: OperationOptions\n  ) {\n    super(state, _client);\n  }\n\n  /**\n   * Purchases the phone number(s) in the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation being purchased.\n   * @param {PurchaseReservationOptions} options Additional request options.\n   */\n  private async purchaseReservation(\n    reservationId: string,\n    options: PurchaseReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-purchaseReservation\",\n      options\n    );\n    try {\n      const { _response } = await this._client.purchaseSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<PurchaseReservationPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<PurchaseReservationPollOperationState> = {}\n  ): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        await this.purchaseReservation(reservationId, this.requestOptions);\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted) {\n        const result = await this.getReservation(reservationId, this.requestOptions);\n        state.isCompleted = isComplete(result, \"Success\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n\n  /**\n   * Reaches to the service and cancels the operation, also updating the poll operation.\n   */\n  public async cancel(): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId, options = {} } = state;\n\n    if (reservationId) {\n      await this.cancelReservation(reservationId, options);\n    }\n\n    state.isCancelled = true;\n\n    return this;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PurchaseReservationPollerOptions,\n  PurchaseReservationPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { PurchaseReservationPollOperation } from \"./operation\";\n\n/**\n * The poller for purchasing a phone number reservation.\n */\nexport class PurchaseReservationPoller extends PhoneNumberPollerBase<\n  PurchaseReservationPollOperationState,\n  void\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPoller\n   *\n   * @param {PurchaseReservationPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: PurchaseReservationPollerOptions) {\n    const { client, reservationId, requestOptions = {}, pollInterval = 2000, resumeFrom } = options;\n    let state: PurchaseReservationPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new PurchaseReservationPollOperation(\n      {\n        ...state,\n        reservationId\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport {\n  parseClientArguments,\n  isKeyCredential,\n  createCommunicationAuthPolicy\n} from \"@azure/communication-common\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  PipelineOptions,\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { logger } from \"../common/logger\";\nimport { createSpan } from \"../common/tracing\";\nimport {\n  PhoneNumberRestClient,\n  PhoneNumberAdministration\n} from \"./generated/src/phoneNumberRestClient\";\nimport {\n  AcquiredPhoneNumber,\n  PhoneNumberCountry,\n  PhonePlanGroup,\n  PhonePlan,\n  PhoneNumberEntity,\n  UpdatePhoneNumberCapabilitiesResponse,\n  UpdateNumberCapabilitiesResponse,\n  PhoneNumberRelease,\n  AreaCodes,\n  NumberConfigurationResponse,\n  LocationOptionsResponse,\n  PhoneNumberReservation\n} from \"./generated/src/models\";\nimport { SDK_VERSION } from \"./constants\";\nimport {\n  GetAreaCodesOptions,\n  ConfigurePhoneNumberOptions,\n  ListSupportedCountriesOptions,\n  ListPhoneNumbersOptions,\n  ListPhonePlanGroupsOptions,\n  UpdateCapabilitiesOptions,\n  GetAreaCodesRequest,\n  PageableOptions,\n  ListPhonePlansRequest,\n  ListPhonePlansOptions,\n  GetPhonePlanLocationOptionsRequest,\n  GetPhonePlanLocationOptionsOptions,\n  ConfigurePhoneNumberRequest,\n  UpdateNumbersCapabilitiesResponse,\n  PhoneNumberCapabilitiesUpdates,\n  GetCapabilitiesUpdateResponse,\n  GetAreaCodesResponse,\n  GetPhoneNumberConfigurationResponse,\n  GetPhonePlanLocationOptionsResponse,\n  GetCapabilitiesUpdateOptions,\n  GetPhoneNumberConfigurationOptions,\n  UnconfigurePhoneNumberOptions,\n  CreateReservationRequest,\n  GetReservationOptions,\n  GetReservationResponse,\n  CancelReservationOptions\n} from \"./models\";\nimport { VoidResponse } from \"../common/models\";\nimport { attachHttpResponse } from \"../common/mappers\";\nimport {\n  BeginPurchaseReservationOptions,\n  BeginReleasePhoneNumbersOptions,\n  BeginReservePhoneNumbersOptions\n} from \"./lroModels\";\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport { ReleasePhoneNumbersPoller } from \"./lro/release/poller\";\nimport { ReservePhoneNumbersPoller } from \"./lro/reserve/poller\";\nimport { PurchaseReservationPoller } from \"./lro/purchase/poller\";\n\n/**\n * Client options used to configure the UserTokenClient API requests.\n */\nexport interface PhoneNumberAdministrationClientOptions extends PipelineOptions {}\n\nconst isPhoneNumberAdministrationClientOptions = (\n  options: any\n): options is PhoneNumberAdministrationClientOptions => options && !isKeyCredential(options);\n\n/**\n * Client class for interacting with Azure Communication Services PhoneNumber Administration.\n */\nexport class PhoneNumberAdministrationClient {\n  /**\n   * A reference to the auto-generated PhoneNumber HTTP client.\n   */\n  private readonly client: PhoneNumberAdministration;\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class.\n   * @param connectionString Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(connectionString: string, options?: PhoneNumberAdministrationClientOptions);\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class using an Azure KeyCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential An object that is used to authenticate requests to the service. Use the Azure KeyCredential or `@azure/identity` to create a credential.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: KeyCredential,\n    options?: PhoneNumberAdministrationClientOptions\n  );\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class using a TokenCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential TokenCredential that is used to authenticate requests to the service.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: TokenCredential,\n    options?: PhoneNumberAdministrationClientOptions\n  );\n\n  public constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | TokenCredential | PhoneNumberAdministrationClientOptions,\n    maybeOptions: PhoneNumberAdministrationClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isPhoneNumberAdministrationClientOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n    const libInfo = `azsdk-js-communication-administration/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.client = new PhoneNumberRestClient(url, pipeline).phoneNumberAdministration;\n  }\n\n  /**\n   * Configures a phone number, for example to assign a callbackUrl.\n   * @param config The configuration details\n   * @param options Additional request options.\n   */\n  public async configurePhoneNumber(\n    config: ConfigurePhoneNumberRequest,\n    options: ConfigurePhoneNumberOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-configurePhoneNumber\",\n      options\n    );\n    const { phoneNumber, callbackUrl } = config;\n    try {\n      const { _response } = await this.client.configureNumber(\n        {\n          phoneNumber,\n          pstnConfiguration: {\n            callbackUrl: callbackUrl,\n            applicationId: updatedOptions.applicationId\n          }\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Unconfigure a phone number, resetting its' configuration.\n   * @param phoneNumber Phone Number to unconfigure.\n   * @param options Additional request options.\n   */\n  public async unconfigurePhoneNumber(\n    phoneNumber: string,\n    options: UnconfigurePhoneNumberOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-unconfigurePhoneNumber\",\n      options\n    );\n    try {\n      const { _response } = await this.client.unconfigureNumber(\n        { phoneNumber },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates the capabilities for a list of phone numbers.\n   * The response includes the id of the created update capabilities request,\n   * remember that id for subsequent calls to getCapabilitiesUpdate.\n   * @param phoneNumberCapabilitiesUpdates Dictionary containing a list of phone numbers and their capabilities updates.\n   * @param options Additional request options.\n   */\n  public async updatePhoneNumbersCapabilities(\n    phoneNumberCapabilitiesUpdates: PhoneNumberCapabilitiesUpdates,\n    options: UpdateCapabilitiesOptions = {}\n  ): Promise<UpdateNumbersCapabilitiesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-updatePhoneNumbersCapabilities\",\n      options\n    );\n    try {\n      const { capabilitiesUpdateId, _response } = await this.client.updateCapabilities(\n        {\n          phoneNumberCapabilitiesUpdate: phoneNumberCapabilitiesUpdates\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<UpdateNumberCapabilitiesResponse>(\n        { capabilitiesUpdateId },\n        _response\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get the update capabilities request associated with a given id.\n   * @param capabilitiesUpdateId  The id associated with the request.\n   * @param options Additional request options.\n   */\n  public async getCapabilitiesUpdate(\n    capabilitiesUpdateId: string,\n    options: GetCapabilitiesUpdateOptions = {}\n  ): Promise<GetCapabilitiesUpdateResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getCapabilitiesUpdate\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getCapabilitiesUpdate(\n        capabilitiesUpdateId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<UpdatePhoneNumberCapabilitiesResponse>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets a list of the supported area codes based on location.\n   * @param request Request properties to constraint the search scope.\n   * @param options Additional request options.\n   */\n  public async getAreaCodes(\n    request: GetAreaCodesRequest,\n    options: GetAreaCodesOptions = {}\n  ): Promise<GetAreaCodesResponse> {\n    const { countryCode: country, locationType, phonePlanId, locationOptionsQueries } = request;\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getAllAreaCodes\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getAllAreaCodes(\n        locationType,\n        country,\n        phonePlanId,\n        locationOptionsQueries,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<AreaCodes>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the configuration for a given phone number.\n   * @param phoneNumber The E.164 representation of the phone number whose configuration is requested.\n   * @param options Additional request options.\n   */\n  public async getPhoneNumberConfiguration(\n    phoneNumber: string,\n    options: GetPhoneNumberConfigurationOptions = {}\n  ): Promise<GetPhoneNumberConfigurationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getPhoneNumberConfiguration\",\n      options\n    );\n    try {\n      const { pstnConfiguration, _response } = await this.client.getNumberConfiguration(\n        { phoneNumber },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<NumberConfigurationResponse>({ pstnConfiguration }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the location options for a given phone plan.\n   * @param request Request properties to constraint the search scope.\n   * @param options Additional request options.\n   */\n  public async getPhonePlanLocationOptions(\n    request: GetPhonePlanLocationOptionsRequest,\n    options: GetPhonePlanLocationOptionsOptions = {}\n  ): Promise<GetPhonePlanLocationOptionsResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getPhonePlanLocationOptions\",\n      options\n    );\n    const { countryCode, phonePlanGroupId, phonePlanId } = request;\n    try {\n      const { locationOptions, _response } = await this.client.getPhonePlanLocationOptions(\n        countryCode,\n        phonePlanGroupId,\n        phonePlanId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<LocationOptionsResponse>({ locationOptions }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the reservation associated with a given id.\n   * Use this function to query the status of a phone number reservation.\n   * @param reservationId The id of the reservation returned by createReservation.\n   * @param options Additional request options.\n   */\n  public async getReservation(\n    reservationId: string,\n    options: GetReservationOptions = {}\n  ): Promise<GetReservationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getReservation\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getSearchById(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberReservation>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Cancels the reservation associated with a given id.\n   * @param reservationId The id of the reservation returned by createReservation.\n   * @param options Additional request options.\n   */\n  public async cancelReservation(\n    reservationId: string,\n    options: CancelReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-cancelReservation\",\n      options\n    );\n    try {\n      const { _response } = await this.client.cancelSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listSearches.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSearchesPage(\n    continuationState: PageSettings,\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity[]> {\n    if (!continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSearches(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSearchesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listSearches.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSearchesAll(\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity> {\n    for await (const entities of this.listSearchesPage({}, options)) {\n      yield* entities;\n    }\n  }\n\n  /**\n   * Iterates the searches created by the Azure resource.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const entity of client.listSearches()) {\n   *   console.log(\"id: \", entity.id);\n   * }\n   * ```\n   * Gets all searches created by the Azure resource.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  public listSearches(\n    options: PageableOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberEntity> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listSearches\",\n      options\n    );\n    const iter = this.listSearchesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listSearchesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listReleases.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listReleasesPage(\n    continuationState: PageSettings,\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllReleases(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllReleasesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listReleases.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listReleasesAll(\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity> {\n    for await (const entities of this.listReleasesPage({}, options)) {\n      yield* entities;\n    }\n  }\n\n  /**\n   * Iterates the releases created by the Azure resource.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const entity of client.listReleases()) {\n   *   console.log(\"id: \", entity.id);\n   * }\n   * ```\n   * Gets all releases created by the Azure resource.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  public listReleases(\n    options: PageableOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberEntity> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listReleases\",\n      options\n    );\n    const iter = this.listReleasesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listReleasesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listSupportedCountries.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {ListSupportedCountriesOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSupportedCountriesPage(\n    continuationState: PageSettings,\n    options: ListSupportedCountriesOptions = {}\n  ): AsyncIterableIterator<PhoneNumberCountry[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllSupportedCountries(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.countries) {\n        yield currentResponse.countries;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSupportedCountriesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.countries) {\n        yield currentResponse.countries;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listSupportedCountries.\n   * @param {ListSupportedCountriesOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSupportedCountriesAll(\n    options: ListSupportedCountriesOptions = {}\n  ): AsyncIterableIterator<PhoneNumberCountry> {\n    for await (const countries of this.listSupportedCountriesPage({}, options)) {\n      yield* countries;\n    }\n  }\n\n  /**\n   * Iterates the supported countries.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const country of client.listSupportedCountries()) {\n   *   console.log(\"country name: \", country.localizedName);\n   * }\n   * ```\n   * @summary List all supported countries.\n   * @param {ListSupportedCountriesOptions} [options] The optional parameters.\n   */\n  public listSupportedCountries(\n    options: ListSupportedCountriesOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberCountry> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listAllSupportedCountries\",\n      options\n    );\n    const iter = this.listSupportedCountriesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listSupportedCountriesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhoneNumbers.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {ListPhoneNumbersOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhoneNumbersPage(\n    continuationState: PageSettings,\n    options: ListPhoneNumbersOptions = {}\n  ): AsyncIterableIterator<AcquiredPhoneNumber[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllPhoneNumbers(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phoneNumbers) {\n        yield currentResponse.phoneNumbers;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllPhoneNumbersNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phoneNumbers) {\n        yield currentResponse.phoneNumbers;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhoneNumbers.\n   * @param {ListPhoneNumbersOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhoneNumbersAll(\n    options: ListPhoneNumbersOptions = {}\n  ): AsyncIterableIterator<AcquiredPhoneNumber> {\n    for await (const phoneNumbers of this.listPhoneNumbersPage({}, options)) {\n      yield* phoneNumbers;\n    }\n  }\n\n  /**\n   * Iterates the acquired phone numbers.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const acquired of client.listPhoneNumbers()) {\n   *   console.log(\"phone number: \", acquired.phoneNumber);\n   * }\n   * ```\n   * @summary List all acquired phone numbers.\n   * @param {ListPhoneNumbersOptions} [options] The optional parameters.\n   */\n  public listPhoneNumbers(\n    options: ListPhoneNumbersOptions = {}\n  ): PagedAsyncIterableIterator<AcquiredPhoneNumber> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listAllPhoneNumbers\",\n      options\n    );\n    const iter = this.listPhoneNumbersAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listPhoneNumbersPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhonePlanGroups.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param countryCode The ISO 3166-2 country code, for example \"FR\" or \"CN\".\n   * @param {ListPhonePlanGroupsOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlanGroupsPage(\n    continuationState: PageSettings,\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): AsyncIterableIterator<PhonePlanGroup[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getPhonePlanGroups(countryCode, options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlanGroups) {\n        yield currentResponse.phonePlanGroups;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getPhonePlanGroupsNext(\n        countryCode,\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlanGroups) {\n        yield currentResponse.phonePlanGroups;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhonePlanGroups.\n   * @param countryCode The ISO 3166-2 country code, for example \"FR\" or \"CN\".\n   * @param {ListPlansForCountryOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlanGroupsAll(\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): AsyncIterableIterator<PhonePlanGroup> {\n    for await (const phonePlanGroups of this.listPhonePlanGroupsPage({}, countryCode, options)) {\n      yield* phonePlanGroups;\n    }\n  }\n\n  /**\n   * Iterates the available phone plan groups for a country.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const phonePlanGroup of client.listPhonePlanGroups(\"CA\")) {\n   *   console.log(\"plan group id: \", phonePlanGroup.phonePlanGroupId);\n   * }\n   * ```\n   * @summary List all available phone plan groups for a country.\n   * @param {ListPhonePlanGroupsOptions} [options] The optional parameters.\n   */\n  public listPhonePlanGroups(\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): PagedAsyncIterableIterator<PhonePlanGroup> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listPhonePlanGroups\",\n      options\n    );\n    const iter = this.listPhonePlanGroupsAll(countryCode, options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listPhonePlanGroupsPage(settings, countryCode, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhonePlans.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param planGroupInfo Information need to search for plans.\n   * @param {GetPhonePlansOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlansPage(\n    continuationState: PageSettings,\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): AsyncIterableIterator<PhonePlan[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getPhonePlans(\n        planGroupInfo.countryCode,\n        planGroupInfo.phonePlanGroupId,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlans) {\n        yield currentResponse.phonePlans;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getPhonePlansNext(\n        planGroupInfo.countryCode,\n        planGroupInfo.phonePlanGroupId,\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlans) {\n        yield currentResponse.phonePlans;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhonePlans.\n   * @param planGroupInfo Information need to search for plans.\n   * @param {ListPhonePlansOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlansAll(\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): AsyncIterableIterator<PhonePlan> {\n    for await (const phonePlans of this.listPhonePlansPage({}, planGroupInfo, options)) {\n      yield* phonePlans;\n    }\n  }\n\n  /**\n   * Iterates the available phone plan for a plan group.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const phonePlan of client.listPhonePlanGroups(PLAN_GROUP_INFO)) {\n   *   console.log(\"plan id: \", phonePlan.phonePlanId);\n   * }\n   *\n   * Gets all available phone plans for a given plan group.\n   * @param planGroupInfo Information need to search for plans.\n   * @param options Additional request options.\n   */\n  public listPhonePlans(\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): PagedAsyncIterableIterator<PhonePlan> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listPhonePlans\",\n      options\n    );\n    const iter = this.listPhonePlansAll(planGroupInfo, options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listPhonePlansPage(settings, planGroupInfo, updatedOptions)\n    };\n  }\n\n  /**\n   * Starts the release of a list of acquired phone numbers.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const releasePoller = await client.beginReleasePhoneNumbers(PHONE_NUMBERS);\n   *\n   * // Serializing the poller\n   * const serialized = releasePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await releasePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   * @param {string[]} phoneNumbers The phone numbers to be released.\n   * @param {BeginReleasePhoneNumbersOptions} options Additional request options.\n   */\n  public async beginReleasePhoneNumbers(\n    phoneNumbers: string[],\n    options: BeginReleasePhoneNumbersOptions = {}\n  ): Promise<PollerLike<PollOperationState<PhoneNumberRelease>, PhoneNumberRelease>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new ReleasePhoneNumbersPoller({\n      phoneNumbers,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts a search for phone numbers given some constraints such as name or area code.\n   * The phone numbers that are found are reserved until you cancel, purchase or the reservation expires.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const reservePoller = await client.beginReservePhoneNumbers(RESERVATION_REQUEST);\n   *\n   * // Serializing the poller\n   * const serialized = reservePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await reservePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   *\n   * @param {CreateReservationRequest} reservationRequest Request properties to constraint the search scope.\n   * @param {BeginReservePhoneNumbersOptions} options Additional request options.\n   */\n  public async beginReservePhoneNumbers(\n    reservationRequest: CreateReservationRequest,\n    options: BeginReservePhoneNumbersOptions = {}\n  ): Promise<PollerLike<PollOperationState<PhoneNumberReservation>, PhoneNumberReservation>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new ReservePhoneNumbersPoller({\n      reservationRequest,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts the purchase of the phone number(s) in the reservation associated with a given id.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const purchasePoller = await client.beginPurchaseReservation(RESERVATION_ID);\n   *\n   * // Serializing the poller\n   * const serialized = purchasePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await purchasePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   *\n   * @param {string} reservationId The id of the reservation to purchase.\n   * @param {BeginPurchaseReservationOptions} options Additional request options.\n   */\n  public async beginPurchaseReservation(\n    reservationId: string,\n    options: BeginPurchaseReservationOptions = {}\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new PurchaseReservationPoller({\n      reservationId,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n}\n\nexport {\n  AreaCodes,\n  CarrierDetails,\n  LocationOptions,\n  LocationOptionsDetails,\n  NumberConfiguration,\n  PhoneNumberAdministrationGetAllAreaCodesResponse,\n  PhoneNumberAdministrationReleasePhoneNumbersResponse,\n  PhoneNumberAdministrationGetReleaseByIdResponse,\n  PhoneNumberAdministrationGetCapabilitiesUpdateResponse,\n  PhoneNumberAdministrationGetNumberConfigurationResponse,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse,\n  PstnConfiguration,\n  ReleaseResponse,\n  NumberUpdateCapabilities,\n  UpdateNumberCapabilitiesResponse,\n  Capability,\n  PhoneNumberCountry,\n  PhoneNumberCountries,\n  LocationOptionsQuery,\n  AcquiredPhoneNumber,\n  AcquiredPhoneNumbers,\n  UpdatePhoneNumberCapabilitiesResponse,\n  PhonePlanGroups,\n  PhonePlanGroup,\n  PhonePlansResponse,\n  PhonePlan,\n  PhoneNumberRelease,\n  PhoneNumberEntities,\n  PhoneNumberReservation,\n  AssignmentStatus,\n  ActivationState,\n  CapabilitiesUpdateStatus,\n  PhoneNumberType,\n  RateInformation,\n  LocationType,\n  ReleaseStatus,\n  PhoneNumberReleaseDetails,\n  PhoneNumberEntity,\n  PhoneNumberReleaseStatus,\n  SearchStatus,\n  LocationOptionsResponse,\n  NumberConfigurationResponse,\n  LocationOptionsQueries\n} from \"./generated/src/models\";\n"],"names":["CommunicationIdentityUpdateRequestMapper","CommunicationTokenRequestMapper","CommunicationIdentity","coreHttp.operationOptionsToRequestOptionsBase","coreHttp.Serializer","Mappers.CommunicationIdentity","Parameters.apiVersion","Parameters.endpoint","Parameters.id","Parameters.body","Parameters.contentType","Mappers.CommunicationIdentityToken","Parameters.body1","Parameters.contentType1","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","operations.CommunicationIdentity","createClientLogger","getTracer","SpanKind","isTokenCredential","isKeyCredential","parseClientArguments","createCommunicationAuthPolicy","createPipelineFromOptions","operationOptionsToRequestOptionsBase","CanonicalCode","endpoint","apiVersion","contentType","body","LocationOptionsQueriesMapper","body1","UpdateNumberCapabilitiesRequestMapper","NumberConfigurationPhoneNumberMapper","NumberConfigurationMapper","ReleaseRequestMapper","CreateSearchOptionsMapper","serializer","Mappers","Mappers.AcquiredPhoneNumbers","Mappers.ErrorResponse","Parameters.locale","Parameters.skip","Parameters.take","Mappers.AreaCodes","Parameters.locationType","Parameters.phonePlanId","Parameters.countryCode","Mappers.UpdatePhoneNumberCapabilitiesResponse","Parameters.capabilitiesUpdateId","Mappers.UpdateNumberCapabilitiesResponse","Mappers.PhoneNumberCountries","Mappers.NumberConfigurationResponse","Parameters.body2","Parameters.body3","Mappers.PhonePlanGroups","Parameters.includeRateInformation","Mappers.PhonePlansResponse","Parameters.phonePlanGroupId","Mappers.LocationOptionsResponse","Parameters.phonePlanId1","Mappers.PhoneNumberRelease","Parameters.releaseId","Mappers.ReleaseResponse","Parameters.body4","Mappers.PhoneNumberEntities","Mappers.PhoneNumberReservation","Parameters.searchId","Mappers.CreateSearchResponse","Parameters.body5","Parameters.nextLink","packageName","packageVersion","operations.PhoneNumberAdministration","SDK_VERSION","Poller","delay","__asyncValues","__asyncDelegator"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;;AAUO,MAAM,qBAAqB,GAA6B;IAC7D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uBAAuB;QAClC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,kCAAkC,GAA6B;IAC1E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oCAAoC;QAC/C,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,yBAAyB,GAA6B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;SACF;KACF;CACF,CAAC;AAEK,MAAM,0BAA0B,GAA6B;IAClE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,4BAA4B;QACvC,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF;;;;;;;;;;ACtFD;;;;;;;AAaA,AAKO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,UAAU,GAA4B;IACjD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,qBAAqB;QACnC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,EAAE,GAA0B;IACvC,aAAa,EAAE,IAAI;IACnB,MAAM,EAAE;QACN,cAAc,EAAE,IAAI;QACpB,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,8BAA8B;QAC5C,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAAuB;IACtC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEA,kCAAwC;CACjD,CAAC;AAEF,AAAO,MAAM,YAAY,GAAuB;IAC9C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,yBAA+B;CACxC,CAAC;;ACrFF;;;;;;;AAQA,AAWA;;;AAGA,MAAaC,uBAAqB;;;;;IAOhC,YAAY,MAA0B;QACpC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMD,MAAM,CAAC,OAAmC;QACxC,MAAM,gBAAgB,GAAgCC,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,mBAAmB,CAC4B,CAAC;KACnD;;;;;;IAOD,MAAM,CAAC,EAAU,EAAE,OAAmC;QACpD,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACjC,mBAAmB,CACc,CAAC;KACrC;;;;;;;IAQD,MAAM,CACJ,EAAU,EACV,IAAwC,EACxC,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,mBAAmB,CACc,CAAC;KACrC;;;;;;;IAQD,UAAU,CACR,EAAU,EACV,IAA+B,EAC/B,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,uBAAuB,CAC4B,CAAC;KACvD;CACF;AACD;AAEA,MAAM,UAAU,GAAG,IAAIC,mBAAmB,CAAC,OAAO,cAAc,KAAK,CAAC,CAAC;AAEvE,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,aAAa;IACnB,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,qBAA6B;SAC1C;KACF;IACD,eAAe,EAAE,CAACC,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,CAAC;IACpC,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,kBAAkB;IACxB,UAAU,EAAE,QAAQ;IACpB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACtB,eAAe,EAAE,CAACD,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEC,EAAa,CAAC;IACnD,UAAU;CACX,CAAC;AACF,MAAM,mBAAmB,GAA2B;IAClD,IAAI,EAAE,kBAAkB;IACxB,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE,EAAE;IACtB,WAAW,EAAEC,IAAe;IAC5B,eAAe,EAAE,CAACH,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEC,EAAa,CAAC;IACnD,gBAAgB,EAAE,CAACE,WAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;AACF,MAAM,uBAAuB,GAA2B;IACtD,IAAI,EAAE,wBAAwB;IAC9B,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,0BAAkC;SAC/C;KACF;IACD,WAAW,EAAEC,KAAgB;IAC7B,eAAe,EAAE,CAACN,UAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,QAAmB,EAAEC,EAAa,CAAC;IACnD,gBAAgB,EAAE,CAACK,YAAuB,CAAC;IAC3C,SAAS,EAAE,MAAM;IACjB,UAAU;CACX,CAAC;;ACvJF;;;;;;;AAQA,AAGA,MAAM,WAAW,GAAG,6CAA6C,CAAC;AAClE,MAAM,cAAc,GAAG,cAAc,CAAC;AAEtC,MAAa,yBAA0B,SAAQC,sBAAsB;;;;;;IASnE,YAAY,QAAgB,EAAE,OAA0C;QACtE,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACtB,MAAM,gBAAgB,GAAGC,iCAAiC,EAAE,CAAC;YAC7D,OAAO,CAAC,SAAS,GAAG,GAAG,WAAW,IAAI,cAAc,IAAI,gBAAgB,EAAE,CAAC;SAC5E;QAED,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;;QAGhD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAGzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,qBAAqB,CAAC;KAC/D;CACF;;AClDD;;;;;;;AAQA,AAMA,MAAM,kBAAmB,SAAQ,yBAAyB;;;;;;IAMxD,YAAY,QAAgB,EAAE,OAA0C;QACtE,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,qBAAqB,GAAG,IAAIC,uBAAgC,CAAC,IAAI,CAAC,CAAC;KACzE;CAGF;;AC1BD;AACA;AAEA,AAAO,MAAM,WAAW,GAAW,cAAc,CAAC;;ACHlD;AACA,AAIA;;;AAGA,AAAO,MAAM,MAAM,GAAGC,2BAAkB,CAAC,8BAA8B,CAAC,CAAC;;ACRzE;AACA,AAQA;;;;;;AAMA,SAAgB,UAAU,CACxB,aAAqB,EACrB,gBAAmB;IAEnB,MAAM,MAAM,GAAGC,qBAAS,EAAE,CAAC;IAC3B,MAAM,cAAc,GAAG,gBAAgB,CAAC,cAAc,IAAI,EAAE,CAAC;IAC7D,MAAM,WAAW,mCACZ,cAAc,CAAC,WAAW,KAC7B,IAAI,EAAEC,YAAQ,CAAC,QAAQ,GACxB,CAAC;IAEF,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,uBAAuB,aAAa,EAAE,EAAE,WAAW,CAAC,CAAC;IAEnF,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,yBAAyB,CAAC,CAAC;IAE7D,IAAI,cAAc,GAAG,cAAc,CAAC,WAAW,IAAI,EAAE,CAAC;IACtD,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;QACtB,cAAc,mCACT,cAAc,CAAC,WAAW,KAC7B,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EACtB,UAAU,kCACL,WAAW,CAAC,UAAU,KACzB,cAAc,EAAE,yBAAyB,MAE5C,CAAC;KACH;IAED,MAAM,iBAAiB,mCAClB,cAAc,KACjB,WAAW,EAAE,cAAc,GAC5B,CAAC;IAEF,MAAM,mBAAmB,mCACpB,gBAAgB,KACnB,cAAc,EAAE,iBAAiB,GAClC,CAAC;IAEF,OAAO;QACL,IAAI;QACJ,cAAc,EAAE,mBAAmB;KACpC,CAAC;AACJ,CAAC;;ACxDD;AACA,AAKA;;;AAGA,AAAO,MAAM,kBAAkB,GAAG,CAChC,KAAQ,EACR,YAA8F;IAE9F,MAAmC,CAAC,gBAAK,YAAY,EAA/C,4BAAgC,CAAe,CAAC;IACtD,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,EAAE,WAAW,EAAE;QAC/C,KAAK,EAAE,CAAC;KACT,CAAC,CAAC;AACL,CAAC,CAAC;;ACjBF;AACA,AA8BA,MAAM,8BAA8B,GAAG,CAAC,OAAY,KAClD,OAAO,IAAI,CAACC,0BAAiB,CAAC,OAAO,CAAC,IAAI,CAACC,mCAAe,CAAC,OAAO,CAAC,CAAC;AAEtE;;;AAGA,MAAa,2BAA2B;;;;;;;;IA2CtC,YACE,qBAA6B,EAC7B,mBAAoF,EACpF,eAA6C,EAAE;QAE/C,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAGC,wCAAoB,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;QAC7F,MAAM,OAAO,GAAG,8BAA8B,CAAC,mBAAmB,CAAC;cAC/D,mBAAmB;cACnB,YAAY,CAAC;QACjB,MAAM,OAAO,GAAG,yCAAyC,WAAW,EAAE,CAAC;QAEvE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7B,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC/B;QAED,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE;YAC5C,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,OAAO,EAAE,CAAC;SACrG;aAAM;YACL,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,OAAO,CAAC;SACpD;QAED,MAAM,uBAAuB,mCACxB,OAAO,GACP;YACD,cAAc,EAAE;gBACd,MAAM,EAAE,MAAM,CAAC,IAAI;aACpB;SACF,CACF,CAAC;QAEF,MAAM,UAAU,GAAGC,iDAA6B,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAGC,kCAAyB,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,IAAI,kBAAkB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,qBAAqB,CAAC;KAC3E;;;;;;;;IASY,UAAU,CACrB,IAAiC,EACjC,MAAoB,EACpB,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,EAAE,KAAK,EAAE,EAAE,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CACtE,IAAI,CAAC,mBAAmB,EACxB,EAAE,MAAM,EAAE,EACVC,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,MAAM,OAAO,GAA2B;oBACtC,KAAK;oBACL,SAAS;oBACT,IAAI,EAAE,EAAE,mBAAmB,EAAE,EAAE,EAAE;iBAClC,CAAC;gBACF,OAAO,kBAAkB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;aAC/C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;;IASY,YAAY,CACvB,IAAiC,EACjC,kBAAwB,IAAI,IAAI,EAAE,EAClC,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;YAC3F,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAC5C,IAAI,CAAC,mBAAmB,EACxB;oBACE,eAAe;iBAChB,EACDD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,UAAU,CAAC,UAA4B,EAAE;;YACpD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,EAAE,EAAE,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAChDD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,MAAM,IAAI,GAAgC,EAAE,mBAAmB,EAAE,EAAE,EAAE,CAAC;gBACtE,OAAO,kBAAkB,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;aAC5C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,UAAU,CACrB,IAAiC,EACjC,UAA4B,EAAE;;YAE9B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CAAC,kCAAkC,EAAE,OAAO,CAAC,CAAC;YACzF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAC5C,IAAI,CAAC,mBAAmB,EACxBD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;CACF;;AC3OD;;;;;;;AAUA,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,qBAAqB,EAAE;qBAC9D;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,aAAa,GAA6B;IACrD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,eAAe;QAC1B,eAAe,EAAE;YACf,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,WAAW;iBACvB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA6B;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,sBAAsB,EAAE;qBAC/D;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA6B;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,kBAAkB,EAAE;gBAClB,cAAc,EAAE,oBAAoB;gBACpC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,qCAAqC,GAA6B;IAC7E,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,uCAAuC;QAClD,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,wBAAwB,EAAE;gBACxB,cAAc,EAAE,0BAA0B;gBAC1C,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,8BAA8B,EAAE;gBAC9B,cAAc,EAAE,gCAAgC;gBAChD,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,0BAA0B,EAAE;qBACnE;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,wBAAwB,GAA6B;IAChE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,0BAA0B;QACrC,eAAe,EAAE;YACf,GAAG,EAAE;gBACH,cAAc,EAAE,KAAK;gBACrB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,+BAA+B,GAA6B;IACvE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iCAAiC;QAC5C,eAAe,EAAE;YACf,6BAA6B,EAAE;gBAC7B,cAAc,EAAE,+BAA+B;gBAC/C,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,0BAA0B,EAAE;qBACnE;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gCAAgC,GAA6B;IACxE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,kCAAkC;QAC7C,eAAe,EAAE;YACf,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,oBAAoB,EAAE;qBAC7D;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,8BAA8B,GAA6B;IACtE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gCAAgC;QAC3C,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,2BAA2B,GAA6B;IACnE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,6BAA6B;QACxC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA6B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,mBAAmB;iBAC/B;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,gBAAgB,EAAE,EAAE;iBACtE;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA6B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,oBAAoB,EAAE;gBACpB,cAAc,EAAE,sBAAsB;gBACtC,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,cAAc,EAAE;gBACd,cAAc,EAAE,gBAAgB;gBAChC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,gBAAgB;iBAC5B;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA6B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,YAAY,EAAE,KAAK;gBACnB,UAAU,EAAE,IAAI;gBAChB,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,UAAU,EAAE;gBACV,cAAc,EAAE,YAAY;gBAC5B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,EAAE;iBACjE;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA6B;IACjD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,WAAW;QACtB,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,aAAa,EAAE;gBACb,cAAc,EAAE,eAAe;gBAC/B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,iBAAiB,EAAE;gBACjB,cAAc,EAAE,mBAAmB;gBACnC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,uBAAuB,GAA6B;IAC/D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,yBAAyB;QACpC,eAAe,EAAE;YACf,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,SAAS,EAAE,iBAAiB;iBAC7B;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wBAAwB,EAAE;qBACjE;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,IAAI,EAAE;gBACJ,cAAc,EAAE,MAAM;gBACtB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,KAAK,EAAE;gBACL,cAAc,EAAE,OAAO;gBACvB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,iBAAiB,EAAE,EAAE;iBACvE;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,kBAAkB,GAA6B;IAC1D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,oBAAoB;QAC/B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,+BAA+B,EAAE;gBAC/B,cAAc,EAAE,iCAAiC;gBACjD,IAAI,EAAE;oBACJ,IAAI,EAAE,YAAY;oBAClB,KAAK,EAAE;wBACL,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,2BAA2B,EAAE;qBACpE;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,yBAAyB,GAA6B;IACjE,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,2BAA2B;QACtC,eAAe,EAAE;YACf,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,cAAc,GAA6B;IACtD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,gBAAgB;QAC3B,eAAe,EAAE;YACf,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,eAAe,GAA6B;IACvD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,iBAAiB;QAC5B,eAAe,EAAE;YACf,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,mBAAmB,EAAE;qBAC5D;iBACF;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,iBAAiB,GAA6B;IACzD,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,mBAAmB;QAC9B,eAAe,EAAE;YACf,EAAE,EAAE;gBACF,cAAc,EAAE,IAAI;gBACpB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,gBAAgB,EAAE;gBAChB,cAAc,EAAE,kBAAkB;gBAClC,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,OAAO,EAAE;gBACP,cAAc,EAAE,SAAS;gBACzB,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA6B;IAC9D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,wBAAwB;QACnC,eAAe,EAAE;YACf,aAAa,EAAE;gBACb,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,WAAW,EAAE;gBACX,cAAc,EAAE,aAAa;gBAC7B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wBAAwB,EAAE;qBACjE;iBACF;aACF;YACD,MAAM,EAAE;gBACN,cAAc,EAAE,QAAQ;gBACxB,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,qBAAqB,EAAE;gBACrB,cAAc,EAAE,uBAAuB;gBACvC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;iBACjB;aACF;YACD,SAAS,EAAE;gBACT,cAAc,EAAE,WAAW;gBAC3B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,mBAAmB,GAA6B;IAC3D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,qBAAqB;QAChC,eAAe,EAAE;YACf,WAAW,EAAE;gBACX,WAAW,EAAE;oBACX,SAAS,EAAE,GAAG;iBACf;gBACD,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,WAAW,EAAE;gBACX,WAAW,EAAE;oBACX,SAAS,EAAE,GAAG;iBACf;gBACD,cAAc,EAAE,aAAa;gBAC7B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,YAAY,EAAE;gBACZ,cAAc,EAAE,cAAc;gBAC9B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE;iBACtC;aACF;YACD,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,QAAQ,EAAE;gBACR,WAAW,EAAE;oBACX,gBAAgB,EAAE,UAAU;oBAC5B,gBAAgB,EAAE,CAAC;iBACpB;gBACD,cAAc,EAAE,UAAU;gBAC1B,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;YACD,eAAe,EAAE;gBACf,cAAc,EAAE,iBAAiB;gBACjC,IAAI,EAAE;oBACJ,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACP,IAAI,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,wBAAwB,EAAE;qBACjE;iBACF;aACF;SACF;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA6B;IAC5D,IAAI,EAAE;QACJ,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,sBAAsB;QACjC,eAAe,EAAE;YACf,QAAQ,EAAE;gBACR,cAAc,EAAE,UAAU;gBAC1B,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE;oBACJ,IAAI,EAAE,QAAQ;iBACf;aACF;SACF;KACF;CACF,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACj/BF;;;;;;;AAaA,AASO,MAAMC,UAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;AAEF,AAAO,MAAM,MAAM,GAA4B;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;IACpC,MAAM,EAAE;QACN,YAAY,EAAE,OAAO;QACrB,cAAc,EAAE,QAAQ;QACxB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA4B;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAE;QACN,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,IAAI,GAA4B;IAC3C,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;IAClC,MAAM,EAAE;QACN,YAAY,EAAE,GAAG;QACjB,cAAc,EAAE,MAAM;QACtB,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAMC,YAAU,GAA4B;IACjD,aAAa,EAAE,YAAY;IAC3B,MAAM,EAAE;QACN,YAAY,EAAE,qBAAqB;QACnC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,aAAa;QAC7B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAMC,aAAW,GAAuB;IAC7C,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;IACzC,MAAM,EAAE;QACN,YAAY,EAAE,kBAAkB;QAChC,UAAU,EAAE,IAAI;QAChB,cAAc,EAAE,cAAc;QAC9B,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAMC,MAAI,GAAuB;IACtC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,sBAA4B;CACrC,CAAC;AAEF,AAAO,MAAM,YAAY,GAA4B;IACnD,aAAa,EAAE,cAAc;IAC7B,MAAM,EAAE;QACN,cAAc,EAAE,cAAc;QAC9B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA0B;IAChD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,WAAW,GAA4B;IAClD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,oBAAoB,GAA0B;IACzD,aAAa,EAAE,sBAAsB;IACrC,MAAM,EAAE;QACN,cAAc,EAAE,sBAAsB;QACtC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAMC,OAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,+BAAqC;CAC9C,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,8BAAoC;CAC7C,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,mBAAyB;CAClC,CAAC;AAEF,AAAO,MAAM,sBAAsB,GAA4B;IAC7D,aAAa,EAAE,CAAC,SAAS,EAAE,wBAAwB,CAAC;IACpD,MAAM,EAAE;QACN,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE;YACJ,IAAI,EAAE,SAAS;SAChB;KACF;CACF,CAAC;AAEF,AAAO,MAAM,gBAAgB,GAA0B;IACrD,aAAa,EAAE,kBAAkB;IACjC,MAAM,EAAE;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,YAAY,GAA0B;IACjD,aAAa,EAAE,aAAa;IAC5B,MAAM,EAAE;QACN,cAAc,EAAE,aAAa;QAC7B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,SAAS,GAA0B;IAC9C,aAAa,EAAE,WAAW;IAC1B,MAAM,EAAE;QACN,cAAc,EAAE,WAAW;QAC3B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,cAAoB;CAC7B,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;CACF,CAAC;AAEF,AAAO,MAAM,KAAK,GAAuB;IACvC,aAAa,EAAE,MAAM;IACrB,MAAM,EAAEC,mBAAyB;CAClC,CAAC;AAEF,AAAO,MAAM,QAAQ,GAA0B;IAC7C,aAAa,EAAE,UAAU;IACzB,MAAM,EAAE;QACN,cAAc,EAAE,UAAU;QAC1B,QAAQ,EAAE,IAAI;QACd,IAAI,EAAE;YACJ,IAAI,EAAE,QAAQ;SACf;KACF;IACD,YAAY,EAAE,IAAI;CACnB,CAAC;;ACpOF;;;;;;;AAQA,AA+CA;;;AAGA,MAAa,yBAAyB;;;;;IAOpC,YAAY,MAA6B;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;KACtB;;;;;IAMD,kBAAkB,CAChB,OAAmE;QAEnE,MAAM,gBAAgB,GAAgClC,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,+BAA+B,CACgC,CAAC;KACnE;;;;;;;;;IAUD,eAAe,CACb,YAAoB,EACpB,WAAmB,EACnB,WAAmB,EACnB,IAA4B,EAC5B,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC;YACE,YAAY;YACZ,WAAW;YACX,WAAW;YACX,IAAI;YACJ,OAAO,EAAE,gBAAgB;SAC1B,EACD,4BAA4B,CACgC,CAAC;KAChE;;;;;;IAOD,qBAAqB,CACnB,oBAA4B,EAC5B,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,oBAAoB,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnD,kCAAkC,CACgC,CAAC;KACtE;;;;;;IAOD,kBAAkB,CAChB,IAAqC,EACrC,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,+BAA+B,CACgC,CAAC;KACnE;;;;;IAMD,wBAAwB,CACtB,OAAyE;QAEzE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,qCAAqC,CACgC,CAAC;KACzE;;;;;;IAOD,sBAAsB,CACpB,IAAoC,EACpC,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,mCAAmC,CACgC,CAAC;KACvE;;;;;;IAOD,eAAe,CACb,IAAyB,EACzB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,4BAA4B,CACK,CAAC;KACrC;;;;;;IAOD,iBAAiB,CACf,IAAoC,EACpC,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,8BAA8B,CACG,CAAC;KACrC;;;;;;IAOD,kBAAkB,CAChB,WAAmB,EACnB,OAAmE;QAEnE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC1C,+BAA+B,CACgC,CAAC;KACnE;;;;;;;IAQD,aAAa,CACX,WAAmB,EACnB,gBAAwB,EACxB,OAA8D;QAE9D,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,gBAAgB,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC5D,0BAA0B,CACgC,CAAC;KAC9D;;;;;;;;IASD,2BAA2B,CACzB,WAAmB,EACnB,gBAAwB,EACxB,WAAmB,EACnB,OAA4E;QAE5E,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACzE,wCAAwC,CACgC,CAAC;KAC5E;;;;;;IAOD,cAAc,CACZ,SAAiB,EACjB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACxC,2BAA2B,CACgC,CAAC;KAC/D;;;;;;IAOD,mBAAmB,CACjB,IAAoB,EACpB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,gCAAgC,CACgC,CAAC;KACpE;;;;;IAMD,cAAc,CACZ,OAA+D;QAE/D,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,2BAA2B,CACgC,CAAC;KAC/D;;;;;;IAOD,aAAa,CACX,QAAgB,EAChB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,0BAA0B,CACgC,CAAC;KAC9D;;;;;;IAOD,YAAY,CACV,IAAyB,EACzB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,IAAI,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACnC,yBAAyB,CACgC,CAAC;KAC7D;;;;;IAMD,cAAc,CACZ,OAA+D;QAE/D,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,OAAO,EAAE,gBAAgB,EAAE,EAC7B,2BAA2B,CACgC,CAAC;KAC/D;;;;;;IAOD,YAAY,CACV,QAAgB,EAChB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,yBAAyB,CACQ,CAAC;KACrC;;;;;;IAOD,cAAc,CACZ,QAAgB,EAChB,OAAmC;QAEnC,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,2BAA2B,CACM,CAAC;KACrC;;;;;;IAOD,sBAAsB,CACpB,QAAgB,EAChB,OAAuE;QAEvE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,mCAAmC,CACgC,CAAC;KACvE;;;;;;;IAQD,4BAA4B,CAC1B,QAAgB,EAChB,OAA6E;QAE7E,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,yCAAyC,CACgC,CAAC;KAC7E;;;;;;;IAQD,sBAAsB,CACpB,WAAmB,EACnB,QAAgB,EAChB,OAAuE;QAEvE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACpD,mCAAmC,CACgC,CAAC;KACvE;;;;;;;;IASD,iBAAiB,CACf,WAAmB,EACnB,gBAAwB,EACxB,QAAgB,EAChB,OAAkE;QAElE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,WAAW,EAAE,gBAAgB,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACtE,8BAA8B,CACgC,CAAC;KAClE;;;;;;IAOD,kBAAkB,CAChB,QAAgB,EAChB,OAAmE;QAEnE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,+BAA+B,CACgC,CAAC;KACnE;;;;;;IAOD,kBAAkB,CAChB,QAAgB,EAChB,OAAmE;QAEnE,MAAM,gBAAgB,GAAgCA,6CAA6C,CACjG,OAAO,IAAI,EAAE,CACd,CAAC;QACF,OAAO,IAAI,CAAC,MAAM,CAAC,oBAAoB,CACrC,EAAE,QAAQ,EAAE,OAAO,EAAE,gBAAgB,EAAE,EACvC,+BAA+B,CACgC,CAAC;KACnE;CACF;AACD;AAEA,MAAMmC,YAAU,GAAG,IAAIlC,mBAAmB,CAACmC,SAAO,cAAc,KAAK,CAAC,CAAC;AAEvE,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,2CAA2C;IACjD,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEC,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE,CAACC,UAAmB,CAAC;gBACpC+B,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA2B;IAC3D,IAAI,EAAE,gEAAgE;IACtE,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEO,SAAiB;SAC9B;QACD,OAAO,EAAE;YACP,UAAU,EAAEJ,aAAqB;SAClC;KACF;IACD,WAAW,EAAEhC,MAAe;IAC5B,eAAe,EAAE,CAACH,YAAqB,EAAEwC,YAAuB,EAAEC,WAAsB,CAAC;IACzF,aAAa,EAAE,CAACxC,UAAmB,EAAEyC,WAAsB,CAAC;IAC5D,gBAAgB,EAAE,CAACtC,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,kCAAkC,GAA2B;IACjE,IAAI,EAAE,kEAAkE;IACxE,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEW,qCAA6C;SAC1D;QACD,OAAO,EAAE;YACP,UAAU,EAAER,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACnC,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,EAAE2C,oBAA+B,CAAC;gBACrEZ,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,2CAA2C;IACjD,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEa,gCAAwC;SACrD;QACD,OAAO,EAAE;YACP,UAAU,EAAEV,aAAqB;SAClC;KACF;IACD,WAAW,EAAE7B,OAAgB;IAC7B,eAAe,EAAE,CAACN,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,qCAAqC,GAA2B;IACpE,IAAI,EAAE,wCAAwC;IAC9C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEc,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEX,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE,CAACC,UAAmB,CAAC;gBACpC+B,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA2B;IAClE,IAAI,EAAE,kDAAkD;IACxD,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEe,2BAAmC;SAChD;QACD,OAAO,EAAE;YACP,UAAU,EAAEZ,aAAqB;SAClC;KACF;IACD,WAAW,EAAEa,KAAgB;IAC7B,eAAe,EAAE,CAAChD,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,4BAA4B,GAA2B;IAC3D,IAAI,EAAE,4DAA4D;IAClE,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEG,aAAqB;SAClC;KACF;IACD,WAAW,EAAEc,KAAgB;IAC7B,eAAe,EAAE,CAACjD,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA2B;IAC7D,IAAI,EAAE,8DAA8D;IACpE,UAAU,EAAE,OAAO;IACnB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEG,aAAqB;SAClC;KACF;IACD,WAAW,EAAEa,KAAgB;IAC7B,eAAe,EAAE,CAAChD,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,sEAAsE;IAC5E,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkB,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,aAAqB;SAClC;KACF;IACD,eAAe,EAAE;QACfC,MAAiB;QACjBC,IAAe;QACfC,IAAe;QACftC,YAAqB;QACrBmD,sBAAiC;KAClC;IACD,aAAa,EAAE,CAAClD,UAAmB,EAAEyC,WAAsB,CAAC;gBAC5DV,YAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EACF,oGAAoG;IACtG,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoB,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEjB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE,CAACC,UAAmB,EAAEyC,WAAsB,EAAEW,gBAA2B,CAAC;gBACzFrB,YAAU;CACX,CAAC;AACF,MAAM,wCAAwC,GAA2B;IACvE,IAAI,EACF,kIAAkI;IACpI,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEsB,uBAA+B;SAC5C;QACD,OAAO,EAAE;YACP,UAAU,EAAEnB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEpC,YAAqB,CAAC;IAC3D,aAAa,EAAE;QACbC,UAAmB;QACnByC,WAAsB;QACtBW,gBAA2B;QAC3BE,YAAuB;KACxB;gBACDvB,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,mDAAmD;IACzD,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEwB,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAErB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACnC,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,EAAEwD,SAAoB,CAAC;gBAC1DzB,YAAU;CACX,CAAC;AACF,MAAM,gCAAgC,GAA2B;IAC/D,IAAI,EAAE,uCAAuC;IAC7C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE0B,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEvB,aAAqB;SAClC;KACF;IACD,WAAW,EAAEwB,KAAgB;IAC7B,eAAe,EAAE,CAAC3D,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,uCAAuC;IAC7C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4B,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACE,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC1E,aAAa,EAAE,CAACC,UAAmB,CAAC;gBACpC+B,YAAU;CACX,CAAC;AACF,MAAM,0BAA0B,GAA2B;IACzD,IAAI,EAAE,kDAAkD;IACxD,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE6B,sBAA8B;SAC3C;QACD,OAAO,EAAE;YACP,UAAU,EAAE1B,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACnC,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,EAAE6D,QAAmB,CAAC;gBACzD9B,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA2B;IACxD,IAAI,EAAE,uCAAuC;IAC7C,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE+B,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAE5B,aAAqB;SAClC;KACF;IACD,WAAW,EAAE6B,KAAgB;IAC7B,eAAe,EAAE,CAAChE,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,CAAC;IACpC,gBAAgB,EAAE,CAACG,aAAsB,CAAC;IAC1C,SAAS,EAAE,MAAM;gBACjB4B,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,uCAAuC;IAC7C,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4B,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACE,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC1E,aAAa,EAAE,CAACC,UAAmB,CAAC;gBACpC+B,YAAU;CACX,CAAC;AACF,MAAM,yBAAyB,GAA2B;IACxD,IAAI,EAAE,yDAAyD;IAC/D,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEG,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACnC,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,EAAE6D,QAAmB,CAAC;gBACzD9B,YAAU;CACX,CAAC;AACF,MAAM,2BAA2B,GAA2B;IAC1D,IAAI,EAAE,2DAA2D;IACjE,UAAU,EAAE,MAAM;IAClB,SAAS,EAAE;QACT,GAAG,EAAE,EAAE;QACP,OAAO,EAAE;YACP,UAAU,EAAEG,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACnC,YAAqB,CAAC;IACxC,aAAa,EAAE,CAACC,UAAmB,EAAE6D,QAAmB,CAAC;gBACzD9B,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA2B;IAClE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEE,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEC,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE,CAACC,UAAmB,EAAEgE,QAAmB,CAAC;gBACzDjC,YAAU;CACX,CAAC;AACF,MAAM,yCAAyC,GAA2B;IACxE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEc,oBAA4B;SACzC;QACD,OAAO,EAAE;YACP,UAAU,EAAEX,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE,CAACC,UAAmB,EAAEgE,QAAmB,CAAC;gBACzDjC,YAAU;CACX,CAAC;AACF,MAAM,mCAAmC,GAA2B;IAClE,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEkB,eAAuB;SACpC;QACD,OAAO,EAAE;YACP,UAAU,EAAEf,aAAqB;SAClC;KACF;IACD,eAAe,EAAE;QACfC,MAAiB;QACjBC,IAAe;QACfC,IAAe;QACftC,YAAqB;QACrBmD,sBAAiC;KAClC;IACD,aAAa,EAAE,CAAClD,UAAmB,EAAEyC,WAAsB,EAAEuB,QAAmB,CAAC;gBACjFjC,YAAU;CACX,CAAC;AACF,MAAM,8BAA8B,GAA2B;IAC7D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAEoB,kBAA0B;SACvC;QACD,OAAO,EAAE;YACP,UAAU,EAAEjB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACC,MAAiB,EAAEC,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC7F,aAAa,EAAE;QACbC,UAAmB;QACnByC,WAAsB;QACtBW,gBAA2B;QAC3BY,QAAmB;KACpB;gBACDjC,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4B,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACE,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC1E,aAAa,EAAE,CAACC,UAAmB,EAAEgE,QAAmB,CAAC;gBACzDjC,YAAU;CACX,CAAC;AACF,MAAM,+BAA+B,GAA2B;IAC9D,IAAI,EAAE,YAAY;IAClB,UAAU,EAAE,KAAK;IACjB,SAAS,EAAE;QACT,GAAG,EAAE;YACH,UAAU,EAAE4B,mBAA2B;SACxC;QACD,OAAO,EAAE;YACP,UAAU,EAAEzB,aAAqB;SAClC;KACF;IACD,eAAe,EAAE,CAACE,IAAe,EAAEC,IAAe,EAAEtC,YAAqB,CAAC;IAC1E,aAAa,EAAE,CAACC,UAAmB,EAAEgE,QAAmB,CAAC;gBACzDjC,YAAU;CACX,CAAC;;ACv7BF;;;;;;;AAQA,AAGA,MAAMkC,aAAW,GAAG,gDAAgD,CAAC;AACrE,MAAMC,gBAAc,GAAG,cAAc,CAAC;AAEtC,MAAa,4BAA6B,SAAQ3D,sBAAsB;;;;;;IAStE,YAAY,QAAgB,EAAE,OAA6C;QACzE,IAAI,QAAQ,KAAK,SAAS,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;;QAGD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YACtB,MAAM,gBAAgB,GAAGC,iCAAiC,EAAE,CAAC;YAC7D,OAAO,CAAC,SAAS,GAAG,GAAGyD,aAAW,IAAIC,gBAAc,IAAI,gBAAgB,EAAE,CAAC;SAC5E;QAED,KAAK,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAE1B,IAAI,CAAC,kBAAkB,GAAG,iCAAiC,CAAC;QAE5D,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,QAAQ,IAAI,YAAY,CAAC;;QAGhD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;;QAGzB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,qBAAqB,CAAC;KAC/D;CACF;;AClDD;;;;;;;AAQA,AAMA,MAAM,qBAAsB,SAAQ,4BAA4B;;;;;;IAM9D,YAAY,QAAgB,EAAE,OAA6C;QACzE,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,yBAAyB,GAAG,IAAIC,yBAAoC,CAAC,IAAI,CAAC,CAAC;KACjF;CAGF;;AC1BD;AACA;AAEA,AAAO,MAAMC,aAAW,GAAW,cAAc,CAAC;;ACHlD;AACA,AAYA;;;AAGA,MAAsB,qBAAuC,SAAQC,cAAuB;IAA5F;;;;;QAIS,iBAAY,GAAW,IAAI,CAAC;KAQpC;;;;IAHO,KAAK;;YACT,OAAOC,cAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACjC;KAAA;CACF;AAED;;;AAGA,MAAa,4BAA4B;;;;;;;IAQvC,YAAmB,KAAa,EAAU,gBAAwB,0BAA0B;QAAzE,UAAK,GAAL,KAAK,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAqC;KAAI;;;;IAKnF,MAAM;;YACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;KAAA;;;;IAKY,MAAM;;YACjB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACrC;KAAA;;;;IAKM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;KACJ;CACF;AAED;;;AAGA,MAAa,uCAAuC;;;;;;;;IASlD,YACS,KAAa,EACZ,MAAiC,EACjC,gBAAwB,0BAA0B;QAFnD,UAAK,GAAL,KAAK,CAAQ;QACZ,WAAM,GAAN,MAAM,CAA2B;QACjC,kBAAa,GAAb,aAAa,CAAqC;KACxD;;;;;;;IAQS,cAAc,CACzB,aAAqB,EACrB,UAAiC,EAAE;;YAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,gDAAgD,EAChD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,KAAyB,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAC5D,aAAa,EACbpD,6CAAoC,CAAC,cAAc,CAAC,CACrD,EAHK,EAAE,SAAS,OAGhB,EAHqB,IAAI,oBAApB,aAAsB,CAG3B,CAAC;gBACF,OAAO,kBAAkB,CAAyB,IAAI,EAAE,SAAS,CAAC,CAAC;aACpE;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,iBAAiB,CAC5B,aAAqB,EACrB,UAAoC,EAAE;;YAEtC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,mDAAmD,EACnD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,CAClD,aAAa,EACbD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;IAKY,MAAM;;YACjB,MAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;SAC5C;KAAA;;;;IAKY,MAAM;;YACjB,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACrC;KAAA;;;;IAKM,QAAQ;QACb,OAAO,IAAI,CAAC,SAAS,CAAC;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK;SAClB,CAAC,CAAC;KACJ;CACF;;ACzKD;AACA;AAKA,AAAO,MAAM,UAAU,GAAG,CACxB,OAAoD,EACpD,gBAA8C;IAE9C,IAAI,OAAO,CAAC,MAAM,KAAK,OAAO,IAAI,OAAO,CAAC,MAAM,KAAK,QAAQ,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;QAC7F,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;KAC1C;IAED,OAAO,OAAO,CAAC,MAAM,KAAK,gBAAgB,CAAC;AAC7C,CAAC,CAAC;;ACfF;AACA,AAkBA;;;AAGA,MAAa,gCAAiC,SAAQ,4BAGrD;;;;;;;;IAQC,YACS,KAA4C,EAC3C,MAAiC,EACjC,cAAgC;QAExC,KAAK,CAAC,KAAK,EAAE,uCAAuC,CAAC,CAAC;QAJ/C,UAAK,GAAL,KAAK,CAAuC;QAC3C,WAAM,GAAN,MAAM,CAA2B;QACjC,mBAAc,GAAd,cAAc,CAAkB;KAGzC;;;;;;;IAQa,mBAAmB,CAC/B,YAAsB,EACtB,UAAsC,EAAE;;YAExC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,qDAAqD,EACrD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,mBAAmB,CACpE;oBACE,YAAY;iBACb,EACDD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAkB,EAAE,SAAS,EAAE,EAAE,SAAS,CAAC,CAAC;aACtE;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQa,UAAU,CACtB,SAAiB,EACjB,UAA6B,EAAE;;YAE/B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,4CAA4C,EAC5C,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,KAAyB,MAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAC7D,SAAS,EACTD,6CAAoC,CAAC,cAAc,CAAC,CACrD,EAHK,EAAE,SAAS,OAGhB,EAHqB,IAAI,oBAApB,aAAsB,CAG3B,CAAC;gBACF,OAAO,kBAAkB,CAAqB,IAAI,EAAE,SAAS,CAAC,CAAC;aAChE;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,MAAM,CACjB,UAAsE,EAAE;;YAExE,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;YACvB,MAAM,EAAE,YAAY,EAAE,GAAG,KAAK,CAAC;YAE/B,IAAI,OAAO,CAAC,WAAW,EAAE;gBACvB,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;aACvD;YAED,IAAI;gBACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACpB,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBACxF,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC5B,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;iBACxB;gBAED,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,SAAS,EAAE;oBACzC,KAAK,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC3E,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;iBAC1D;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBACpB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;aAC1B;oBAAS;gBACR,OAAO,IAAI,CAAC;aACb;SACF;KAAA;CACF;;AC1ID;AACA,AAUA;;;AAGA,MAAa,yBAA0B,SAAQ,qBAG9C;;;;;;IAMC,YAAY,OAAyC;QACnD,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,cAAc,GAAG,EAAE,EAAE,YAAY,GAAG,IAAI,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;QAC/F,IAAI,KAAwD,CAAC;QAE7D,IAAI,UAAU,EAAE;YACd,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;SACtC;QAED,MAAM,SAAS,GAAG,IAAI,gCAAgC,iCAE/C,KAAK,KACR,YAAY,KAEd,MAAM,EACN,cAAc,CACf,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;;AC5CD;AACA,AAkBA;;;AAGA,MAAa,gCAAiC,SAAQ,uCAGrD;;;;;;;;IAQC,YACS,KAA4C,EAC3C,OAAkC,EAClC,cAAkC;QAE1C,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAJf,UAAK,GAAL,KAAK,CAAuC;QAC3C,YAAO,GAAP,OAAO,CAA2B;QAClC,mBAAc,GAAd,cAAc,CAAoB;KAG3C;;;;;;;;IASa,iBAAiB,CAC7B,kBAA4C,EAC5C,UAAoC,EAAE;;YAEtC,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,GAAG,kBAAkB,CAAC;YACnF,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,mDAAmD,EACnD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,YAAY,CAC7D;oBACE,WAAW,EAAE,IAAI;oBACjB,WAAW;oBACX,YAAY;oBACZ,QAAQ;oBACR,QAAQ;iBACT,EACDD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAA4B,EAAE,aAAa,EAAE,QAAQ,EAAE,EAAE,SAAS,CAAC,CAAC;aAC9F;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,MAAM,CACjB,UAAsE,EAAE;;YAExE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,kBAAkB,EAAE,GAAG,KAAK,CAAC;YAErC,IAAI,OAAO,CAAC,WAAW,EAAE;gBACvB,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;aACvD;YAED,IAAI;gBACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACpB,MAAM,EAAE,aAAa,EAAE,GAAG,MAAM,IAAI,CAAC,iBAAiB,CACpD,kBAAkB,EAClB,IAAI,CAAC,cAAc,CACpB,CAAC;oBACF,KAAK,CAAC,aAAa,GAAG,aAAa,CAAC;oBACpC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;iBACxB;gBAED,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,aAAa,EAAE;oBAC7C,KAAK,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBACnF,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;iBAC1D;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBACpB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;aAC1B;oBAAS;gBACR,OAAO,IAAI,CAAC;aACb;SACF;KAAA;;;;IAKY,MAAM;;YACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,aAAa,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC;YAE9C,IAAI,aAAa,EAAE;gBACjB,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;aACtD;YAED,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YAEzB,OAAO,IAAI,CAAC;SACb;KAAA;CACF;;ACpID;AACA,AAUA;;;AAGA,MAAa,yBAA0B,SAAQ,qBAG9C;;;;;;IAMC,YAAY,OAAyC;QACnD,MAAM,EACJ,MAAM,EACN,kBAAkB,EAClB,cAAc,GAAG,EAAE,EACnB,YAAY,GAAG,IAAI,EACnB,UAAU,EACX,GAAG,OAAO,CAAC;QACZ,IAAI,KAAwD,CAAC;QAE7D,IAAI,UAAU,EAAE;YACd,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;SACtC;QAED,MAAM,SAAS,GAAG,IAAI,gCAAgC,iCAE/C,KAAK,KACR,kBAAkB,KAEpB,MAAM,EACN,cAAc,CACf,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;;AClDD;AACA,AAaA;;;AAGA,MAAa,gCAAiC,SAAQ,uCAGrD;;;;;;;;IAQC,YACS,KAA4C,EAC3C,OAAkC,EAClC,cAAgC;QAExC,KAAK,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;QAJf,UAAK,GAAL,KAAK,CAAuC;QAC3C,YAAO,GAAP,OAAO,CAA2B;QAClC,mBAAc,GAAd,cAAc,CAAkB;KAGzC;;;;;;;IAQa,mBAAmB,CAC/B,aAAqB,EACrB,UAAsC,EAAE;;YAExC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,qDAAqD,EACrD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,cAAc,CACrD,aAAa,EACbD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,MAAM,CACjB,UAAsE,EAAE;;YAExE,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,aAAa,EAAE,GAAG,KAAK,CAAC;YAEhC,IAAI,OAAO,CAAC,WAAW,EAAE;gBACvB,IAAI,CAAC,cAAc,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;aACvD;YAED,IAAI;gBACF,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACpB,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBACnE,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;iBACxB;gBAED,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;oBACtB,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;oBAC7E,KAAK,CAAC,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;iBACnD;aACF;YAAC,OAAO,KAAK,EAAE;gBACd,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;gBACpB,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;aAC1B;oBAAS;gBACR,OAAO,IAAI,CAAC;aACb;SACF;KAAA;;;;IAKY,MAAM;;YACjB,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACzB,MAAM,EAAE,aAAa,EAAE,OAAO,GAAG,EAAE,EAAE,GAAG,KAAK,CAAC;YAE9C,IAAI,aAAa,EAAE;gBACjB,MAAM,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;aACtD;YAED,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YAEzB,OAAO,IAAI,CAAC;SACb;KAAA;CACF;;ACnHD;AACA,AASA;;;AAGA,MAAa,yBAA0B,SAAQ,qBAG9C;;;;;;IAMC,YAAY,OAAyC;QACnD,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,cAAc,GAAG,EAAE,EAAE,YAAY,GAAG,IAAI,EAAE,UAAU,EAAE,GAAG,OAAO,CAAC;QAChG,IAAI,KAAwD,CAAC;QAE7D,IAAI,UAAU,EAAE;YACd,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;SACtC;QAED,MAAM,SAAS,GAAG,IAAI,gCAAgC,iCAE/C,KAAK,KACR,aAAa,KAEf,MAAM,EACN,cAAc,CACf,CAAC;QAEF,KAAK,CAAC,SAAS,CAAC,CAAC;QAEjB,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;KAClC;CACF;;AC3CD;AACA,AAoFA,MAAM,wCAAwC,GAAG,CAC/C,OAAY,KAC0C,OAAO,IAAI,CAACL,mCAAe,CAAC,OAAO,CAAC,CAAC;AAE7F;;;AAGA,MAAa,+BAA+B;IAsC1C,YACE,qBAA6B,EAC7B,mBAA8F,EAC9F,eAAuD,EAAE;QAEzD,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAGC,wCAAoB,CAAC,qBAAqB,EAAE,mBAAmB,CAAC,CAAC;QAC7F,MAAM,OAAO,GAAG,wCAAwC,CAAC,mBAAmB,CAAC;cACzE,mBAAmB;cACnB,YAAY,CAAC;QACjB,MAAM,OAAO,GAAG,yCAAyCqD,aAAW,EAAE,CAAC;QAEvE,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE;YAC7B,OAAO,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC/B;QAED,IAAI,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAE;YAC5C,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,GAAG,OAAO,CAAC,gBAAgB,CAAC,eAAe,IAAI,OAAO,EAAE,CAAC;SACrG;aAAM;YACL,OAAO,CAAC,gBAAgB,CAAC,eAAe,GAAG,OAAO,CAAC;SACpD;QAED,MAAM,uBAAuB,mCACxB,OAAO,GACP;YACD,cAAc,EAAE;gBACd,MAAM,EAAE,MAAM,CAAC,IAAI;aACpB;SACF,CACF,CAAC;QAEF,MAAM,UAAU,GAAGpD,iDAA6B,CAAC,UAAU,CAAC,CAAC;QAC7D,MAAM,QAAQ,GAAGC,kCAAyB,CAAC,uBAAuB,EAAE,UAAU,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,GAAG,IAAI,qBAAqB,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC,yBAAyB,CAAC;KAClF;;;;;;IAOY,oBAAoB,CAC/B,MAAmC,EACnC,UAAuC,EAAE;;YAEzC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,sDAAsD,EACtD,OAAO,CACR,CAAC;YACF,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC;YAC5C,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CACrD;oBACE,WAAW;oBACX,iBAAiB,EAAE;wBACjB,WAAW,EAAE,WAAW;wBACxB,aAAa,EAAE,cAAc,CAAC,aAAa;qBAC5C;iBACF,EACDC,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,sBAAsB,CACjC,WAAmB,EACnB,UAAyC,EAAE;;YAE3C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,wDAAwD,EACxD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,CACvD,EAAE,WAAW,EAAE,EACfD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;;IASY,8BAA8B,CACzC,8BAA8D,EAC9D,UAAqC,EAAE;;YAEvC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,gEAAgE,EAChE,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,oBAAoB,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAC9E;oBACE,6BAA6B,EAAE,8BAA8B;iBAC9D,EACDD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CACvB,EAAE,oBAAoB,EAAE,EACxB,SAAS,CACV,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,qBAAqB,CAChC,oBAA4B,EAC5B,UAAwC,EAAE;;YAE1C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,uDAAuD,EACvD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,KAAyB,MAAM,IAAI,CAAC,MAAM,CAAC,qBAAqB,CACpE,oBAAoB,EACpBD,6CAAoC,CAAC,cAAc,CAAC,CACrD,EAHK,EAAE,SAAS,OAGhB,EAHqB,IAAI,oBAApB,aAAsB,CAG3B,CAAC;gBACF,OAAO,kBAAkB,CAAwC,IAAI,EAAE,SAAS,CAAC,CAAC;aACnF;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,YAAY,CACvB,OAA4B,EAC5B,UAA+B,EAAE;;YAEjC,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,YAAY,EAAE,WAAW,EAAE,sBAAsB,EAAE,GAAG,OAAO,CAAC;YAC5F,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,iDAAiD,EACjD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,KAAyB,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAC9D,YAAY,EACZ,OAAO,EACP,WAAW,EACX,sBAAsB,EACtBD,6CAAoC,CAAC,cAAc,CAAC,CACrD,EANK,EAAE,SAAS,OAMhB,EANqB,IAAI,oBAApB,aAAsB,CAM3B,CAAC;gBACF,OAAO,kBAAkB,CAAY,IAAI,EAAE,SAAS,CAAC,CAAC;aACvD;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,2BAA2B,CACtC,WAAmB,EACnB,UAA8C,EAAE;;YAEhD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,6DAA6D,EAC7D,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,iBAAiB,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAC/E,EAAE,WAAW,EAAE,EACfD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAA8B,EAAE,iBAAiB,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1F;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,2BAA2B,CACtC,OAA2C,EAC3C,UAA8C,EAAE;;YAEhD,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,6DAA6D,EAC7D,OAAO,CACR,CAAC;YACF,MAAM,EAAE,WAAW,EAAE,gBAAgB,EAAE,WAAW,EAAE,GAAG,OAAO,CAAC;YAC/D,IAAI;gBACF,MAAM,EAAE,eAAe,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,2BAA2B,CAClF,WAAW,EACX,gBAAgB,EAChB,WAAW,EACXD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAA0B,EAAE,eAAe,EAAE,EAAE,SAAS,CAAC,CAAC;aACpF;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;IAQY,cAAc,CACzB,aAAqB,EACrB,UAAiC,EAAE;;YAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,gDAAgD,EAChD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,KAAyB,MAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAC5D,aAAa,EACbD,6CAAoC,CAAC,cAAc,CAAC,CACrD,EAHK,EAAE,SAAS,OAGhB,EAHqB,IAAI,oBAApB,aAAsB,CAG3B,CAAC;gBACF,OAAO,kBAAkB,CAAyB,IAAI,EAAE,SAAS,CAAC,CAAC;aACpE;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;IAOY,iBAAiB,CAC5B,aAAqB,EACrB,UAAoC,EAAE;;YAEtC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,mDAAmD,EACnD,OAAO,CACR,CAAC;YACF,IAAI;gBACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,YAAY,CAClD,aAAa,EACbD,6CAAoC,CAAC,cAAc,CAAC,CACrD,CAAC;gBACF,OAAO,kBAAkB,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC;aAC1C;YAAC,OAAO,CAAC,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC;oBACb,IAAI,EAAEC,iBAAa,CAAC,OAAO;oBAC3B,OAAO,EAAE,CAAC,CAAC,OAAO;iBACnB,CAAC,CAAC;gBACH,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,CAAC,GAAG,EAAE,CAAC;aACZ;SACF;KAAA;;;;;;;;IASc,gBAAgB,CAC7B,iBAA+B,EAC/B,UAA2B,EAAE;;YAE7B,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE;gBACxC,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,CAAC;gBAClE,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,QAAQ,EAAE;oBAC5B,0BAAM,eAAe,CAAC,QAAQ,CAAA,CAAC;iBAChC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAC1D,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,QAAQ,EAAE;oBAC5B,0BAAM,eAAe,CAAC,QAAQ,CAAA,CAAC;iBAChC;aACF;SACF;KAAA;;;;;;;IAQc,eAAe,CAC5B,UAA2B,EAAE;;;;gBAE7B,KAA6B,IAAA,KAAAoD,oBAAA,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,QAAQ,WAAA,CAAA;oBACvB,oBAAA,OAAOC,uBAAAD,oBAAA,QAAQ,CAAA,CAAA,CAAA,CAAC;iBACjB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeM,YAAY,CACjB,UAA2B,EAAE;QAE7B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,8CAA8C,EAC9C,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE3C,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAAK,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC;SACzF,CAAC;KACH;;;;;;;;IASc,gBAAgB,CAC7B,iBAA+B,EAC/B,UAA2B,EAAE;;YAE7B,IAAI,iBAAiB,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC/C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA,CAAC;gBAClE,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,QAAQ,EAAE;oBAC5B,0BAAM,eAAe,CAAC,QAAQ,CAAA,CAAC;iBAChC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAC1D,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,QAAQ,EAAE;oBAC5B,0BAAM,eAAe,CAAC,QAAQ,CAAA,CAAC;iBAChC;aACF;SACF;KAAA;;;;;;;IAQc,eAAe,CAC5B,UAA2B,EAAE;;;;gBAE7B,KAA6B,IAAA,KAAAA,oBAAA,IAAI,CAAC,gBAAgB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA,IAAA;oBAApD,MAAM,QAAQ,WAAA,CAAA;oBACvB,oBAAA,OAAOC,uBAAAD,oBAAA,QAAQ,CAAA,CAAA,CAAA,CAAC;iBACjB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeM,YAAY,CACjB,UAA2B,EAAE;QAE7B,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,8CAA8C,EAC9C,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAE3C,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAAK,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,cAAc,CAAC;SACzF,CAAC;KACH;;;;;;;;IASc,0BAA0B,CACvC,iBAA+B,EAC/B,UAAyC,EAAE;;YAE3C,IAAI,iBAAiB,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC/C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAA,CAAC;gBAC5E,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,SAAS,EAAE;oBAC7B,0BAAM,eAAe,CAAC,SAAS,CAAA,CAAC;iBACjC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,4BAA4B,CACpE,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,SAAS,EAAE;oBAC7B,0BAAM,eAAe,CAAC,SAAS,CAAA,CAAC;iBACjC;aACF;SACF;KAAA;;;;;;;IAQc,yBAAyB,CACtC,UAAyC,EAAE;;;;gBAE3C,KAA8B,IAAA,KAAAA,oBAAA,IAAI,CAAC,0BAA0B,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA/D,MAAM,SAAS,WAAA,CAAA;oBACxB,oBAAA,OAAOC,uBAAAD,oBAAA,SAAS,CAAA,CAAA,CAAA,CAAC;iBAClB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeM,sBAAsB,CAC3B,UAAyC,EAAE;QAE3C,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,2DAA2D,EAC3D,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAAC,CAAC;QAErD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAClC,IAAI,CAAC,0BAA0B,CAAC,QAAQ,EAAE,cAAc,CAAC;SAC5D,CAAC;KACH;;;;;;;;IASc,oBAAoB,CACjC,iBAA+B,EAC/B,UAAmC,EAAE;;YAErC,IAAI,iBAAiB,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC/C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAA,CAAC;gBACtE,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,YAAY,EAAE;oBAChC,0BAAM,eAAe,CAAC,YAAY,CAAA,CAAC;iBACpC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAC9D,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,YAAY,EAAE;oBAChC,0BAAM,eAAe,CAAC,YAAY,CAAA,CAAC;iBACpC;aACF;SACF;KAAA;;;;;;;IAQc,mBAAmB,CAChC,UAAmC,EAAE;;;;gBAErC,KAAiC,IAAA,KAAAA,oBAAA,IAAI,CAAC,oBAAoB,CAAC,EAAE,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA5D,MAAM,YAAY,WAAA,CAAA;oBAC3B,oBAAA,OAAOC,uBAAAD,oBAAA,YAAY,CAAA,CAAA,CAAA,CAAC;iBACrB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeM,gBAAgB,CACrB,UAAmC,EAAE;QAErC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,qDAAqD,EACrD,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC;QAE/C,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAAK,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,cAAc,CAAC;SAC7F,CAAC;KACH;;;;;;;;;IAUc,uBAAuB,CACpC,iBAA+B,EAC/B,WAAmB,EACnB,UAAsC,EAAE;;YAExC,IAAI,iBAAiB,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC/C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA,CAAC;gBACnF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,eAAe,EAAE;oBACnC,0BAAM,eAAe,CAAC,eAAe,CAAA,CAAC;iBACvC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAC9D,WAAW,EACX,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,eAAe,EAAE;oBACnC,0BAAM,eAAe,CAAC,eAAe,CAAA,CAAC;iBACvC;aACF;SACF;KAAA;;;;;;;;IASc,sBAAsB,CACnC,WAAmB,EACnB,UAAsC,EAAE;;;;gBAExC,KAAoC,IAAA,KAAAA,oBAAA,IAAI,CAAC,uBAAuB,CAAC,EAAE,EAAE,WAAW,EAAE,OAAO,CAAC,CAAA,IAAA;oBAA/E,MAAM,eAAe,WAAA,CAAA;oBAC9B,oBAAA,OAAOC,uBAAAD,oBAAA,eAAe,CAAA,CAAA,CAAA,CAAC;iBACxB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;IAeM,mBAAmB,CACxB,WAAmB,EACnB,UAAsC,EAAE;QAExC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,qDAAqD,EACrD,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;QAE/D,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAClC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,EAAE,WAAW,EAAE,cAAc,CAAC;SACtE,CAAC;KACH;;;;;;;;;IAUc,kBAAkB,CAC/B,iBAA+B,EAC/B,aAAoC,EACpC,UAAiC,EAAE;;YAEnC,IAAI,iBAAiB,CAAC,iBAAiB,IAAI,IAAI,EAAE;gBAC/C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CACrD,aAAa,CAAC,WAAW,EACzB,aAAa,CAAC,gBAAgB,EAC9B,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,UAAU,EAAE;oBAC9B,0BAAM,eAAe,CAAC,UAAU,CAAA,CAAC;iBAClC;aACF;YAED,OAAO,iBAAiB,CAAC,iBAAiB,EAAE;gBAC1C,MAAM,eAAe,GAAG,oBAAM,IAAI,CAAC,MAAM,CAAC,iBAAiB,CACzD,aAAa,CAAC,WAAW,EACzB,aAAa,CAAC,gBAAgB,EAC9B,iBAAiB,CAAC,iBAAiB,EACnC,OAAO,CACR,CAAA,CAAC;gBACF,iBAAiB,CAAC,iBAAiB,GAAG,eAAe,CAAC,QAAQ,CAAC;gBAE/D,IAAI,eAAe,CAAC,UAAU,EAAE;oBAC9B,0BAAM,eAAe,CAAC,UAAU,CAAA,CAAC;iBAClC;aACF;SACF;KAAA;;;;;;;;IASc,iBAAiB,CAC9B,aAAoC,EACpC,UAAiC,EAAE;;;;gBAEnC,KAA+B,IAAA,KAAAA,oBAAA,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,aAAa,EAAE,OAAO,CAAC,CAAA,IAAA;oBAAvE,MAAM,UAAU,WAAA,CAAA;oBACzB,oBAAA,OAAOC,uBAAAD,oBAAA,UAAU,CAAA,CAAA,CAAA,CAAC;iBACnB;;;;;;;;;SACF;KAAA;;;;;;;;;;;;;;;IAgBM,cAAc,CACnB,aAAoC,EACpC,UAAiC,EAAE;QAEnC,MAAM,EAAE,IAAI,EAAE,cAAc,EAAE,GAAG,UAAU,CACzC,gDAAgD,EAChD,OAAO,CACR,CAAC;QACF,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;QAE5D,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO;YACL,IAAI;gBACF,OAAO,IAAI,CAAC,IAAI,EAAE,CAAC;aACpB;YACD,CAAC,MAAM,CAAC,aAAa,CAAC;gBACpB,OAAO,IAAI,CAAC;aACb;YACD,MAAM,EAAE,CAAC,WAAyB,EAAE,KAClC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,aAAa,EAAE,cAAc,CAAC;SACnE,CAAC;KACH;;;;;;;;;;;;;;;;;;;;;IAsBY,wBAAwB,CACnC,YAAsB,EACtB,UAA2C,EAAE;;YAE7C,MAAM,EAAE,YAAY,EAAE,UAAU,KAAwB,OAAO,EAA1B,cAAc,gBAAK,OAAO,EAAzD,8BAA+C,CAAU,CAAC;YAChE,MAAM,MAAM,GAAG,IAAI,yBAAyB,CAAC;gBAC3C,YAAY;gBACZ,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY;gBACZ,UAAU;gBACV,cAAc;aACf,CAAC,CAAC;YAEH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,MAAM,CAAC;SACf;KAAA;;;;;;;;;;;;;;;;;;;;;;;IAwBY,wBAAwB,CACnC,kBAA4C,EAC5C,UAA2C,EAAE;;YAE7C,MAAM,EAAE,YAAY,EAAE,UAAU,KAAwB,OAAO,EAA1B,cAAc,gBAAK,OAAO,EAAzD,8BAA+C,CAAU,CAAC;YAChE,MAAM,MAAM,GAAG,IAAI,yBAAyB,CAAC;gBAC3C,kBAAkB;gBAClB,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY;gBACZ,UAAU;gBACV,cAAc;aACf,CAAC,CAAC;YAEH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,MAAM,CAAC;SACf;KAAA;;;;;;;;;;;;;;;;;;;;;;IAuBY,wBAAwB,CACnC,aAAqB,EACrB,UAA2C,EAAE;;YAE7C,MAAM,EAAE,YAAY,EAAE,UAAU,KAAwB,OAAO,EAA1B,cAAc,gBAAK,OAAO,EAAzD,8BAA+C,CAAU,CAAC;YAChE,MAAM,MAAM,GAAG,IAAI,yBAAyB,CAAC;gBAC3C,aAAa;gBACb,MAAM,EAAE,IAAI,CAAC,MAAM;gBACnB,YAAY;gBACZ,UAAU;gBACV,cAAc;aACf,CAAC,CAAC;YAEH,MAAM,MAAM,CAAC,IAAI,EAAE,CAAC;YACpB,OAAO,MAAM,CAAC;SACf;KAAA;CACF;;;;;"}