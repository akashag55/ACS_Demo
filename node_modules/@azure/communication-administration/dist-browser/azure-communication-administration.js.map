{"version":3,"file":"azure-communication-administration.js","sources":["../../../../common/temp/node_modules/.pnpm/tslib@2.1.0/node_modules/tslib/tslib.es6.js","../../../core/core-http/src/httpHeaders.ts","../../../core/core-http/src/util/base64.browser.ts","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/rng.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/regex.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/validate.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/stringify.js","../../../../common/temp/node_modules/.pnpm/uuid@8.3.2/node_modules/uuid/dist/esm-browser/v4.js","../../../core/core-http/src/util/constants.ts","../../../core/core-http/src/util/serializer.common.ts","../../../core/core-http/src/util/utils.ts","../../../core/core-http/src/serializer.ts","../../../core/core-http/src/webResource.ts","../../../core/abort-controller/src/AbortSignal.ts","../../../core/abort-controller/src/AbortController.ts","../../../core/core-http/src/util/inspect.browser.ts","../../../core/core-http/src/util/url.browser.ts","../../../core/core-http/src/url.ts","../../../core/core-http/src/util/sanitizer.ts","../../../core/core-http/src/restError.ts","../../../core/core-http/src/xhrHttpClient.ts","../../../core/core-http/src/httpPipelineLogLevel.ts","../../../core/core-http/src/operationOptions.ts","../../../core/core-auth/src/azureKeyCredential.ts","../../../core/core-auth/src/tokenCredential.ts","../../../core/core-http/src/policies/requestPolicy.ts","../../../core/logger/src/log.browser.ts","../../../core/logger/src/debug.ts","../../../core/logger/src/index.ts","../../../core/core-http/src/log.ts","../../../core/core-http/src/policies/logPolicy.ts","../../../core/core-http/src/operationParameter.ts","../../../core/core-http/src/operationSpec.ts","../../../core/core-http/src/util/xml.browser.ts","../../../core/core-http/src/policies/deserializationPolicy.ts","../../../core/core-http/src/util/exponentialBackoffStrategy.ts","../../../core/core-http/src/policies/exponentialRetryPolicy.ts","../../../core/core-http/src/policies/generateClientRequestIdPolicy.ts","../../../core/core-http/src/policies/msRestUserAgentPolicy.browser.ts","../../../core/core-http/src/policies/userAgentPolicy.ts","../../../core/core-http/src/policies/redirectPolicy.ts","../../../core/core-http/src/policies/rpRegistrationPolicy.ts","../../../core/core-http/src/credentials/accessTokenCache.ts","../../../core/core-http/src/credentials/accessTokenRefresher.ts","../../../core/core-http/src/policies/bearerTokenAuthenticationPolicy.ts","../../../core/core-http/src/policies/systemErrorRetryPolicy.ts","../../../core/core-http/src/queryCollectionFormat.ts","../../../core/core-http/src/policies/throttlingRetryPolicy.ts","../../../core/core-http/src/policies/signingPolicy.ts","../../../core/core-http/src/policies/keepAlivePolicy.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/common/Logger.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/getter.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/HttpTextPropagator.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/NoopHttpTextPropagator.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/setter.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/correlation_context/CorrelationContext.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/correlation_context/EntryValue.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/BatchObserverResult.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/BoundInstrument.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Meter.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/MeterProvider.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Metric.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Observation.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/ObserverResult.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/Event.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/instrumentation/Plugin.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/link_context.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/link.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/trace_flags.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopSpan.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/Sampler.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/SamplingResult.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span_context.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span_kind.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/SpanOptions.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/status.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/TimedEvent.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/tracer_provider.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/tracer.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/types.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/context.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/NoopContextManager.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/index.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/platform/browser/index.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/global-utils.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/context.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/trace.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/metrics.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/propagation.ts","../../../../common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/index.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracers/noop/noOpSpan.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracers/noop/noOpTracer.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/global.browser.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/cache.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/tracerProxy.ts","../../../../common/temp/node_modules/.pnpm/@azure/core-tracing@1.0.0-preview.9/node_modules/@azure/core-tracing/src/utils/traceParentHeader.ts","../../../core/core-http/src/policies/tracingPolicy.ts","../../../core/core-http/src/policies/disableResponseDecompressionPolicy.browser.ts","../../../core/core-http/src/policies/ndJsonPolicy.ts","../../../core/core-http/src/httpClientCache.ts","../../../core/core-http/src/serviceClient.ts","../../communication-common/src/credential/encodeUtils.browser.ts","../../communication-common/src/credential/cryptoUtils.browser.ts","../../communication-common/src/credential/communicationAccessKeyCredentialPolicy.ts","../../communication-common/src/credential/communicationAuthPolicy.ts","../../communication-common/src/credential/connectionString.ts","../../communication-common/src/credential/clientArguments.ts","../src/communicationIdentity/generated/src/models/mappers.ts","../src/communicationIdentity/generated/src/models/parameters.ts","../src/communicationIdentity/generated/src/operations/communicationIdentity.ts","../src/communicationIdentity/generated/src/identityRestClientContext.ts","../src/communicationIdentity/generated/src/identityRestClient.ts","../src/communicationIdentity/constants.ts","../src/common/logger.ts","../src/common/tracing.ts","../src/common/mappers.ts","../src/communicationIdentity/communicationIdentityClient.ts","../../../core/core-asynciterator-polyfill/src/index.ts","../src/phoneNumber/generated/src/models/mappers.ts","../src/phoneNumber/generated/src/models/parameters.ts","../src/phoneNumber/generated/src/operations/phoneNumberAdministration.ts","../src/phoneNumber/generated/src/phoneNumberRestClientContext.ts","../src/phoneNumber/generated/src/phoneNumberRestClient.ts","../src/phoneNumber/constants.ts","../../../core/core-lro/src/poller.ts","../src/phoneNumber/lro/phoneNumberPollerBase.ts","../src/phoneNumber/lro/utils.ts","../src/phoneNumber/lro/release/operation.ts","../src/phoneNumber/lro/release/poller.ts","../src/phoneNumber/lro/reserve/operation.ts","../src/phoneNumber/lro/reserve/poller.ts","../src/phoneNumber/lro/purchase/operation.ts","../src/phoneNumber/lro/purchase/poller.ts","../src/phoneNumber/phoneNumberAdministrationClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * A collection of HttpHeaders that can be sent with a HTTP request.\n */\nfunction getHeaderKey(headerName: string): string {\n  return headerName.toLowerCase();\n}\n\n/**\n * An individual header within a HttpHeaders collection.\n */\nexport interface HttpHeader {\n  /**\n   * The name of the header.\n   */\n  name: string;\n\n  /**\n   * The value of the header.\n   */\n  value: string;\n}\n\n/**\n * A HttpHeaders collection represented as a simple JSON object.\n */\nexport type RawHttpHeaders = { [headerName: string]: string };\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport interface HttpHeadersLike {\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  set(headerName: string, headerValue: string | number): void;\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  get(headerName: string): string | undefined;\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  contains(headerName: string): boolean;\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  remove(headerName: string): boolean;\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  rawHeaders(): RawHttpHeaders;\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  headersArray(): HttpHeader[];\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  headerNames(): string[];\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  headerValues(): string[];\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  clone(): HttpHeadersLike;\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   * The result is the same as `rawHeaders()`.\n   */\n  toJson(): RawHttpHeaders;\n}\n\nexport function isHttpHeadersLike(object?: unknown): object is HttpHeadersLike {\n  if (object && typeof object === \"object\") {\n    const castObject = object as {\n      rawHeaders: unknown;\n      clone: unknown;\n      get: unknown;\n      set: unknown;\n      contains: unknown;\n      remove: unknown;\n      headersArray: unknown;\n      headerValues: unknown;\n      headerNames: unknown;\n      toJson: unknown;\n    };\n    if (\n      typeof castObject.rawHeaders === \"function\" &&\n      typeof castObject.clone === \"function\" &&\n      typeof castObject.get === \"function\" &&\n      typeof castObject.set === \"function\" &&\n      typeof castObject.contains === \"function\" &&\n      typeof castObject.remove === \"function\" &&\n      typeof castObject.headersArray === \"function\" &&\n      typeof castObject.headerValues === \"function\" &&\n      typeof castObject.headerNames === \"function\" &&\n      typeof castObject.toJson === \"function\"\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * A collection of HTTP header key/value pairs.\n */\nexport class HttpHeaders implements HttpHeadersLike {\n  private readonly _headersMap: { [headerKey: string]: HttpHeader };\n\n  constructor(rawHeaders?: RawHttpHeaders) {\n    this._headersMap = {};\n    if (rawHeaders) {\n      for (const headerName in rawHeaders) {\n        this.set(headerName, rawHeaders[headerName]);\n      }\n    }\n  }\n\n  /**\n   * Set a header in this collection with the provided name and value. The name is\n   * case-insensitive.\n   * @param headerName - The name of the header to set. This value is case-insensitive.\n   * @param headerValue - The value of the header to set.\n   */\n  public set(headerName: string, headerValue: string | number): void {\n    this._headersMap[getHeaderKey(headerName)] = {\n      name: headerName,\n      value: headerValue.toString()\n    };\n  }\n\n  /**\n   * Get the header value for the provided header name, or undefined if no header exists in this\n   * collection with the provided name.\n   * @param headerName - The name of the header.\n   */\n  public get(headerName: string): string | undefined {\n    const header: HttpHeader = this._headersMap[getHeaderKey(headerName)];\n    return !header ? undefined : header.value;\n  }\n\n  /**\n   * Get whether or not this header collection contains a header entry for the provided header name.\n   */\n  public contains(headerName: string): boolean {\n    return !!this._headersMap[getHeaderKey(headerName)];\n  }\n\n  /**\n   * Remove the header with the provided headerName. Return whether or not the header existed and\n   * was removed.\n   * @param headerName - The name of the header to remove.\n   */\n  public remove(headerName: string): boolean {\n    const result: boolean = this.contains(headerName);\n    delete this._headersMap[getHeaderKey(headerName)];\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained this collection as an object.\n   */\n  public rawHeaders(): RawHttpHeaders {\n    const result: RawHttpHeaders = {};\n    for (const headerKey in this._headersMap) {\n      const header: HttpHeader = this._headersMap[headerKey];\n      result[header.name.toLowerCase()] = header.value;\n    }\n    return result;\n  }\n\n  /**\n   * Get the headers that are contained in this collection as an array.\n   */\n  public headersArray(): HttpHeader[] {\n    const headers: HttpHeader[] = [];\n    for (const headerKey in this._headersMap) {\n      headers.push(this._headersMap[headerKey]);\n    }\n    return headers;\n  }\n\n  /**\n   * Get the header names that are contained in this collection.\n   */\n  public headerNames(): string[] {\n    const headerNames: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerNames.push(headers[i].name);\n    }\n    return headerNames;\n  }\n\n  /**\n   * Get the header values that are contained in this collection.\n   */\n  public headerValues(): string[] {\n    const headerValues: string[] = [];\n    const headers: HttpHeader[] = this.headersArray();\n    for (let i = 0; i < headers.length; ++i) {\n      headerValues.push(headers[i].value);\n    }\n    return headerValues;\n  }\n\n  /**\n   * Get the JSON object representation of this HTTP header collection.\n   */\n  public toJson(): RawHttpHeaders {\n    return this.rawHeaders();\n  }\n\n  /**\n   * Get the string representation of this HTTP header collection.\n   */\n  public toString(): string {\n    return JSON.stringify(this.toJson());\n  }\n\n  /**\n   * Create a deep clone/copy of this HttpHeaders collection.\n   */\n  public clone(): HttpHeaders {\n    return new HttpHeaders(this.rawHeaders());\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Encodes a string in base64 format.\n * @param value - The string to encode\n */\nexport function encodeString(value: string): string {\n  return btoa(value);\n}\n\n/**\n * Encodes a byte array in base64 format.\n * @param value - The Uint8Aray to encode\n */\nexport function encodeByteArray(value: Uint8Array): string {\n  let str = \"\";\n  for (let i = 0; i < value.length; i++) {\n    str += String.fromCharCode(value[i]);\n  }\n  return btoa(str);\n}\n\n/**\n * Decodes a base64 string into a byte array.\n * @param value - The base64 string to decode\n */\nexport function decodeString(value: string): Uint8Array {\n  const byteString = atob(value);\n  const arr = new Uint8Array(byteString.length);\n  for (let i = 0; i < byteString.length; i++) {\n    arr[i] = byteString.charCodeAt(i);\n  }\n  return arr;\n}\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const Constants = {\n  /**\n   * The core-http version\n   */\n  coreHttpVersion: \"1.2.3\",\n\n  /**\n   * Specifies HTTP.\n   */\n  HTTP: \"http:\",\n\n  /**\n   * Specifies HTTPS.\n   */\n  HTTPS: \"https:\",\n\n  /**\n   * Specifies HTTP Proxy.\n   */\n  HTTP_PROXY: \"HTTP_PROXY\",\n\n  /**\n   * Specifies HTTPS Proxy.\n   */\n  HTTPS_PROXY: \"HTTPS_PROXY\",\n\n  /**\n   * Specifies NO Proxy.\n   */\n  NO_PROXY: \"NO_PROXY\",\n\n  /**\n   * Specifies ALL Proxy.\n   */\n  ALL_PROXY: \"ALL_PROXY\",\n\n  HttpConstants: {\n    /**\n     * Http Verbs\n     */\n    HttpVerbs: {\n      PUT: \"PUT\",\n      GET: \"GET\",\n      DELETE: \"DELETE\",\n      POST: \"POST\",\n      MERGE: \"MERGE\",\n      HEAD: \"HEAD\",\n      PATCH: \"PATCH\"\n    },\n\n    StatusCodes: {\n      TooManyRequests: 429\n    }\n  },\n\n  /**\n   * Defines constants for use with HTTP headers.\n   */\n  HeaderConstants: {\n    /**\n     * The Authorization header.\n     */\n    AUTHORIZATION: \"authorization\",\n\n    AUTHORIZATION_SCHEME: \"Bearer\",\n\n    /**\n     * The Retry-After response-header field can be used with a 503 (Service\n     * Unavailable) or 349 (Too Many Requests) responses to indicate how long\n     * the service is expected to be unavailable to the requesting client.\n     */\n    RETRY_AFTER: \"Retry-After\",\n\n    /**\n     * The UserAgent header.\n     */\n    USER_AGENT: \"User-Agent\"\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Default key used to access the XML attributes.\n */\nexport const XML_ATTRKEY = \"$\";\n/**\n * Default key used to access the XML value content.\n */\nexport const XML_CHARKEY = \"_\";\n\n/**\n * Options to govern behavior of xml parser and builder.\n */\nexport interface SerializerOptions {\n  /**\n   * indicates the name of the root element in the resulting XML when building XML.\n   */\n  rootName?: string;\n  /**\n   * indicates whether the root element is to be included or not in the output when parsing XML.\n   */\n  includeRoot?: boolean;\n  /**\n   * key used to access the XML value content when parsing XML.\n   */\n  xmlCharKey?: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { Constants } from \"./constants\";\nimport { XML_ATTRKEY } from \"./serializer.common\";\n\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * A constant that indicates whether the environment is node.js or browser based.\n */\nexport const isNode =\n  typeof process !== \"undefined\" &&\n  !!process.version &&\n  !!process.versions &&\n  !!process.versions.node;\n\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck: { protocol: string }): boolean {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nexport function encodeUri(uri: string): string {\n  return encodeURIComponent(uri)\n    .replace(/!/g, \"%21\")\n    .replace(/\"/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\")\n    .replace(/\\*/g, \"%2A\");\n}\n\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nexport function stripResponse(response: HttpOperationResponse): any {\n  const strippedResponse: any = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nexport function stripRequest(request: WebResourceLike): WebResourceLike {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart: unknown\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * A wrapper for setTimeout that resolves a promise after t milliseconds.\n * @param t - The number of milliseconds to be delayed.\n * @param value - The value to be resolved with after a timeout of t milliseconds.\n * @returns Resolved promise\n */\nexport function delay<T>(t: number, value?: T): Promise<T | void> {\n  return new Promise((resolve) => setTimeout(() => resolve(value), t));\n}\n\n/**\n * Service callback that is returned for REST requests initiated by the service client.\n */\nexport interface ServiceCallback<TResult> {\n  /**\n   * A method that will be invoked as a callback to a service function.\n   * @param err - The error occurred if any, while executing the request; otherwise null.\n   * @param result - The deserialized response body if an error did not occur.\n   * @param request - The raw/actual request sent to the server if an error did not occur.\n   * @param response - The raw/actual response from the server if an error did not occur.\n   */\n  (\n    err: Error | RestError | null,\n    result?: TResult,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ): void;\n}\n\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function promiseToCallback(promise: Promise<any>): (cb: Function) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (cb: Function): void => {\n    promise\n      .then((data: any) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        return cb(undefined, data);\n      })\n      .catch((err: Error) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        cb(err);\n      });\n  };\n}\n\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback<T>(\n  promise: Promise<HttpOperationResponse>\n): (cb: ServiceCallback<T>) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: ServiceCallback<T>): void => {\n    promise\n      .then((data: HttpOperationResponse) => {\n        return process.nextTick(cb, undefined, data.parsedBody as T, data.request, data);\n      })\n      .catch((err: Error) => {\n        process.nextTick(cb, err);\n      });\n  };\n}\n\nexport function prepareXMLRootList(\n  obj: unknown,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string\n): { [s: string]: any } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtorParam: unknown, sourceCtors: any[]): void {\n  const castTargetCtorParam = targetCtorParam as {\n    prototype: Record<string, unknown>;\n  };\n  sourceCtors.forEach((sourceCtor) => {\n    Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n      castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n    });\n  });\n}\n\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value: unknown): boolean {\n  return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n\nexport function getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable eqeqeq */\n\nimport * as base64 from \"./util/base64\";\nimport * as utils from \"./util/utils\";\nimport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./util/serializer.common\";\n\nexport class Serializer {\n  constructor(\n    public readonly modelMappers: { [key: string]: any } = {},\n    public readonly isXML?: boolean\n  ) {}\n\n  validateConstraints(mapper: Mapper, value: unknown, objectName: string): void {\n    const failValidation = (\n      constraintName: keyof MapperConstraints,\n      constraintValue: any\n    ): Error => {\n      throw new Error(\n        `\"${objectName}\" with value \"${value}\" should satisfy the constraint \"${constraintName}\": ${constraintValue}.`\n      );\n    };\n    if (mapper.constraints && value != undefined) {\n      const valueAsNumber = value as number;\n      const {\n        ExclusiveMaximum,\n        ExclusiveMinimum,\n        InclusiveMaximum,\n        InclusiveMinimum,\n        MaxItems,\n        MaxLength,\n        MinItems,\n        MinLength,\n        MultipleOf,\n        Pattern,\n        UniqueItems\n      } = mapper.constraints;\n      if (ExclusiveMaximum != undefined && valueAsNumber >= ExclusiveMaximum) {\n        failValidation(\"ExclusiveMaximum\", ExclusiveMaximum);\n      }\n      if (ExclusiveMinimum != undefined && valueAsNumber <= ExclusiveMinimum) {\n        failValidation(\"ExclusiveMinimum\", ExclusiveMinimum);\n      }\n      if (InclusiveMaximum != undefined && valueAsNumber > InclusiveMaximum) {\n        failValidation(\"InclusiveMaximum\", InclusiveMaximum);\n      }\n      if (InclusiveMinimum != undefined && valueAsNumber < InclusiveMinimum) {\n        failValidation(\"InclusiveMinimum\", InclusiveMinimum);\n      }\n      const valueAsArray = value as any[];\n      if (MaxItems != undefined && valueAsArray.length > MaxItems) {\n        failValidation(\"MaxItems\", MaxItems);\n      }\n      if (MaxLength != undefined && valueAsArray.length > MaxLength) {\n        failValidation(\"MaxLength\", MaxLength);\n      }\n      if (MinItems != undefined && valueAsArray.length < MinItems) {\n        failValidation(\"MinItems\", MinItems);\n      }\n      if (MinLength != undefined && valueAsArray.length < MinLength) {\n        failValidation(\"MinLength\", MinLength);\n      }\n      if (MultipleOf != undefined && valueAsNumber % MultipleOf !== 0) {\n        failValidation(\"MultipleOf\", MultipleOf);\n      }\n      if (Pattern) {\n        const pattern: RegExp = typeof Pattern === \"string\" ? new RegExp(Pattern) : Pattern;\n        if (typeof value !== \"string\" || value.match(pattern) === null) {\n          failValidation(\"Pattern\", Pattern);\n        }\n      }\n      if (\n        UniqueItems &&\n        valueAsArray.some((item: any, i: number, ar: Array<any>) => ar.indexOf(item) !== i)\n      ) {\n        failValidation(\"UniqueItems\", UniqueItems);\n      }\n    }\n  }\n\n  /**\n   * Serialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   * @param object - A valid Javascript object to be serialized\n   * @param objectName - Name of the serialized object\n   * @param options - additional options to deserialization\n   * @returns A valid serialized Javascript object\n   */\n  serialize(\n    mapper: Mapper,\n    object: unknown,\n    objectName?: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n    };\n    let payload: any = {};\n    const mapperType = mapper.type.name as string;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n    if (mapperType.match(/^Sequence$/i) !== null) {\n      payload = [];\n    }\n\n    if (mapper.isConstant) {\n      object = mapper.defaultValue;\n    }\n\n    // This table of allowed values should help explain\n    // the mapper.required and mapper.nullable properties.\n    // X means \"neither undefined or null are allowed\".\n    //           || required\n    //           || true      | false\n    //  nullable || ==========================\n    //      true || null      | undefined/null\n    //     false || X         | undefined\n    // undefined || X         | undefined/null\n\n    const { required, nullable } = mapper;\n\n    if (required && nullable && object === undefined) {\n      throw new Error(`${objectName} cannot be undefined.`);\n    }\n    if (required && !nullable && object == undefined) {\n      throw new Error(`${objectName} cannot be null or undefined.`);\n    }\n    if (!required && nullable === false && object === null) {\n      throw new Error(`${objectName} cannot be null.`);\n    }\n\n    if (object == undefined) {\n      payload = object;\n    } else {\n      // Validate Constraints if any\n      this.validateConstraints(mapper, object, objectName);\n      if (mapperType.match(/^any$/i) !== null) {\n        payload = object;\n      } else if (mapperType.match(/^(Number|String|Boolean|Object|Stream|Uuid)$/i) !== null) {\n        payload = serializeBasicTypes(mapperType, objectName, object);\n      } else if (mapperType.match(/^Enum$/i) !== null) {\n        const enumMapper: EnumMapper = mapper as EnumMapper;\n        payload = serializeEnumType(objectName, enumMapper.type.allowedValues, object);\n      } else if (\n        mapperType.match(/^(Date|DateTime|TimeSpan|DateTimeRfc1123|UnixTime)$/i) !== null\n      ) {\n        payload = serializeDateTypes(mapperType, object, objectName);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = serializeByteArrayType(objectName, object as Uint8Array);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = serializeBase64UrlType(objectName, object as Uint8Array);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = serializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = serializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Composite$/i) !== null) {\n        payload = serializeCompositeType(\n          this,\n          mapper as CompositeMapper,\n          object,\n          objectName,\n          Boolean(this.isXML),\n          updatedOptions\n        );\n      }\n    }\n    return payload;\n  }\n\n  /**\n   * Deserialize the given object based on its metadata defined in the mapper\n   *\n   * @param mapper - The mapper which defines the metadata of the serializable object\n   * @param responseBody - A valid Javascript entity to be deserialized\n   * @param objectName - Name of the deserialized object\n   * @param options - Controls behavior of XML parser and builder.\n   * @returns A valid deserialized Javascript object\n   */\n  deserialize(\n    mapper: Mapper,\n    responseBody: unknown,\n    objectName: string,\n    options: SerializerOptions = {}\n  ): any {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: options.rootName ?? \"\",\n      includeRoot: options.includeRoot ?? false,\n      xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n    };\n    if (responseBody == undefined) {\n      if (this.isXML && mapper.type.name === \"Sequence\" && !mapper.xmlIsWrapped) {\n        // Edge case for empty XML non-wrapped lists. xml2js can't distinguish\n        // between the list being empty versus being missing,\n        // so let's do the more user-friendly thing and return an empty list.\n        responseBody = [];\n      }\n      // specifically check for undefined as default value can be a falsey value `0, \"\", false, null`\n      if (mapper.defaultValue !== undefined) {\n        responseBody = mapper.defaultValue;\n      }\n      return responseBody;\n    }\n\n    let payload: any;\n    const mapperType = mapper.type.name;\n    if (!objectName) {\n      objectName = mapper.serializedName!;\n    }\n\n    if (mapperType.match(/^Composite$/i) !== null) {\n      payload = deserializeCompositeType(\n        this,\n        mapper as CompositeMapper,\n        responseBody,\n        objectName,\n        updatedOptions\n      );\n    } else {\n      if (this.isXML) {\n        const xmlCharKey = updatedOptions.xmlCharKey;\n        const castResponseBody = responseBody as Record<string, unknown>;\n        /**\n         * If the mapper specifies this as a non-composite type value but the responseBody contains\n         * both header (\"$\" i.e., XML_ATTRKEY) and body (\"#\" i.e., XML_CHARKEY) properties,\n         * then just reduce the responseBody value to the body (\"#\" i.e., XML_CHARKEY) property.\n         */\n        if (\n          castResponseBody[XML_ATTRKEY] != undefined &&\n          castResponseBody[xmlCharKey] != undefined\n        ) {\n          responseBody = castResponseBody[xmlCharKey];\n        }\n      }\n\n      if (mapperType.match(/^Number$/i) !== null) {\n        payload = parseFloat(responseBody as string);\n        if (isNaN(payload)) {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^Boolean$/i) !== null) {\n        if (responseBody === \"true\") {\n          payload = true;\n        } else if (responseBody === \"false\") {\n          payload = false;\n        } else {\n          payload = responseBody;\n        }\n      } else if (mapperType.match(/^(String|Enum|Object|Stream|Uuid|TimeSpan|any)$/i) !== null) {\n        payload = responseBody;\n      } else if (mapperType.match(/^(Date|DateTime|DateTimeRfc1123)$/i) !== null) {\n        payload = new Date(responseBody as string);\n      } else if (mapperType.match(/^UnixTime$/i) !== null) {\n        payload = unixTimeToDate(responseBody as number);\n      } else if (mapperType.match(/^ByteArray$/i) !== null) {\n        payload = base64.decodeString(responseBody as string);\n      } else if (mapperType.match(/^Base64Url$/i) !== null) {\n        payload = base64UrlToByteArray(responseBody as string);\n      } else if (mapperType.match(/^Sequence$/i) !== null) {\n        payload = deserializeSequenceType(\n          this,\n          mapper as SequenceMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      } else if (mapperType.match(/^Dictionary$/i) !== null) {\n        payload = deserializeDictionaryType(\n          this,\n          mapper as DictionaryMapper,\n          responseBody,\n          objectName,\n          updatedOptions\n        );\n      }\n    }\n\n    if (mapper.isConstant) {\n      payload = mapper.defaultValue;\n    }\n\n    return payload;\n  }\n}\n\nfunction trimEnd(str: string, ch: string): string {\n  let len = str.length;\n  while (len - 1 >= 0 && str[len - 1] === ch) {\n    --len;\n  }\n  return str.substr(0, len);\n}\n\nfunction bufferToBase64Url(buffer: any): string | undefined {\n  if (!buffer) {\n    return undefined;\n  }\n  if (!(buffer instanceof Uint8Array)) {\n    throw new Error(`Please provide an input of type Uint8Array for converting to Base64Url.`);\n  }\n  // Uint8Array to Base64.\n  const str = base64.encodeByteArray(buffer);\n  // Base64 to Base64Url.\n  return trimEnd(str, \"=\")\n    .replace(/\\+/g, \"-\")\n    .replace(/\\//g, \"_\");\n}\n\nfunction base64UrlToByteArray(str: string): Uint8Array | undefined {\n  if (!str) {\n    return undefined;\n  }\n  if (str && typeof str.valueOf() !== \"string\") {\n    throw new Error(\"Please provide an input of type string for converting to Uint8Array\");\n  }\n  // Base64Url to Base64.\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  // Base64 to Uint8Array.\n  return base64.decodeString(str);\n}\n\nfunction splitSerializeName(prop: string | undefined): string[] {\n  const classes: string[] = [];\n  let partialclass = \"\";\n  if (prop) {\n    const subwords = prop.split(\".\");\n\n    for (const item of subwords) {\n      if (item.charAt(item.length - 1) === \"\\\\\") {\n        partialclass += item.substr(0, item.length - 1) + \".\";\n      } else {\n        partialclass += item;\n        classes.push(partialclass);\n        partialclass = \"\";\n      }\n    }\n  }\n\n  return classes;\n}\n\nfunction dateToUnixTime(d: string | Date): number | undefined {\n  if (!d) {\n    return undefined;\n  }\n\n  if (typeof d.valueOf() === \"string\") {\n    d = new Date(d as string);\n  }\n  return Math.floor((d as Date).getTime() / 1000);\n}\n\nfunction unixTimeToDate(n: number): Date | undefined {\n  if (!n) {\n    return undefined;\n  }\n  return new Date(n * 1000);\n}\n\nfunction serializeBasicTypes(typeName: string, objectName: string, value: any): any {\n  if (value !== null && value !== undefined) {\n    if (typeName.match(/^Number$/i) !== null) {\n      if (typeof value !== \"number\") {\n        throw new Error(`${objectName} with value ${value} must be of type number.`);\n      }\n    } else if (typeName.match(/^String$/i) !== null) {\n      if (typeof value.valueOf() !== \"string\") {\n        throw new Error(`${objectName} with value \"${value}\" must be of type string.`);\n      }\n    } else if (typeName.match(/^Uuid$/i) !== null) {\n      if (!(typeof value.valueOf() === \"string\" && utils.isValidUuid(value))) {\n        throw new Error(\n          `${objectName} with value \"${value}\" must be of type string and a valid uuid.`\n        );\n      }\n    } else if (typeName.match(/^Boolean$/i) !== null) {\n      if (typeof value !== \"boolean\") {\n        throw new Error(`${objectName} with value ${value} must be of type boolean.`);\n      }\n    } else if (typeName.match(/^Stream$/i) !== null) {\n      const objectType = typeof value;\n      if (\n        objectType !== \"string\" &&\n        objectType !== \"function\" &&\n        !(value instanceof ArrayBuffer) &&\n        !ArrayBuffer.isView(value) &&\n        !((typeof Blob === \"function\" || typeof Blob === \"object\") && value instanceof Blob)\n      ) {\n        throw new Error(\n          `${objectName} must be a string, Blob, ArrayBuffer, ArrayBufferView, or a function returning NodeJS.ReadableStream.`\n        );\n      }\n    }\n  }\n\n  return value;\n}\n\nfunction serializeEnumType(objectName: string, allowedValues: Array<any>, value: any): any {\n  if (!allowedValues) {\n    throw new Error(\n      `Please provide a set of allowedValues to validate ${objectName} as an Enum Type.`\n    );\n  }\n  const isPresent = allowedValues.some((item) => {\n    if (typeof item.valueOf() === \"string\") {\n      return item.toLowerCase() === value.toLowerCase();\n    }\n    return item === value;\n  });\n  if (!isPresent) {\n    throw new Error(\n      `${value} is not a valid value for ${objectName}. The valid values are: ${JSON.stringify(\n        allowedValues\n      )}.`\n    );\n  }\n  return value;\n}\n\nfunction serializeByteArrayType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = base64.encodeByteArray(value);\n  }\n  return returnValue;\n}\n\nfunction serializeBase64UrlType(objectName: string, value: Uint8Array): string {\n  let returnValue: string = \"\";\n  if (value != undefined) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error(`${objectName} must be of type Uint8Array.`);\n    }\n    returnValue = bufferToBase64Url(value) || \"\";\n  }\n  return returnValue;\n}\n\nfunction serializeDateTypes(typeName: string, value: any, objectName: string): any {\n  if (value != undefined) {\n    if (typeName.match(/^Date$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value =\n        value instanceof Date\n          ? value.toISOString().substring(0, 10)\n          : new Date(value).toISOString().substring(0, 10);\n    } else if (typeName.match(/^DateTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in ISO8601 format.`);\n      }\n      value = value instanceof Date ? value.toISOString() : new Date(value).toISOString();\n    } else if (typeName.match(/^DateTimeRfc1123$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(`${objectName} must be an instanceof Date or a string in RFC-1123 format.`);\n      }\n      value = value instanceof Date ? value.toUTCString() : new Date(value).toUTCString();\n    } else if (typeName.match(/^UnixTime$/i) !== null) {\n      if (\n        !(\n          value instanceof Date ||\n          (typeof value.valueOf() === \"string\" && !isNaN(Date.parse(value)))\n        )\n      ) {\n        throw new Error(\n          `${objectName} must be an instanceof Date or a string in RFC-1123/ISO8601 format ` +\n            `for it to be serialized in UnixTime/Epoch format.`\n        );\n      }\n      value = dateToUnixTime(value);\n    } else if (typeName.match(/^TimeSpan$/i) !== null) {\n      if (!utils.isDuration(value)) {\n        throw new Error(\n          `${objectName} must be a string in ISO 8601 format. Instead was \"${value}\".`\n        );\n      }\n    }\n  }\n  return value;\n}\n\nfunction serializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any[] {\n  if (!Array.isArray(object)) {\n    throw new Error(`${objectName} must be of type Array.`);\n  }\n  const elementType = mapper.type.element;\n  if (!elementType || typeof elementType !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempArray = [];\n  for (let i = 0; i < object.length; i++) {\n    const serializedValue = serializer.serialize(elementType, object[i], objectName, options);\n\n    if (isXml && elementType.xmlNamespace) {\n      const xmlnsKey = elementType.xmlNamespacePrefix\n        ? `xmlns:${elementType.xmlNamespacePrefix}`\n        : \"xmlns\";\n      if (elementType.type.name === \"Composite\") {\n        tempArray[i] = { ...serializedValue };\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      } else {\n        tempArray[i] = {};\n        tempArray[i][options.xmlCharKey] = serializedValue;\n        tempArray[i][XML_ATTRKEY] = { [xmlnsKey]: elementType.xmlNamespace };\n      }\n    } else {\n      tempArray[i] = serializedValue;\n    }\n  }\n  return tempArray;\n}\n\nfunction serializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  if (typeof object !== \"object\") {\n    throw new Error(`${objectName} must be of type object.`);\n  }\n  const valueType = mapper.type.value;\n  if (!valueType || typeof valueType !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}.`\n    );\n  }\n  const tempDictionary: { [key: string]: any } = {};\n  for (const key of Object.keys(object)) {\n    const serializedValue = serializer.serialize(valueType, object[key], objectName, options);\n    // If the element needs an XML namespace we need to add it within the $ property\n    tempDictionary[key] = getXmlObjectValue(valueType, serializedValue, isXml, options);\n  }\n\n  // Add the namespace to the root element if needed\n  if (isXml && mapper.xmlNamespace) {\n    const xmlnsKey = mapper.xmlNamespacePrefix ? `xmlns:${mapper.xmlNamespacePrefix}` : \"xmlns\";\n\n    const result = tempDictionary;\n    result[XML_ATTRKEY] = { [xmlnsKey]: mapper.xmlNamespace };\n    return result;\n  }\n\n  return tempDictionary;\n}\n\n/**\n * Resolves the additionalProperties property from a referenced mapper\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveAdditionalProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): SequenceMapper | BaseMapper | CompositeMapper | DictionaryMapper | EnumMapper | undefined {\n  const additionalProperties = mapper.type.additionalProperties;\n\n  if (!additionalProperties && mapper.type.className) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    return modelMapper?.type.additionalProperties;\n  }\n\n  return additionalProperties;\n}\n\n/**\n * Finds the mapper referenced by className\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n * @param objectName - Name of the object being serialized\n */\nfunction resolveReferencedMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): CompositeMapper | undefined {\n  const className = mapper.type.className;\n  if (!className) {\n    throw new Error(\n      `Class name for model \"${objectName}\" is not provided in the mapper \"${JSON.stringify(\n        mapper,\n        undefined,\n        2\n      )}\".`\n    );\n  }\n\n  return serializer.modelMappers[className];\n}\n\n/**\n * Resolves a composite mapper's modelProperties.\n * @param serializer - The serializer containing the entire set of mappers\n * @param mapper - The composite mapper to resolve\n */\nfunction resolveModelProperties(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  objectName: string\n): { [propertyName: string]: Mapper } {\n  let modelProps = mapper.type.modelProperties;\n  if (!modelProps) {\n    const modelMapper = resolveReferencedMapper(serializer, mapper, objectName);\n    if (!modelMapper) {\n      throw new Error(`mapper() cannot be null or undefined for model \"${mapper.type.className}\".`);\n    }\n    modelProps = modelMapper?.type.modelProperties;\n    if (!modelProps) {\n      throw new Error(\n        `modelProperties cannot be null or undefined in the ` +\n          `mapper \"${JSON.stringify(modelMapper)}\" of type \"${\n            mapper.type.className\n          }\" for object \"${objectName}\".`\n      );\n    }\n  }\n\n  return modelProps;\n}\n\nfunction serializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  objectName: string,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, object, \"clientName\");\n  }\n\n  if (object != undefined) {\n    const payload: any = {};\n    const modelProps = resolveModelProperties(serializer, mapper, objectName);\n    for (const key of Object.keys(modelProps)) {\n      const propertyMapper = modelProps[key];\n      if (propertyMapper.readOnly) {\n        continue;\n      }\n\n      let propName: string | undefined;\n      let parentObject: any = payload;\n      if (serializer.isXML) {\n        if (propertyMapper.xmlIsWrapped) {\n          propName = propertyMapper.xmlName;\n        } else {\n          propName = propertyMapper.xmlElementName || propertyMapper.xmlName;\n        }\n      } else {\n        const paths = splitSerializeName(propertyMapper.serializedName!);\n        propName = paths.pop();\n\n        for (const pathName of paths) {\n          const childObject = parentObject[pathName];\n          if (\n            childObject == undefined &&\n            (object[key] != undefined || propertyMapper.defaultValue !== undefined)\n          ) {\n            parentObject[pathName] = {};\n          }\n          parentObject = parentObject[pathName];\n        }\n      }\n\n      if (parentObject != undefined) {\n        if (isXml && mapper.xmlNamespace) {\n          const xmlnsKey = mapper.xmlNamespacePrefix\n            ? `xmlns:${mapper.xmlNamespacePrefix}`\n            : \"xmlns\";\n          parentObject[XML_ATTRKEY] = {\n            ...parentObject[XML_ATTRKEY],\n            [xmlnsKey]: mapper.xmlNamespace\n          };\n        }\n        const propertyObjectName =\n          propertyMapper.serializedName !== \"\"\n            ? objectName + \".\" + propertyMapper.serializedName\n            : objectName;\n\n        let toSerialize = object[key];\n        const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n        if (\n          polymorphicDiscriminator &&\n          polymorphicDiscriminator.clientName === key &&\n          toSerialize == undefined\n        ) {\n          toSerialize = mapper.serializedName;\n        }\n\n        const serializedValue = serializer.serialize(\n          propertyMapper,\n          toSerialize,\n          propertyObjectName,\n          options\n        );\n\n        if (serializedValue !== undefined && propName != undefined) {\n          const value = getXmlObjectValue(propertyMapper, serializedValue, isXml, options);\n          if (isXml && propertyMapper.xmlIsAttribute) {\n            // XML_ATTRKEY, i.e., $ is the key attributes are kept under in xml2js.\n            // This keeps things simple while preventing name collision\n            // with names in user documents.\n            parentObject[XML_ATTRKEY] = parentObject[XML_ATTRKEY] || {};\n            parentObject[XML_ATTRKEY][propName] = serializedValue;\n          } else if (isXml && propertyMapper.xmlIsWrapped) {\n            parentObject[propName] = { [propertyMapper.xmlElementName!]: value };\n          } else {\n            parentObject[propName] = value;\n          }\n        }\n      }\n    }\n\n    const additionalPropertiesMapper = resolveAdditionalProperties(serializer, mapper, objectName);\n    if (additionalPropertiesMapper) {\n      const propNames = Object.keys(modelProps);\n      for (const clientPropName in object) {\n        const isAdditionalProperty = propNames.every((pn) => pn !== clientPropName);\n        if (isAdditionalProperty) {\n          payload[clientPropName] = serializer.serialize(\n            additionalPropertiesMapper,\n            object[clientPropName],\n            objectName + '[\"' + clientPropName + '\"]',\n            options\n          );\n        }\n      }\n    }\n\n    return payload;\n  }\n  return object;\n}\n\nfunction getXmlObjectValue(\n  propertyMapper: Mapper,\n  serializedValue: any,\n  isXml: boolean,\n  options: Required<SerializerOptions>\n): any {\n  if (!isXml || !propertyMapper.xmlNamespace) {\n    return serializedValue;\n  }\n\n  const xmlnsKey = propertyMapper.xmlNamespacePrefix\n    ? `xmlns:${propertyMapper.xmlNamespacePrefix}`\n    : \"xmlns\";\n  const xmlNamespace = { [xmlnsKey]: propertyMapper.xmlNamespace };\n\n  if ([\"Composite\"].includes(propertyMapper.type.name)) {\n    if (serializedValue[XML_ATTRKEY]) {\n      return serializedValue;\n    } else {\n      const result: any = { ...serializedValue };\n      result[XML_ATTRKEY] = xmlNamespace;\n      return result;\n    }\n  }\n  const result: any = {};\n  result[options.xmlCharKey] = serializedValue;\n  result[XML_ATTRKEY] = xmlNamespace;\n  return result;\n}\n\nfunction isSpecialXmlProperty(propertyName: string, options: Required<SerializerOptions>): boolean {\n  return [XML_ATTRKEY, options.xmlCharKey].includes(propertyName);\n}\n\nfunction deserializeCompositeType(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any {\n  if (getPolymorphicDiscriminatorRecursively(serializer, mapper)) {\n    mapper = getPolymorphicMapper(serializer, mapper, responseBody, \"serializedName\");\n  }\n\n  const modelProps = resolveModelProperties(serializer, mapper, objectName);\n  let instance: { [key: string]: any } = {};\n  const handledPropertyNames: string[] = [];\n\n  for (const key of Object.keys(modelProps)) {\n    const propertyMapper = modelProps[key];\n    const paths = splitSerializeName(modelProps[key].serializedName!);\n    handledPropertyNames.push(paths[0]);\n    const { serializedName, xmlName, xmlElementName } = propertyMapper;\n    let propertyObjectName = objectName;\n    if (serializedName !== \"\" && serializedName !== undefined) {\n      propertyObjectName = objectName + \".\" + serializedName;\n    }\n\n    const headerCollectionPrefix = (propertyMapper as DictionaryMapper).headerCollectionPrefix;\n    if (headerCollectionPrefix) {\n      const dictionary: any = {};\n      for (const headerKey of Object.keys(responseBody)) {\n        if (headerKey.startsWith(headerCollectionPrefix)) {\n          dictionary[headerKey.substring(headerCollectionPrefix.length)] = serializer.deserialize(\n            (propertyMapper as DictionaryMapper).type.value,\n            responseBody[headerKey],\n            propertyObjectName,\n            options\n          );\n        }\n\n        handledPropertyNames.push(headerKey);\n      }\n      instance[key] = dictionary;\n    } else if (serializer.isXML) {\n      if (propertyMapper.xmlIsAttribute && responseBody[XML_ATTRKEY]) {\n        instance[key] = serializer.deserialize(\n          propertyMapper,\n          responseBody[XML_ATTRKEY][xmlName!],\n          propertyObjectName,\n          options\n        );\n      } else {\n        const propertyName = xmlElementName || xmlName || serializedName;\n        if (propertyMapper.xmlIsWrapped) {\n          /* a list of <xmlElementName> wrapped by <xmlName>\n            For the xml example below\n              <Cors>\n                <CorsRule>...</CorsRule>\n                <CorsRule>...</CorsRule>\n              </Cors>\n            the responseBody has\n              {\n                Cors: {\n                  CorsRule: [{...}, {...}]\n                }\n              }\n            xmlName is \"Cors\" and xmlElementName is\"CorsRule\".\n          */\n          const wrapped = responseBody[xmlName!];\n          const elementList = wrapped?.[xmlElementName!] ?? [];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            elementList,\n            propertyObjectName,\n            options\n          );\n        } else {\n          const property = responseBody[propertyName!];\n          instance[key] = serializer.deserialize(\n            propertyMapper,\n            property,\n            propertyObjectName,\n            options\n          );\n        }\n      }\n    } else {\n      // deserialize the property if it is present in the provided responseBody instance\n      let propertyInstance;\n      let res = responseBody;\n      // traversing the object step by step.\n      for (const item of paths) {\n        if (!res) break;\n        res = res[item];\n      }\n      propertyInstance = res;\n      const polymorphicDiscriminator = mapper.type.polymorphicDiscriminator;\n      // checking that the model property name (key)(ex: \"fishtype\") and the\n      // clientName of the polymorphicDiscriminator {metadata} (ex: \"fishtype\")\n      // instead of the serializedName of the polymorphicDiscriminator (ex: \"fish.type\")\n      // is a better approach. The generator is not consistent with escaping '\\.' in the\n      // serializedName of the property (ex: \"fish\\.type\") that is marked as polymorphic discriminator\n      // and the serializedName of the metadata polymorphicDiscriminator (ex: \"fish.type\"). However,\n      // the clientName transformation of the polymorphicDiscriminator (ex: \"fishtype\") and\n      // the transformation of model property name (ex: \"fishtype\") is done consistently.\n      // Hence, it is a safer bet to rely on the clientName of the polymorphicDiscriminator.\n      if (\n        polymorphicDiscriminator &&\n        key === polymorphicDiscriminator.clientName &&\n        propertyInstance == undefined\n      ) {\n        propertyInstance = mapper.serializedName;\n      }\n\n      let serializedValue;\n      // paging\n      if (Array.isArray(responseBody[key]) && modelProps[key].serializedName === \"\") {\n        propertyInstance = responseBody[key];\n        instance = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n      } else if (propertyInstance !== undefined || propertyMapper.defaultValue !== undefined) {\n        serializedValue = serializer.deserialize(\n          propertyMapper,\n          propertyInstance,\n          propertyObjectName,\n          options\n        );\n        instance[key] = serializedValue;\n      }\n    }\n  }\n\n  const additionalPropertiesMapper = mapper.type.additionalProperties;\n  if (additionalPropertiesMapper) {\n    const isAdditionalProperty = (responsePropName: string): boolean => {\n      for (const clientPropName in modelProps) {\n        const paths = splitSerializeName(modelProps[clientPropName].serializedName);\n        if (paths[0] === responsePropName) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    for (const responsePropName in responseBody) {\n      if (isAdditionalProperty(responsePropName)) {\n        instance[responsePropName] = serializer.deserialize(\n          additionalPropertiesMapper,\n          responseBody[responsePropName],\n          objectName + '[\"' + responsePropName + '\"]',\n          options\n        );\n      }\n    }\n  } else if (responseBody) {\n    for (const key of Object.keys(responseBody)) {\n      if (\n        instance[key] === undefined &&\n        !handledPropertyNames.includes(key) &&\n        !isSpecialXmlProperty(key, options)\n      ) {\n        instance[key] = responseBody[key];\n      }\n    }\n  }\n\n  return instance;\n}\n\nfunction deserializeDictionaryType(\n  serializer: Serializer,\n  mapper: DictionaryMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): { [key: string]: any } {\n  const value = mapper.type.value;\n  if (!value || typeof value !== \"object\") {\n    throw new Error(\n      `\"value\" metadata for a Dictionary must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    const tempDictionary: { [key: string]: any } = {};\n    for (const key of Object.keys(responseBody)) {\n      tempDictionary[key] = serializer.deserialize(value, responseBody[key], objectName, options);\n    }\n    return tempDictionary;\n  }\n  return responseBody;\n}\n\nfunction deserializeSequenceType(\n  serializer: Serializer,\n  mapper: SequenceMapper,\n  responseBody: any,\n  objectName: string,\n  options: Required<SerializerOptions>\n): any[] {\n  const element = mapper.type.element;\n  if (!element || typeof element !== \"object\") {\n    throw new Error(\n      `element\" metadata for an Array must be defined in the ` +\n        `mapper and it must of type \"object\" in ${objectName}`\n    );\n  }\n  if (responseBody) {\n    if (!Array.isArray(responseBody)) {\n      // xml2js will interpret a single element array as just the element, so force it to be an array\n      responseBody = [responseBody];\n    }\n\n    const tempArray = [];\n    for (let i = 0; i < responseBody.length; i++) {\n      tempArray[i] = serializer.deserialize(\n        element,\n        responseBody[i],\n        `${objectName}[${i}]`,\n        options\n      );\n    }\n    return tempArray;\n  }\n  return responseBody;\n}\n\nfunction getPolymorphicMapper(\n  serializer: Serializer,\n  mapper: CompositeMapper,\n  object: any,\n  polymorphicPropertyName: \"clientName\" | \"serializedName\"\n): CompositeMapper {\n  const polymorphicDiscriminator = getPolymorphicDiscriminatorRecursively(serializer, mapper);\n  if (polymorphicDiscriminator) {\n    const discriminatorName = polymorphicDiscriminator[polymorphicPropertyName];\n    if (discriminatorName != undefined) {\n      const discriminatorValue = object[discriminatorName];\n      if (discriminatorValue != undefined) {\n        const typeName = mapper.type.uberParent || mapper.type.className;\n        const indexDiscriminator =\n          discriminatorValue === typeName\n            ? discriminatorValue\n            : typeName + \".\" + discriminatorValue;\n        const polymorphicMapper = serializer.modelMappers.discriminators[indexDiscriminator];\n        if (polymorphicMapper) {\n          mapper = polymorphicMapper;\n        }\n      }\n    }\n  }\n  return mapper;\n}\n\nfunction getPolymorphicDiscriminatorRecursively(\n  serializer: Serializer,\n  mapper: CompositeMapper\n): PolymorphicDiscriminator | undefined {\n  return (\n    mapper.type.polymorphicDiscriminator ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.uberParent) ||\n    getPolymorphicDiscriminatorSafely(serializer, mapper.type.className)\n  );\n}\n\nfunction getPolymorphicDiscriminatorSafely(serializer: Serializer, typeName?: string): any {\n  return (\n    typeName &&\n    serializer.modelMappers[typeName] &&\n    serializer.modelMappers[typeName].type.polymorphicDiscriminator\n  );\n}\n\nexport interface MapperConstraints {\n  InclusiveMaximum?: number;\n  ExclusiveMaximum?: number;\n  InclusiveMinimum?: number;\n  ExclusiveMinimum?: number;\n  MaxLength?: number;\n  MinLength?: number;\n  Pattern?: RegExp;\n  MaxItems?: number;\n  MinItems?: number;\n  UniqueItems?: true;\n  MultipleOf?: number;\n}\n\nexport type MapperType =\n  | SimpleMapperType\n  | CompositeMapperType\n  | SequenceMapperType\n  | DictionaryMapperType\n  | EnumMapperType;\n\nexport interface SimpleMapperType {\n  name:\n    | \"Base64Url\"\n    | \"Boolean\"\n    | \"ByteArray\"\n    | \"Date\"\n    | \"DateTime\"\n    | \"DateTimeRfc1123\"\n    | \"Object\"\n    | \"Stream\"\n    | \"String\"\n    | \"TimeSpan\"\n    | \"UnixTime\"\n    | \"Uuid\"\n    | \"Number\"\n    | \"any\";\n}\n\nexport interface CompositeMapperType {\n  name: \"Composite\";\n\n  // Only one of the two below properties should be present.\n  // Use className to reference another type definition,\n  // and use modelProperties/additionalProperties when the reference to the other type has been resolved.\n  className?: string;\n\n  modelProperties?: { [propertyName: string]: Mapper };\n  additionalProperties?: Mapper;\n\n  uberParent?: string;\n  polymorphicDiscriminator?: PolymorphicDiscriminator;\n}\n\nexport interface SequenceMapperType {\n  name: \"Sequence\";\n  element: Mapper;\n}\n\nexport interface DictionaryMapperType {\n  name: \"Dictionary\";\n  value: Mapper;\n}\n\nexport interface EnumMapperType {\n  name: \"Enum\";\n  allowedValues: any[];\n}\n\nexport interface BaseMapper {\n  /**\n   * Name for the xml element\n   */\n  xmlName?: string;\n  /**\n   * Xml element namespace\n   */\n  xmlNamespace?: string;\n  /**\n   * Xml element namespace prefix\n   */\n  xmlNamespacePrefix?: string;\n  /**\n   * Determines if the current property should be serialized as an attribute of the parent xml element\n   */\n  xmlIsAttribute?: boolean;\n  /**\n   * Name for the xml elements when serializing an array\n   */\n  xmlElementName?: string;\n  /**\n   * Whether or not the current property should have a wrapping XML element\n   */\n  xmlIsWrapped?: boolean;\n  /**\n   * Whether or not the current property is readonly\n   */\n  readOnly?: boolean;\n  /**\n   * Whether or not the current property is a constant\n   */\n  isConstant?: boolean;\n  /**\n   * Whether or not the current property is required\n   */\n  required?: boolean;\n  /**\n   * Whether or not the current property allows mull as a value\n   */\n  nullable?: boolean;\n  /**\n   * The name to use when serializing\n   */\n  serializedName?: string;\n  /**\n   * Type of the mapper\n   */\n  type: MapperType;\n  /**\n   * Default value when one is not explicitly provided\n   */\n  defaultValue?: any;\n  /**\n   * Constraints to test the current value against\n   */\n  constraints?: MapperConstraints;\n}\n\nexport type Mapper = BaseMapper | CompositeMapper | SequenceMapper | DictionaryMapper | EnumMapper;\n\nexport interface PolymorphicDiscriminator {\n  serializedName: string;\n  clientName: string;\n  [key: string]: string;\n}\n\nexport interface CompositeMapper extends BaseMapper {\n  type: CompositeMapperType;\n}\n\nexport interface SequenceMapper extends BaseMapper {\n  type: SequenceMapperType;\n}\n\nexport interface DictionaryMapper extends BaseMapper {\n  type: DictionaryMapperType;\n  headerCollectionPrefix?: string;\n}\n\nexport interface EnumMapper extends BaseMapper {\n  type: EnumMapperType;\n}\n\nexport interface UrlParameterValue {\n  value: string;\n  skipUrlEncoding: boolean;\n}\n\n// TODO: why is this here?\nexport function serializeObject(toSerialize: unknown): any {\n  const castToSerialize = toSerialize as Record<string, unknown>;\n  if (toSerialize == undefined) return undefined;\n  if (toSerialize instanceof Uint8Array) {\n    toSerialize = base64.encodeByteArray(toSerialize);\n    return toSerialize;\n  } else if (toSerialize instanceof Date) {\n    return toSerialize.toISOString();\n  } else if (Array.isArray(toSerialize)) {\n    const array = [];\n    for (let i = 0; i < toSerialize.length; i++) {\n      array.push(serializeObject(toSerialize[i]));\n    }\n    return array;\n  } else if (typeof toSerialize === \"object\") {\n    const dictionary: { [key: string]: any } = {};\n    for (const property in toSerialize) {\n      dictionary[property] = serializeObject(castToSerialize[property]);\n    }\n    return dictionary;\n  }\n  return toSerialize;\n}\n\n/**\n * Utility function to create a K:V from a list of strings\n */\nfunction strEnum<T extends string>(o: Array<T>): { [K in T]: K } {\n  const result: any = {};\n  for (const key of o) {\n    result[key] = key;\n  }\n  return result;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport const MapperType = strEnum([\n  \"Base64Url\",\n  \"Boolean\",\n  \"ByteArray\",\n  \"Composite\",\n  \"Date\",\n  \"DateTime\",\n  \"DateTimeRfc1123\",\n  \"Dictionary\",\n  \"Enum\",\n  \"Number\",\n  \"Object\",\n  \"Sequence\",\n  \"String\",\n  \"Stream\",\n  \"TimeSpan\",\n  \"UnixTime\"\n]);\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders, HttpHeadersLike, isHttpHeadersLike } from \"./httpHeaders\";\nimport { OperationSpec } from \"./operationSpec\";\nimport { Mapper, Serializer } from \"./serializer\";\nimport { generateUuid } from \"./util/utils\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ProxySettings } from \"./serviceClient\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"@azure/core-tracing\";\nimport { SerializerOptions } from \"./util/serializer.common\";\n\nexport type HttpMethods =\n  | \"GET\"\n  | \"PUT\"\n  | \"POST\"\n  | \"DELETE\"\n  | \"PATCH\"\n  | \"HEAD\"\n  | \"OPTIONS\"\n  | \"TRACE\";\nexport type HttpRequestBody =\n  | Blob\n  | string\n  | ArrayBuffer\n  | ArrayBufferView\n  | (() => NodeJS.ReadableStream);\n\n/**\n * Fired in response to upload or download progress.\n */\nexport type TransferProgressEvent = {\n  /**\n   * The number of bytes loaded so far.\n   */\n  loadedBytes: number;\n};\n\nexport interface WebResourceLike {\n  /**\n   * The URL being accessed by the request.\n   */\n  url: string;\n  /**\n   * The HTTP method to use when making the request.\n   */\n  method: HttpMethods;\n  /**\n   * The HTTP body contents of the request.\n   */\n  body?: any;\n  /**\n   * The HTTP headers to use when making the request.\n   */\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  formData?: any;\n  /**\n   * A query string represented as an object.\n   */\n  query?: { [key: string]: any };\n  /**\n   * Used to parse the response.\n   */\n  operationSpec?: OperationSpec;\n  /**\n   * If credentials (cookies) should be sent along during an XHR.\n   */\n  withCredentials: boolean;\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout: number;\n  /**\n   * Proxy configuration.\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If the connection should be reused.\n   */\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  /**\n   * A unique identifier for the request. Used for logging and tracing.\n   */\n  requestId: string;\n\n  /**\n   * Used to abort the request later.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void;\n\n  /**\n   * Sets options on the request.\n   */\n  prepare(options: RequestPrepareOptions): WebResourceLike;\n  /**\n   * Clone this request object.\n   */\n  clone(): WebResourceLike;\n}\n\nexport function isWebResourceLike(object: unknown): object is WebResourceLike {\n  if (object && typeof object === \"object\") {\n    const castObject = object as {\n      url: unknown;\n      method: unknown;\n      headers: unknown;\n      validateRequestProperties: unknown;\n      prepare: unknown;\n      clone: unknown;\n    };\n    if (\n      typeof castObject.url === \"string\" &&\n      typeof castObject.method === \"string\" &&\n      typeof castObject.headers === \"object\" &&\n      isHttpHeadersLike(castObject.headers) &&\n      typeof castObject.validateRequestProperties === \"function\" &&\n      typeof castObject.prepare === \"function\" &&\n      typeof castObject.clone === \"function\"\n    ) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Creates a new WebResource object.\n *\n * This class provides an abstraction over a REST call by being library / implementation agnostic and wrapping the necessary\n * properties to initiate a request.\n */\nexport class WebResource implements WebResourceLike {\n  url: string;\n  method: HttpMethods;\n  body?: any;\n  headers: HttpHeadersLike;\n  /**\n   * Whether or not the body of the HttpOperationResponse should be treated as a stream.\n   */\n  streamResponseBody?: boolean;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n  /**\n   * A function that returns the proper OperationResponse for the given OperationSpec and\n   * HttpOperationResponse combination. If this is undefined, then a simple status code lookup will\n   * be used.\n   */\n  operationResponseGetter?: (\n    operationSpec: OperationSpec,\n    response: HttpOperationResponse\n  ) => undefined | OperationResponse;\n  formData?: any;\n  query?: { [key: string]: any };\n  operationSpec?: OperationSpec;\n  withCredentials: boolean;\n  timeout: number;\n  proxySettings?: ProxySettings;\n  keepAlive?: boolean;\n  /**\n   * Whether or not to decompress response according to Accept-Encoding header (node-fetch only)\n   */\n  decompressResponse?: boolean;\n  requestId: string;\n\n  abortSignal?: AbortSignalLike;\n\n  /** Callback which fires upon upload progress. */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /** Callback which fires upon download progress. */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  constructor(\n    url?: string,\n    method?: HttpMethods,\n    body?: unknown,\n    query?: { [key: string]: any },\n    headers?: { [key: string]: any } | HttpHeadersLike,\n    streamResponseBody?: boolean,\n    withCredentials?: boolean,\n    abortSignal?: AbortSignalLike,\n    timeout?: number,\n    onUploadProgress?: (progress: TransferProgressEvent) => void,\n    onDownloadProgress?: (progress: TransferProgressEvent) => void,\n    proxySettings?: ProxySettings,\n    keepAlive?: boolean,\n    decompressResponse?: boolean\n  ) {\n    this.streamResponseBody = streamResponseBody;\n    this.url = url || \"\";\n    this.method = method || \"GET\";\n    this.headers = isHttpHeadersLike(headers) ? headers : new HttpHeaders(headers);\n    this.body = body;\n    this.query = query;\n    this.formData = undefined;\n    this.withCredentials = withCredentials || false;\n    this.abortSignal = abortSignal;\n    this.timeout = timeout || 0;\n    this.onUploadProgress = onUploadProgress;\n    this.onDownloadProgress = onDownloadProgress;\n    this.proxySettings = proxySettings;\n    this.keepAlive = keepAlive;\n    this.decompressResponse = decompressResponse;\n    this.requestId = this.headers.get(\"x-ms-client-request-id\") || generateUuid();\n  }\n\n  /**\n   * Validates that the required properties such as method, url, headers[\"Content-Type\"],\n   * headers[\"accept-language\"] are defined. It will throw an error if one of the above\n   * mentioned properties are not defined.\n   */\n  validateRequestProperties(): void {\n    if (!this.method) {\n      throw new Error(\"WebResource.method is required.\");\n    }\n    if (!this.url) {\n      throw new Error(\"WebResource.url is required.\");\n    }\n  }\n\n  /**\n   * Prepares the request.\n   * @param options - Options to provide for preparing the request.\n   * @returns Returns the prepared WebResource (HTTP Request) object that needs to be given to the request pipeline.\n   */\n  prepare(options: RequestPrepareOptions): WebResource {\n    if (!options) {\n      throw new Error(\"options object is required\");\n    }\n\n    if (\n      options.method === undefined ||\n      options.method === null ||\n      typeof options.method.valueOf() !== \"string\"\n    ) {\n      throw new Error(\"options.method must be a string.\");\n    }\n\n    if (options.url && options.pathTemplate) {\n      throw new Error(\n        \"options.url and options.pathTemplate are mutually exclusive. Please provide exactly one of them.\"\n      );\n    }\n\n    if (\n      (options.pathTemplate === undefined ||\n        options.pathTemplate === null ||\n        typeof options.pathTemplate.valueOf() !== \"string\") &&\n      (options.url === undefined ||\n        options.url === null ||\n        typeof options.url.valueOf() !== \"string\")\n    ) {\n      throw new Error(\"Please provide exactly one of options.pathTemplate or options.url.\");\n    }\n\n    // set the url if it is provided.\n    if (options.url) {\n      if (typeof options.url !== \"string\") {\n        throw new Error('options.url must be of type \"string\".');\n      }\n      this.url = options.url;\n    }\n\n    // set the method\n    if (options.method) {\n      const validMethods = [\"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\", \"PATCH\", \"TRACE\"];\n      if (validMethods.indexOf(options.method.toUpperCase()) === -1) {\n        throw new Error(\n          'The provided method \"' +\n            options.method +\n            '\" is invalid. Supported HTTP methods are: ' +\n            JSON.stringify(validMethods)\n        );\n      }\n    }\n    this.method = options.method.toUpperCase() as HttpMethods;\n\n    // construct the url if path template is provided\n    if (options.pathTemplate) {\n      const { pathTemplate, pathParameters } = options;\n      if (typeof pathTemplate !== \"string\") {\n        throw new Error('options.pathTemplate must be of type \"string\".');\n      }\n      if (!options.baseUrl) {\n        options.baseUrl = \"https://management.azure.com\";\n      }\n      const baseUrl = options.baseUrl;\n      let url =\n        baseUrl +\n        (baseUrl.endsWith(\"/\") ? \"\" : \"/\") +\n        (pathTemplate.startsWith(\"/\") ? pathTemplate.slice(1) : pathTemplate);\n      const segments = url.match(/({[\\w-]*\\s*[\\w-]*})/gi);\n      if (segments && segments.length) {\n        if (!pathParameters) {\n          throw new Error(\n            `pathTemplate: ${pathTemplate} has been provided. Hence, options.pathParameters must also be provided.`\n          );\n        }\n        segments.forEach(function(item) {\n          const pathParamName = item.slice(1, -1);\n          const pathParam = (pathParameters as { [key: string]: any })[pathParamName];\n          if (\n            pathParam === null ||\n            pathParam === undefined ||\n            !(typeof pathParam === \"string\" || typeof pathParam === \"object\")\n          ) {\n            const stringifiedPathParameters = JSON.stringify(pathParameters, undefined, 2);\n            throw new Error(\n              `pathTemplate: ${pathTemplate} contains the path parameter ${pathParamName}` +\n                ` however, it is not present in parameters: ${stringifiedPathParameters}.` +\n                `The value of the path parameter can either be a \"string\" of the form { ${pathParamName}: \"some sample value\" } or ` +\n                `it can be an \"object\" of the form { \"${pathParamName}\": { value: \"some sample value\", skipUrlEncoding: true } }.`\n            );\n          }\n\n          if (typeof pathParam.valueOf() === \"string\") {\n            url = url.replace(item, encodeURIComponent(pathParam));\n          }\n\n          if (typeof pathParam.valueOf() === \"object\") {\n            if (!pathParam.value) {\n              throw new Error(\n                `options.pathParameters[${pathParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (pathParam.skipUrlEncoding) {\n              url = url.replace(item, pathParam.value);\n            } else {\n              url = url.replace(item, encodeURIComponent(pathParam.value));\n            }\n          }\n        });\n      }\n      this.url = url;\n    }\n\n    // append query parameters to the url if they are provided. They can be provided with pathTemplate or url option.\n    if (options.queryParameters) {\n      const queryParameters = options.queryParameters;\n      if (typeof queryParameters !== \"object\") {\n        throw new Error(\n          `options.queryParameters must be of type object. It should be a JSON object ` +\n            `of \"query-parameter-name\" as the key and the \"query-parameter-value\" as the value. ` +\n            `The \"query-parameter-value\" may be fo type \"string\" or an \"object\" of the form { value: \"query-parameter-value\", skipUrlEncoding: true }.`\n        );\n      }\n      // append question mark if it is not present in the url\n      if (this.url && this.url.indexOf(\"?\") === -1) {\n        this.url += \"?\";\n      }\n      // construct queryString\n      const queryParams = [];\n      // We need to populate this.query as a dictionary if the request is being used for Sway's validateRequest().\n      this.query = {};\n      for (const queryParamName in queryParameters) {\n        const queryParam: any = queryParameters[queryParamName];\n        if (queryParam) {\n          if (typeof queryParam === \"string\") {\n            queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam));\n            this.query[queryParamName] = encodeURIComponent(queryParam);\n          } else if (typeof queryParam === \"object\") {\n            if (!queryParam.value) {\n              throw new Error(\n                `options.queryParameters[${queryParamName}] is of type \"object\" but it does not contain a \"value\" property.`\n              );\n            }\n            if (queryParam.skipUrlEncoding) {\n              queryParams.push(queryParamName + \"=\" + queryParam.value);\n              this.query[queryParamName] = queryParam.value;\n            } else {\n              queryParams.push(queryParamName + \"=\" + encodeURIComponent(queryParam.value));\n              this.query[queryParamName] = encodeURIComponent(queryParam.value);\n            }\n          }\n        }\n      } // end-of-for\n      // append the queryString\n      this.url += queryParams.join(\"&\");\n    }\n\n    // add headers to the request if they are provided\n    if (options.headers) {\n      const headers = options.headers;\n      for (const headerName of Object.keys(options.headers)) {\n        this.headers.set(headerName, headers[headerName]);\n      }\n    }\n    // ensure accept-language is set correctly\n    if (!this.headers.get(\"accept-language\")) {\n      this.headers.set(\"accept-language\", \"en-US\");\n    }\n    // ensure the request-id is set correctly\n    if (!this.headers.get(\"x-ms-client-request-id\") && !options.disableClientRequestId) {\n      this.headers.set(\"x-ms-client-request-id\", this.requestId);\n    }\n\n    // default\n    if (!this.headers.get(\"Content-Type\")) {\n      this.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n    }\n\n    // set the request body. request.js automatically sets the Content-Length request header, so we need not set it explicitly\n    this.body = options.body;\n    if (options.body !== undefined && options.body !== null) {\n      // body as a stream special case. set the body as-is and check for some special request headers specific to sending a stream.\n      if (options.bodyIsStream) {\n        if (!this.headers.get(\"Transfer-Encoding\")) {\n          this.headers.set(\"Transfer-Encoding\", \"chunked\");\n        }\n        if (this.headers.get(\"Content-Type\") !== \"application/octet-stream\") {\n          this.headers.set(\"Content-Type\", \"application/octet-stream\");\n        }\n      } else {\n        if (options.serializationMapper) {\n          this.body = new Serializer(options.mappers).serialize(\n            options.serializationMapper,\n            options.body,\n            \"requestBody\"\n          );\n        }\n        if (!options.disableJsonStringifyOnBody) {\n          this.body = JSON.stringify(options.body);\n        }\n      }\n    }\n\n    if (options.spanOptions) {\n      this.spanOptions = options.spanOptions;\n    }\n\n    this.abortSignal = options.abortSignal;\n    this.onDownloadProgress = options.onDownloadProgress;\n    this.onUploadProgress = options.onUploadProgress;\n\n    return this;\n  }\n\n  /**\n   * Clone this WebResource HTTP request object.\n   * @returns The clone of this WebResource HTTP request object.\n   */\n  clone(): WebResource {\n    const result = new WebResource(\n      this.url,\n      this.method,\n      this.body,\n      this.query,\n      this.headers && this.headers.clone(),\n      this.streamResponseBody,\n      this.withCredentials,\n      this.abortSignal,\n      this.timeout,\n      this.onUploadProgress,\n      this.onDownloadProgress,\n      this.proxySettings,\n      this.keepAlive,\n      this.decompressResponse\n    );\n\n    if (this.formData) {\n      result.formData = this.formData;\n    }\n\n    if (this.operationSpec) {\n      result.operationSpec = this.operationSpec;\n    }\n\n    if (this.shouldDeserialize) {\n      result.shouldDeserialize = this.shouldDeserialize;\n    }\n\n    if (this.operationResponseGetter) {\n      result.operationResponseGetter = this.operationResponseGetter;\n    }\n\n    return result;\n  }\n}\n\nexport interface RequestPrepareOptions {\n  /**\n   * The HTTP request method. Valid values are \"GET\", \"PUT\", \"HEAD\", \"DELETE\", \"OPTIONS\", \"POST\",\n   * or \"PATCH\".\n   */\n  method: HttpMethods;\n  /**\n   * The request url. It may or may not have query parameters in it. Either provide the \"url\" or\n   * provide the \"pathTemplate\" in the options object. Both the options are mutually exclusive.\n   */\n  url?: string;\n  /**\n   * A dictionary of query parameters to be appended to the url, where\n   * the \"key\" is the \"query-parameter-name\" and the \"value\" is the \"query-parameter-value\".\n   * The \"query-parameter-value\" can be of type \"string\" or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"query-parameter-value\".\n   * Example:\n   *    - query-parameter-value in \"object\" format: `{ \"query-parameter-name\": { value: \"query-parameter-value\", skipUrlEncoding: true } }`\n   *    - query-parameter-value in \"string\" format: `{ \"query-parameter-name\": \"query-parameter-value\"}`.\n   * Note: \"If options.url already has some query parameters, then the value provided in options.queryParameters will be appended to the url.\n   */\n  queryParameters?: { [key: string]: any | ParameterValue };\n  /**\n   * The path template of the request url. Either provide the \"url\" or provide the \"pathTemplate\" in\n   * the options object. Both the options are mutually exclusive.\n   * Example: `/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}`\n   */\n  pathTemplate?: string;\n  /**\n   * The base url of the request. Default value is: \"https://management.azure.com\". This is\n   * applicable only with pathTemplate. If you are providing options.url then it is expected that\n   * you provide the complete url.\n   */\n  baseUrl?: string;\n  /**\n   * A dictionary of path parameters that need to be replaced with actual values in the pathTemplate.\n   * Here the key is the \"path-parameter-name\" and the value is the \"path-parameter-value\".\n   * The \"path-parameter-value\" can be of type \"string\"  or it can be of type \"object\".\n   * The \"object\" format should be used when you want to skip url encoding. While using the object format,\n   * the object must have a property named value which provides the \"path-parameter-value\".\n   * Example:\n   *    - path-parameter-value in \"object\" format: `{ \"path-parameter-name\": { value: \"path-parameter-value\", skipUrlEncoding: true } }`\n   *    - path-parameter-value in \"string\" format: `{ \"path-parameter-name\": \"path-parameter-value\" }`.\n   */\n  pathParameters?: { [key: string]: any | ParameterValue };\n  formData?: { [key: string]: any };\n  /**\n   * A dictionary of request headers that need to be applied to the request.\n   * Here the key is the \"header-name\" and the value is the \"header-value\". The header-value MUST be of type string.\n   *  - ContentType must be provided with the key name as \"Content-Type\". Default value \"application/json; charset=utf-8\".\n   *  - \"Transfer-Encoding\" is set to \"chunked\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"Content-Type\" is set to \"application/octet-stream\" by default if \"options.bodyIsStream\" is set to true.\n   *  - \"accept-language\" by default is set to \"en-US\"\n   *  - \"x-ms-client-request-id\" by default is set to a new Guid. To not generate a guid for the request, please set options.disableClientRequestId to true\n   */\n  headers?: { [key: string]: any };\n  /**\n   * When set to true, instructs the client to not set \"x-ms-client-request-id\" header to a new Guid().\n   */\n  disableClientRequestId?: boolean;\n  /**\n   * The request body. It can be of any type. This value will be serialized if it is not a stream.\n   */\n  body?: any;\n  /**\n   * Provides information on how to serialize the request body.\n   */\n  serializationMapper?: Mapper;\n  /**\n   * A dictionary of mappers that may be used while [de]serialization.\n   */\n  mappers?: { [x: string]: any };\n  /**\n   * Provides information on how to deserialize the response body.\n   */\n  deserializationMapper?: Record<string, unknown>;\n  /**\n   * Indicates whether this method should JSON.stringify() the request body. Default value: false.\n   */\n  disableJsonStringifyOnBody?: boolean;\n  /**\n   * Indicates whether the request body is a stream (useful for file upload scenarios).\n   */\n  bodyIsStream?: boolean;\n  abortSignal?: AbortSignalLike;\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  spanOptions?: SpanOptions;\n}\n\n/**\n * The Parameter value provided for path or query parameters in RequestPrepareOptions\n */\nexport interface ParameterValue {\n  value: any;\n  skipUrlEncoding: boolean;\n  [key: string]: any;\n}\n\n/**\n * Describes the base structure of the options object that will be used in every operation.\n */\nexport interface RequestOptionsBase {\n  /**\n   * will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   * If the request is terminated, an `AbortError` is thrown.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n\n  /**\n   * Options used to create a span when tracing is enabled.\n   */\n  spanOptions?: SpanOptions;\n\n  [key: string]: any;\n\n  /**\n   * Options to override XML parsing/building behavior.\n   */\n  serializerOptions?: SerializerOptions;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../shims-public.d.ts\" />\n\ntype AbortEventListener = (this: AbortSignalLike, ev?: any) => any;\n\nconst listenersMap = new WeakMap<AbortSignal, AbortEventListener[]>();\nconst abortedMap = new WeakMap<AbortSignal, boolean>();\n\n/**\n * Allows the request to be aborted upon firing of the \"abort\" event.\n * Compatible with the browser built-in AbortSignal and common polyfills.\n */\nexport interface AbortSignalLike {\n  /**\n   * Indicates if the signal has already been aborted.\n   */\n  readonly aborted: boolean;\n  /**\n   * Add new \"abort\" event listener, only support \"abort\" event.\n   */\n  addEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   */\n  removeEventListener(\n    type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any,\n    options?: any\n  ): void;\n}\n\n/**\n * An aborter instance implements AbortSignal interface, can abort HTTP requests.\n *\n * - Call AbortSignal.none to create a new AbortSignal instance that cannot be cancelled.\n * Use `AbortSignal.none` when you are required to pass a cancellation token but the operation\n * cannot or will not ever be cancelled.\n *\n * @example\n * Abort without timeout\n * ```ts\n * await doAsyncWork(AbortSignal.none);\n * ```\n */\nexport class AbortSignal implements AbortSignalLike {\n  constructor() {\n    listenersMap.set(this, []);\n    abortedMap.set(this, false);\n  }\n\n  /**\n   * Status of whether aborted or not.\n   *\n   * @readonly\n   */\n  public get aborted(): boolean {\n    if (!abortedMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    return abortedMap.get(this)!;\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will never be aborted.\n   *\n   * @readonly\n   */\n  public static get none(): AbortSignal {\n    return new AbortSignal();\n  }\n\n  /**\n   * onabort event listener.\n   */\n  public onabort: ((ev?: Event) => any) | null = null;\n\n  /**\n   * Added new \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be added\n   */\n  public addEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n    listeners.push(listener);\n  }\n\n  /**\n   * Remove \"abort\" event listener, only support \"abort\" event.\n   *\n   * @param _type - Only support \"abort\" event\n   * @param listener - The listener to be removed\n   */\n  public removeEventListener(\n    // tslint:disable-next-line:variable-name\n    _type: \"abort\",\n    listener: (this: AbortSignalLike, ev: any) => any\n  ): void {\n    if (!listenersMap.has(this)) {\n      throw new TypeError(\"Expected `this` to be an instance of AbortSignal.\");\n    }\n\n    const listeners = listenersMap.get(this)!;\n\n    const index = listeners.indexOf(listener);\n    if (index > -1) {\n      listeners.splice(index, 1);\n    }\n  }\n\n  /**\n   * Dispatches a synthetic event to the AbortSignal.\n   */\n  dispatchEvent(_event: Event): boolean {\n    throw new Error(\n      \"This is a stub dispatchEvent implementation that should not be used.  It only exists for type-checking purposes.\"\n    );\n  }\n}\n\n/**\n * Helper to trigger an abort event immediately, the onabort and all abort event listeners will be triggered.\n * Will try to trigger abort event for all linked AbortSignal nodes.\n *\n * - If there is a timeout, the timer will be cancelled.\n * - If aborted is true, nothing will happen.\n *\n * @internal\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-use-interface-parameters\nexport function abortSignal(signal: AbortSignal): void {\n  if (signal.aborted) {\n    return;\n  }\n\n  if (signal.onabort) {\n    signal.onabort.call(signal);\n  }\n\n  const listeners = listenersMap.get(signal)!;\n  if (listeners) {\n    listeners.forEach((listener) => {\n      listener.call(signal, { type: \"abort\" });\n    });\n  }\n\n  abortedMap.set(signal, true);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignal, abortSignal, AbortSignalLike } from \"./AbortSignal\";\n\n/**\n * This error is thrown when an asynchronous operation has been aborted.\n * Check for this error by testing the `name` that the name property of the\n * error matches `\"AbortError\"`.\n *\n * @example\n * ```ts\n * const controller = new AbortController();\n * controller.abort();\n * try {\n *   doAsyncWork(controller.signal)\n * } catch (e) {\n *   if (e.name === 'AbortError') {\n *     // handle abort error here.\n *   }\n * }\n * ```\n */\nexport class AbortError extends Error {\n  constructor(message?: string) {\n    super(message);\n    this.name = \"AbortError\";\n  }\n}\n\n/**\n * An AbortController provides an AbortSignal and the associated controls to signal\n * that an asynchronous operation should be aborted.\n *\n * @example\n * Abort an operation when another event fires\n * ```ts\n * const controller = new AbortController();\n * const signal = controller.signal;\n * doAsyncWork(signal);\n * button.addEventListener('click', () => controller.abort());\n * ```\n *\n * @example\n * Share aborter cross multiple operations in 30s\n * ```ts\n * // Upload the same data to 2 different data centers at the same time,\n * // abort another when any of them is finished\n * const controller = AbortController.withTimeout(30 * 1000);\n * doAsyncWork(controller.signal).then(controller.abort);\n * doAsyncWork(controller.signal).then(controller.abort);\n *```\n *\n * @example\n * Cascaded aborting\n * ```ts\n * // All operations can't take more than 30 seconds\n * const aborter = Aborter.timeout(30 * 1000);\n *\n * // Following 2 operations can't take more than 25 seconds\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * await doAsyncWork(aborter.withTimeout(25 * 1000));\n * ```\n */\nexport class AbortController {\n  private _signal: AbortSignal;\n\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(parentSignals?: AbortSignalLike[]);\n  /**\n   * @param parentSignals - The AbortSignals that will signal aborted on the AbortSignal associated with this controller.\n   */\n  constructor(...parentSignals: AbortSignalLike[]);\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  constructor(parentSignals?: any) {\n    this._signal = new AbortSignal();\n\n    if (!parentSignals) {\n      return;\n    }\n    // coerce parentSignals into an array\n    if (!Array.isArray(parentSignals)) {\n      // eslint-disable-next-line prefer-rest-params\n      parentSignals = arguments;\n    }\n    for (const parentSignal of parentSignals) {\n      // if the parent signal has already had abort() called,\n      // then call abort on this signal as well.\n      if (parentSignal.aborted) {\n        this.abort();\n      } else {\n        // when the parent signal aborts, this signal should as well.\n        parentSignal.addEventListener(\"abort\", () => {\n          this.abort();\n        });\n      }\n    }\n  }\n\n  /**\n   * The AbortSignal associated with this controller that will signal aborted\n   * when the abort method is called on this controller.\n   *\n   * @readonly\n   */\n  public get signal(): AbortSignal {\n    return this._signal;\n  }\n\n  /**\n   * Signal that any operations passed this controller's associated abort signal\n   * to cancel any remaining work and throw an `AbortError`.\n   */\n  abort(): void {\n    abortSignal(this._signal);\n  }\n\n  /**\n   * Creates a new AbortSignal instance that will abort after the provided ms.\n   * @param ms - Elapsed time in milliseconds to trigger an abort.\n   */\n  public static timeout(ms: number): AbortSignal {\n    const signal = new AbortSignal();\n    const timer = setTimeout(abortSignal, ms, signal);\n    // Prevent the active Timer from keeping the Node.js event loop active.\n    if (typeof timer.unref === \"function\") {\n      timer.unref();\n    }\n    return signal;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const custom = {};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst url = URL;\n\nexport { url as URL };\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { replaceAll } from \"./util/utils\";\n\nexport { URL } from \"./util/url\";\n\ntype URLQueryParseState = \"ParameterName\" | \"ParameterValue\";\n\n/**\n * A class that handles the query portion of a URLBuilder.\n */\nexport class URLQuery {\n  private readonly _rawQuery: { [queryParameterName: string]: string | string[] } = {};\n\n  /**\n   * Get whether or not there any query parameters in this URLQuery.\n   */\n  public any(): boolean {\n    return Object.keys(this._rawQuery).length > 0;\n  }\n\n  /**\n   * Get the keys of the query string.\n   */\n  public keys(): string[] {\n    return Object.keys(this._rawQuery);\n  }\n\n  /**\n   * Set a query parameter with the provided name and value. If the parameterValue is undefined or\n   * empty, then this will attempt to remove an existing query parameter with the provided\n   * parameterName.\n   */\n  public set(parameterName: string, parameterValue: unknown): void {\n    const caseParameterValue = parameterValue as {\n      toString: () => string;\n    };\n    if (parameterName) {\n      if (caseParameterValue !== undefined && caseParameterValue !== null) {\n        const newValue = Array.isArray(caseParameterValue)\n          ? caseParameterValue\n          : caseParameterValue.toString();\n        this._rawQuery[parameterName] = newValue;\n      } else {\n        delete this._rawQuery[parameterName];\n      }\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided name. If no parameter exists with the\n   * provided parameter name, then undefined will be returned.\n   */\n  public get(parameterName: string): string | string[] | undefined {\n    return parameterName ? this._rawQuery[parameterName] : undefined;\n  }\n\n  /**\n   * Get the string representation of this query. The return value will not start with a \"?\".\n   */\n  public toString(): string {\n    let result = \"\";\n    for (const parameterName in this._rawQuery) {\n      if (result) {\n        result += \"&\";\n      }\n      const parameterValue = this._rawQuery[parameterName];\n      if (Array.isArray(parameterValue)) {\n        const parameterStrings = [];\n        for (const parameterValueElement of parameterValue) {\n          parameterStrings.push(`${parameterName}=${parameterValueElement}`);\n        }\n        result += parameterStrings.join(\"&\");\n      } else {\n        result += `${parameterName}=${parameterValue}`;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Parse a URLQuery from the provided text.\n   */\n  public static parse(text: string): URLQuery {\n    const result = new URLQuery();\n\n    if (text) {\n      if (text.startsWith(\"?\")) {\n        text = text.substring(1);\n      }\n\n      let currentState: URLQueryParseState = \"ParameterName\";\n\n      let parameterName = \"\";\n      let parameterValue = \"\";\n      for (let i = 0; i < text.length; ++i) {\n        const currentCharacter: string = text[i];\n        switch (currentState) {\n          case \"ParameterName\":\n            switch (currentCharacter) {\n              case \"=\":\n                currentState = \"ParameterValue\";\n                break;\n\n              case \"&\":\n                parameterName = \"\";\n                parameterValue = \"\";\n                break;\n\n              default:\n                parameterName += currentCharacter;\n                break;\n            }\n            break;\n\n          case \"ParameterValue\":\n            switch (currentCharacter) {\n              case \"&\":\n                result.set(parameterName, parameterValue);\n                parameterName = \"\";\n                parameterValue = \"\";\n                currentState = \"ParameterName\";\n                break;\n\n              default:\n                parameterValue += currentCharacter;\n                break;\n            }\n            break;\n\n          default:\n            throw new Error(\"Unrecognized URLQuery parse state: \" + currentState);\n        }\n      }\n      if (currentState === \"ParameterValue\") {\n        result.set(parameterName, parameterValue);\n      }\n    }\n\n    return result;\n  }\n}\n\n/**\n * A class that handles creating, modifying, and parsing URLs.\n */\nexport class URLBuilder {\n  private _scheme: string | undefined;\n  private _host: string | undefined;\n  private _port: string | undefined;\n  private _path: string | undefined;\n  private _query: URLQuery | undefined;\n\n  /**\n   * Set the scheme/protocol for this URL. If the provided scheme contains other parts of a URL\n   * (such as a host, port, path, or query), those parts will be added to this URL as well.\n   */\n  public setScheme(scheme: string | undefined): void {\n    if (!scheme) {\n      this._scheme = undefined;\n    } else {\n      this.set(scheme, \"SCHEME\");\n    }\n  }\n\n  /**\n   * Get the scheme that has been set in this URL.\n   */\n  public getScheme(): string | undefined {\n    return this._scheme;\n  }\n\n  /**\n   * Set the host for this URL. If the provided host contains other parts of a URL (such as a\n   * port, path, or query), those parts will be added to this URL as well.\n   */\n  public setHost(host: string | undefined): void {\n    if (!host) {\n      this._host = undefined;\n    } else {\n      this.set(host, \"SCHEME_OR_HOST\");\n    }\n  }\n\n  /**\n   * Get the host that has been set in this URL.\n   */\n  public getHost(): string | undefined {\n    return this._host;\n  }\n\n  /**\n   * Set the port for this URL. If the provided port contains other parts of a URL (such as a\n   * path or query), those parts will be added to this URL as well.\n   */\n  public setPort(port: number | string | undefined): void {\n    if (port === undefined || port === null || port === \"\") {\n      this._port = undefined;\n    } else {\n      this.set(port.toString(), \"PORT\");\n    }\n  }\n\n  /**\n   * Get the port that has been set in this URL.\n   */\n  public getPort(): string | undefined {\n    return this._port;\n  }\n\n  /**\n   * Set the path for this URL. If the provided path contains a query, then it will be added to\n   * this URL as well.\n   */\n  public setPath(path: string | undefined): void {\n    if (!path) {\n      this._path = undefined;\n    } else {\n      const schemeIndex = path.indexOf(\"://\");\n      if (schemeIndex !== -1) {\n        const schemeStart = path.lastIndexOf(\"/\", schemeIndex);\n        // Make sure to only grab the URL part of the path before setting the state back to SCHEME\n        // this will handle cases such as \"/a/b/c/https://microsoft.com\" => \"https://microsoft.com\"\n        this.set(schemeStart === -1 ? path : path.substr(schemeStart + 1), \"SCHEME\");\n      } else {\n        this.set(path, \"PATH\");\n      }\n    }\n  }\n\n  /**\n   * Append the provided path to this URL's existing path. If the provided path contains a query,\n   * then it will be added to this URL as well.\n   */\n  public appendPath(path: string | undefined): void {\n    if (path) {\n      let currentPath: string | undefined = this.getPath();\n      if (currentPath) {\n        if (!currentPath.endsWith(\"/\")) {\n          currentPath += \"/\";\n        }\n\n        if (path.startsWith(\"/\")) {\n          path = path.substring(1);\n        }\n\n        path = currentPath + path;\n      }\n      this.set(path, \"PATH\");\n    }\n  }\n\n  /**\n   * Get the path that has been set in this URL.\n   */\n  public getPath(): string | undefined {\n    return this._path;\n  }\n\n  /**\n   * Set the query in this URL.\n   */\n  public setQuery(query: string | undefined): void {\n    if (!query) {\n      this._query = undefined;\n    } else {\n      this._query = URLQuery.parse(query);\n    }\n  }\n\n  /**\n   * Set a query parameter with the provided name and value in this URL's query. If the provided\n   * query parameter value is undefined or empty, then the query parameter will be removed if it\n   * existed.\n   */\n  public setQueryParameter(queryParameterName: string, queryParameterValue: unknown): void {\n    if (queryParameterName) {\n      if (!this._query) {\n        this._query = new URLQuery();\n      }\n      this._query.set(queryParameterName, queryParameterValue);\n    }\n  }\n\n  /**\n   * Get the value of the query parameter with the provided query parameter name. If no query\n   * parameter exists with the provided name, then undefined will be returned.\n   */\n  public getQueryParameterValue(queryParameterName: string): string | string[] | undefined {\n    return this._query ? this._query.get(queryParameterName) : undefined;\n  }\n\n  /**\n   * Get the query in this URL.\n   */\n  public getQuery(): string | undefined {\n    return this._query ? this._query.toString() : undefined;\n  }\n\n  /**\n   * Set the parts of this URL by parsing the provided text using the provided startState.\n   */\n  private set(text: string, startState: URLTokenizerState): void {\n    const tokenizer = new URLTokenizer(text, startState);\n\n    while (tokenizer.next()) {\n      const token: URLToken | undefined = tokenizer.current();\n      let tokenPath: string | undefined;\n      if (token) {\n        switch (token.type) {\n          case \"SCHEME\":\n            this._scheme = token.text || undefined;\n            break;\n\n          case \"HOST\":\n            this._host = token.text || undefined;\n            break;\n\n          case \"PORT\":\n            this._port = token.text || undefined;\n            break;\n\n          case \"PATH\":\n            tokenPath = token.text || undefined;\n            if (!this._path || this._path === \"/\" || tokenPath !== \"/\") {\n              this._path = tokenPath;\n            }\n            break;\n\n          case \"QUERY\":\n            this._query = URLQuery.parse(token.text);\n            break;\n\n          default:\n            throw new Error(`Unrecognized URLTokenType: ${token.type}`);\n        }\n      }\n    }\n  }\n\n  public toString(): string {\n    let result = \"\";\n\n    if (this._scheme) {\n      result += `${this._scheme}://`;\n    }\n\n    if (this._host) {\n      result += this._host;\n    }\n\n    if (this._port) {\n      result += `:${this._port}`;\n    }\n\n    if (this._path) {\n      if (!this._path.startsWith(\"/\")) {\n        result += \"/\";\n      }\n      result += this._path;\n    }\n\n    if (this._query && this._query.any()) {\n      result += `?${this._query.toString()}`;\n    }\n\n    return result;\n  }\n\n  /**\n   * If the provided searchValue is found in this URLBuilder, then replace it with the provided\n   * replaceValue.\n   */\n  public replaceAll(searchValue: string, replaceValue: string): void {\n    if (searchValue) {\n      this.setScheme(replaceAll(this.getScheme(), searchValue, replaceValue));\n      this.setHost(replaceAll(this.getHost(), searchValue, replaceValue));\n      this.setPort(replaceAll(this.getPort(), searchValue, replaceValue));\n      this.setPath(replaceAll(this.getPath(), searchValue, replaceValue));\n      this.setQuery(replaceAll(this.getQuery(), searchValue, replaceValue));\n    }\n  }\n\n  public static parse(text: string): URLBuilder {\n    const result = new URLBuilder();\n    result.set(text, \"SCHEME_OR_HOST\");\n    return result;\n  }\n}\n\ntype URLTokenizerState = \"SCHEME\" | \"SCHEME_OR_HOST\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\" | \"DONE\";\n\ntype URLTokenType = \"SCHEME\" | \"HOST\" | \"PORT\" | \"PATH\" | \"QUERY\";\n\nexport class URLToken {\n  public constructor(public readonly text: string, public readonly type: URLTokenType) {}\n\n  public static scheme(text: string): URLToken {\n    return new URLToken(text, \"SCHEME\");\n  }\n\n  public static host(text: string): URLToken {\n    return new URLToken(text, \"HOST\");\n  }\n\n  public static port(text: string): URLToken {\n    return new URLToken(text, \"PORT\");\n  }\n\n  public static path(text: string): URLToken {\n    return new URLToken(text, \"PATH\");\n  }\n\n  public static query(text: string): URLToken {\n    return new URLToken(text, \"QUERY\");\n  }\n}\n\n/**\n * Get whether or not the provided character (single character string) is an alphanumeric (letter or\n * digit) character.\n */\nexport function isAlphaNumericCharacter(character: string): boolean {\n  const characterCode: number = character.charCodeAt(0);\n  return (\n    (48 /* '0' */ <= characterCode && characterCode <= 57) /* '9' */ ||\n    (65 /* 'A' */ <= characterCode && characterCode <= 90) /* 'Z' */ ||\n    (97 /* 'a' */ <= characterCode && characterCode <= 122) /* 'z' */\n  );\n}\n\n/**\n * A class that tokenizes URL strings.\n */\nexport class URLTokenizer {\n  readonly _textLength: number;\n  _currentState: URLTokenizerState;\n  _currentIndex: number;\n  _currentToken: URLToken | undefined;\n\n  public constructor(readonly _text: string, state?: URLTokenizerState) {\n    this._textLength = _text ? _text.length : 0;\n    this._currentState = state !== undefined && state !== null ? state : \"SCHEME_OR_HOST\";\n    this._currentIndex = 0;\n  }\n\n  /**\n   * Get the current URLToken this URLTokenizer is pointing at, or undefined if the URLTokenizer\n   * hasn't started or has finished tokenizing.\n   */\n  public current(): URLToken | undefined {\n    return this._currentToken;\n  }\n\n  /**\n   * Advance to the next URLToken and return whether or not a URLToken was found.\n   */\n  public next(): boolean {\n    if (!hasCurrentCharacter(this)) {\n      this._currentToken = undefined;\n    } else {\n      switch (this._currentState) {\n        case \"SCHEME\":\n          nextScheme(this);\n          break;\n\n        case \"SCHEME_OR_HOST\":\n          nextSchemeOrHost(this);\n          break;\n\n        case \"HOST\":\n          nextHost(this);\n          break;\n\n        case \"PORT\":\n          nextPort(this);\n          break;\n\n        case \"PATH\":\n          nextPath(this);\n          break;\n\n        case \"QUERY\":\n          nextQuery(this);\n          break;\n\n        default:\n          throw new Error(`Unrecognized URLTokenizerState: ${this._currentState}`);\n      }\n    }\n    return !!this._currentToken;\n  }\n}\n\n/**\n * Read the remaining characters from this Tokenizer's character stream.\n */\nfunction readRemaining(tokenizer: URLTokenizer): string {\n  let result = \"\";\n  if (tokenizer._currentIndex < tokenizer._textLength) {\n    result = tokenizer._text.substring(tokenizer._currentIndex);\n    tokenizer._currentIndex = tokenizer._textLength;\n  }\n  return result;\n}\n\n/**\n * Whether or not this URLTokenizer has a current character.\n */\nfunction hasCurrentCharacter(tokenizer: URLTokenizer): boolean {\n  return tokenizer._currentIndex < tokenizer._textLength;\n}\n\n/**\n * Get the character in the text string at the current index.\n */\nfunction getCurrentCharacter(tokenizer: URLTokenizer): string {\n  return tokenizer._text[tokenizer._currentIndex];\n}\n\n/**\n * Advance to the character in text that is \"step\" characters ahead. If no step value is provided,\n * then step will default to 1.\n */\nfunction nextCharacter(tokenizer: URLTokenizer, step?: number): void {\n  if (hasCurrentCharacter(tokenizer)) {\n    if (!step) {\n      step = 1;\n    }\n    tokenizer._currentIndex += step;\n  }\n}\n\n/**\n * Starting with the current character, peek \"charactersToPeek\" number of characters ahead in this\n * Tokenizer's stream of characters.\n */\nfunction peekCharacters(tokenizer: URLTokenizer, charactersToPeek: number): string {\n  let endIndex: number = tokenizer._currentIndex + charactersToPeek;\n  if (tokenizer._textLength < endIndex) {\n    endIndex = tokenizer._textLength;\n  }\n  return tokenizer._text.substring(tokenizer._currentIndex, endIndex);\n}\n\n/**\n * Read characters from this Tokenizer until the end of the stream or until the provided condition\n * is false when provided the current character.\n */\nfunction readWhile(tokenizer: URLTokenizer, condition: (character: string) => boolean): string {\n  let result = \"\";\n\n  while (hasCurrentCharacter(tokenizer)) {\n    const currentCharacter: string = getCurrentCharacter(tokenizer);\n    if (!condition(currentCharacter)) {\n      break;\n    } else {\n      result += currentCharacter;\n      nextCharacter(tokenizer);\n    }\n  }\n\n  return result;\n}\n\n/**\n * Read characters from this Tokenizer until a non-alphanumeric character or the end of the\n * character stream is reached.\n */\nfunction readWhileLetterOrDigit(tokenizer: URLTokenizer): string {\n  return readWhile(tokenizer, (character: string) => isAlphaNumericCharacter(character));\n}\n\n/**\n * Read characters from this Tokenizer until one of the provided terminating characters is read or\n * the end of the character stream is reached.\n */\nfunction readUntilCharacter(tokenizer: URLTokenizer, ...terminatingCharacters: string[]): string {\n  return readWhile(\n    tokenizer,\n    (character: string) => terminatingCharacters.indexOf(character) === -1\n  );\n}\n\nfunction nextScheme(tokenizer: URLTokenizer): void {\n  const scheme: string = readWhileLetterOrDigit(tokenizer);\n  tokenizer._currentToken = URLToken.scheme(scheme);\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"HOST\";\n  }\n}\n\nfunction nextSchemeOrHost(tokenizer: URLTokenizer): void {\n  const schemeOrHost: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    if (peekCharacters(tokenizer, 3) === \"://\") {\n      tokenizer._currentToken = URLToken.scheme(schemeOrHost);\n      tokenizer._currentState = \"HOST\";\n    } else {\n      tokenizer._currentToken = URLToken.host(schemeOrHost);\n      tokenizer._currentState = \"PORT\";\n    }\n  } else {\n    tokenizer._currentToken = URLToken.host(schemeOrHost);\n    if (getCurrentCharacter(tokenizer) === \"/\") {\n      tokenizer._currentState = \"PATH\";\n    } else {\n      tokenizer._currentState = \"QUERY\";\n    }\n  }\n}\n\nfunction nextHost(tokenizer: URLTokenizer): void {\n  if (peekCharacters(tokenizer, 3) === \"://\") {\n    nextCharacter(tokenizer, 3);\n  }\n\n  const host: string = readUntilCharacter(tokenizer, \":\", \"/\", \"?\");\n  tokenizer._currentToken = URLToken.host(host);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \":\") {\n    tokenizer._currentState = \"PORT\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPort(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \":\") {\n    nextCharacter(tokenizer);\n  }\n\n  const port: string = readUntilCharacter(tokenizer, \"/\", \"?\");\n  tokenizer._currentToken = URLToken.port(port);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else if (getCurrentCharacter(tokenizer) === \"/\") {\n    tokenizer._currentState = \"PATH\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextPath(tokenizer: URLTokenizer): void {\n  const path: string = readUntilCharacter(tokenizer, \"?\");\n  tokenizer._currentToken = URLToken.path(path);\n\n  if (!hasCurrentCharacter(tokenizer)) {\n    tokenizer._currentState = \"DONE\";\n  } else {\n    tokenizer._currentState = \"QUERY\";\n  }\n}\n\nfunction nextQuery(tokenizer: URLTokenizer): void {\n  if (getCurrentCharacter(tokenizer) === \"?\") {\n    nextCharacter(tokenizer);\n  }\n\n  const query: string = readRemaining(tokenizer);\n  tokenizer._currentToken = URLToken.query(query);\n  tokenizer._currentState = \"DONE\";\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { URLBuilder, URLQuery } from \"../url\";\n\nexport interface SanitizerOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n}\n\nconst RedactedString = \"REDACTED\";\n\nconst defaultAllowedHeaderNames = [\n  \"x-ms-client-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-useragent\",\n  \"x-ms-correlation-request-id\",\n  \"x-ms-request-id\",\n  \"client-request-id\",\n  \"return-client-request-id\",\n  \"traceparent\",\n\n  \"Access-Control-Allow-Credentials\",\n  \"Access-Control-Allow-Headers\",\n  \"Access-Control-Allow-Methods\",\n  \"Access-Control-Allow-Origin\",\n  \"Access-Control-Expose-Headers\",\n  \"Access-Control-Max-Age\",\n  \"Access-Control-Request-Headers\",\n  \"Access-Control-Request-Method\",\n  \"Origin\",\n\n  \"Accept\",\n  \"Cache-Control\",\n  \"Connection\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"ETag\",\n  \"Expires\",\n  \"If-Match\",\n  \"If-Modified-Since\",\n  \"If-None-Match\",\n  \"If-Unmodified-Since\",\n  \"Last-Modified\",\n  \"Pragma\",\n  \"Request-Id\",\n  \"Retry-After\",\n  \"Server\",\n  \"Transfer-Encoding\",\n  \"User-Agent\"\n];\n\nconst defaultAllowedQueryParameters: string[] = [\"api-version\"];\n\nexport class Sanitizer {\n  public allowedHeaderNames: Set<string>;\n  public allowedQueryParameters: Set<string>;\n\n  constructor({ allowedHeaderNames = [], allowedQueryParameters = [] }: SanitizerOptions = {}) {\n    allowedHeaderNames = Array.isArray(allowedHeaderNames)\n      ? defaultAllowedHeaderNames.concat(allowedHeaderNames)\n      : defaultAllowedHeaderNames;\n\n    allowedQueryParameters = Array.isArray(allowedQueryParameters)\n      ? defaultAllowedQueryParameters.concat(allowedQueryParameters)\n      : defaultAllowedQueryParameters;\n\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n  }\n\n  public sanitize(obj: unknown): string {\n    return JSON.stringify(obj, this.replacer.bind(this), 2);\n  }\n\n  private replacer(key: string, value: unknown): any {\n    // Ensure Errors include their interesting non-enumerable members\n    if (value instanceof Error) {\n      return {\n        ...value,\n        name: value.name,\n        message: value.message\n      };\n    }\n    if (key === \"_headersMap\") {\n      return this.sanitizeHeaders(key, value as Record<string, any>);\n    } else if (key === \"url\") {\n      return this.sanitizeUrl(value as string);\n    } else if (key === \"query\") {\n      return this.sanitizeQuery(value as Record<string, string>);\n    } else if (key === \"body\") {\n      // Don't log the request body\n      return undefined;\n    } else if (key === \"response\") {\n      // Don't log response again\n      return undefined;\n    } else if (key === \"operationSpec\") {\n      // When using sendOperationRequest, the request carries a massive\n      // field with the autorest spec. No need to log it.\n      return undefined;\n    }\n\n    return value;\n  }\n\n  private sanitizeHeaders(_: string, value: { [s: string]: any }): { [s: string]: string } {\n    return this.sanitizeObject(value, this.allowedHeaderNames, (v, k) => v[k].value);\n  }\n\n  private sanitizeQuery(value: { [s: string]: string }): { [s: string]: string } {\n    return this.sanitizeObject(value, this.allowedQueryParameters, (v, k) => v[k]);\n  }\n\n  private sanitizeObject(\n    value: { [s: string]: any },\n    allowedKeys: Set<string>,\n    accessor: (value: any, key: string) => any\n  ): { [s: string]: string } {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized: { [s: string]: string } = {};\n\n    for (const k of Object.keys(value)) {\n      if (allowedKeys.has(k.toLowerCase())) {\n        sanitized[k] = accessor(value, k);\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  private sanitizeUrl(value: string): string {\n    if (typeof value !== \"string\" || value === null) {\n      return value;\n    }\n\n    const urlBuilder = URLBuilder.parse(value);\n    const queryString = urlBuilder.getQuery();\n\n    if (!queryString) {\n      return value;\n    }\n\n    const query = URLQuery.parse(queryString);\n    for (const k of query.keys()) {\n      if (!this.allowedQueryParameters.has(k.toLowerCase())) {\n        query.set(k, RedactedString);\n      }\n    }\n\n    urlBuilder.setQuery(query.toString());\n    return urlBuilder.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { WebResourceLike } from \"./webResource\";\nimport { custom } from \"./util/inspect\";\nimport { Sanitizer } from \"./util/sanitizer\";\n\nconst errorSanitizer = new Sanitizer();\n\nexport class RestError extends Error {\n  static readonly REQUEST_SEND_ERROR: string = \"REQUEST_SEND_ERROR\";\n  static readonly PARSE_ERROR: string = \"PARSE_ERROR\";\n\n  code?: string;\n  statusCode?: number;\n  request?: WebResourceLike;\n  response?: HttpOperationResponse;\n  details?: unknown;\n  constructor(\n    message: string,\n    code?: string,\n    statusCode?: number,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ) {\n    super(message);\n    this.name = \"RestError\";\n    this.code = code;\n    this.statusCode = statusCode;\n    this.request = request;\n    this.response = response;\n\n    Object.setPrototypeOf(this, RestError.prototype);\n  }\n\n  /**\n   * Logging method for util.inspect in Node\n   */\n  [custom](): string {\n    return `RestError: ${this.message} \\n ${errorSanitizer.sanitize(this)}`;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpHeaders, HttpHeadersLike } from \"./httpHeaders\";\nimport { WebResourceLike, TransferProgressEvent } from \"./webResource\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { RestError } from \"./restError\";\n\n/**\n * A HttpClient implementation that uses XMLHttpRequest to send HTTP requests.\n */\nexport class XhrHttpClient implements HttpClient {\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    const xhr = new XMLHttpRequest();\n\n    if (request.proxySettings) {\n      throw new Error(\"HTTP proxy is not supported in browser environment\");\n    }\n\n    const abortSignal = request.abortSignal;\n    if (abortSignal) {\n      if (abortSignal.aborted) {\n        return Promise.reject(new AbortError(\"The operation was aborted.\"));\n      }\n\n      const listener = (): void => {\n        xhr.abort();\n      };\n      abortSignal.addEventListener(\"abort\", listener);\n      xhr.addEventListener(\"readystatechange\", () => {\n        if (xhr.readyState === XMLHttpRequest.DONE) {\n          abortSignal.removeEventListener(\"abort\", listener);\n        }\n      });\n    }\n\n    addProgressListener(xhr.upload, request.onUploadProgress);\n    addProgressListener(xhr, request.onDownloadProgress);\n\n    if (request.formData) {\n      const formData = request.formData;\n      const requestForm = new FormData();\n      const appendFormValue = (key: string, value: any): void => {\n        if (\n          value &&\n          Object.prototype.hasOwnProperty.call(value, \"value\") &&\n          Object.prototype.hasOwnProperty.call(value, \"options\")\n        ) {\n          requestForm.append(key, value.value, value.options);\n        } else {\n          requestForm.append(key, value);\n        }\n      };\n      for (const formKey of Object.keys(formData)) {\n        const formValue = formData[formKey];\n        if (Array.isArray(formValue)) {\n          for (let j = 0; j < formValue.length; j++) {\n            appendFormValue(formKey, formValue[j]);\n          }\n        } else {\n          appendFormValue(formKey, formValue);\n        }\n      }\n\n      request.body = requestForm;\n      request.formData = undefined;\n      const contentType = request.headers.get(\"Content-Type\");\n      if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n        // browser will automatically apply a suitable content-type header\n        request.headers.remove(\"Content-Type\");\n      }\n    }\n\n    xhr.open(request.method, request.url);\n    xhr.timeout = request.timeout;\n    xhr.withCredentials = request.withCredentials;\n    for (const header of request.headers.headersArray()) {\n      xhr.setRequestHeader(header.name, header.value);\n    }\n    xhr.responseType = request.streamResponseBody ? \"blob\" : \"text\";\n\n    // tslint:disable-next-line:no-null-keyword\n    xhr.send(request.body === undefined ? null : request.body);\n\n    if (request.streamResponseBody) {\n      return new Promise((resolve, reject) => {\n        xhr.addEventListener(\"readystatechange\", () => {\n          // Resolve as soon as headers are loaded\n          if (xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {\n            // eslint-disable-next-line @typescript-eslint/no-shadow\n            const blobBody = new Promise<Blob>((resolve, reject) => {\n              xhr.addEventListener(\"load\", () => {\n                resolve(xhr.response);\n              });\n              rejectOnTerminalEvent(request, xhr, reject);\n            });\n            resolve({\n              request,\n              status: xhr.status,\n              headers: parseHeaders(xhr),\n              blobBody\n            });\n          }\n        });\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    } else {\n      return new Promise(function(resolve, reject) {\n        xhr.addEventListener(\"load\", () =>\n          resolve({\n            request,\n            status: xhr.status,\n            headers: parseHeaders(xhr),\n            bodyAsText: xhr.responseText\n          })\n        );\n        rejectOnTerminalEvent(request, xhr, reject);\n      });\n    }\n  }\n}\n\nfunction addProgressListener(\n  xhr: XMLHttpRequestEventTarget,\n  listener?: (progress: TransferProgressEvent) => void\n): void {\n  if (listener) {\n    xhr.addEventListener(\"progress\", (rawEvent) =>\n      listener({\n        loadedBytes: rawEvent.loaded\n      })\n    );\n  }\n}\n\n// exported locally for testing\nexport function parseHeaders(xhr: XMLHttpRequest): HttpHeadersLike {\n  const responseHeaders = new HttpHeaders();\n  const headerLines = xhr\n    .getAllResponseHeaders()\n    .trim()\n    .split(/[\\r\\n]+/);\n  for (const line of headerLines) {\n    const index = line.indexOf(\":\");\n    const headerName = line.slice(0, index);\n    const headerValue = line.slice(index + 2);\n    responseHeaders.set(headerName, headerValue);\n  }\n  return responseHeaders;\n}\n\nfunction rejectOnTerminalEvent(\n  request: WebResourceLike,\n  xhr: XMLHttpRequest,\n  reject: (err: any) => void\n): void {\n  xhr.addEventListener(\"error\", () =>\n    reject(\n      new RestError(\n        `Failed to send request to ${request.url}`,\n        RestError.REQUEST_SEND_ERROR,\n        undefined,\n        request\n      )\n    )\n  );\n  const abortError = new AbortError(\"The operation was aborted.\");\n  xhr.addEventListener(\"abort\", () => reject(abortError));\n  xhr.addEventListener(\"timeout\", () => reject(abortError));\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The different levels of logs that can be used with the HttpPipelineLogger.\n */\nexport enum HttpPipelineLogLevel {\n  /**\n   * A log level that indicates that no logs will be logged.\n   */\n  OFF,\n\n  /**\n   * An error log.\n   */\n  ERROR,\n\n  /**\n   * A warning log.\n   */\n  WARNING,\n\n  /**\n   * An information log.\n   */\n  INFO\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\nimport { TransferProgressEvent, RequestOptionsBase } from \"./webResource\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\n\n/**\n * The base options type for all operations.\n */\nexport interface OperationOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: OperationRequestOptions;\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: OperationTracingOptions;\n}\n\nexport interface OperationRequestOptions {\n  /**\n   * User defined custom request headers that will be applied before the request is sent.\n   */\n  customHeaders?: { [key: string]: string };\n\n  /**\n   * The number of milliseconds a request can take before automatically being terminated.\n   */\n  timeout?: number;\n\n  /**\n   * Callback which fires upon upload progress.\n   */\n  onUploadProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Callback which fires upon download progress.\n   */\n  onDownloadProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Whether or not the HttpOperationResponse should be deserialized. If this is undefined, then the\n   * HttpOperationResponse should be deserialized.\n   */\n  shouldDeserialize?: boolean | ((response: HttpOperationResponse) => boolean);\n}\n\n/**\n * Converts an OperationOptions to a RequestOptionsBase\n *\n * @param opts - OperationOptions object to convert to RequestOptionsBase\n */\nexport function operationOptionsToRequestOptionsBase<T extends OperationOptions>(\n  opts: T\n): RequestOptionsBase {\n  const { requestOptions, tracingOptions, ...additionalOptions } = opts;\n\n  let result: RequestOptionsBase = additionalOptions;\n\n  if (requestOptions) {\n    result = { ...result, ...requestOptions };\n  }\n\n  if (tracingOptions) {\n    result.spanOptions = tracingOptions.spanOptions;\n  }\n\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { SpanOptions } from \"./tracing\";\n\n/**\n * Represents a credential capable of providing an authentication token.\n */\nexport interface TokenCredential {\n  /**\n   * Gets the token provided by this credential.\n   *\n   * This method is called automatically by Azure SDK client libraries. You may call this method\n   * directly, but you must also handle token caching and token refreshing.\n   *\n   * @param scopes - The list of scopes for which the token will have access.\n   * @param options - The options used to configure any requests this\n   *                TokenCredential implementation might make.\n   */\n  getToken(scopes: string | string[], options?: GetTokenOptions): Promise<AccessToken | null>;\n}\n\n/**\n * Defines options for TokenCredential.getToken.\n */\nexport interface GetTokenOptions {\n  /**\n   * The signal which can be used to abort requests.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Options used when creating and sending HTTP requests for this operation.\n   */\n  requestOptions?: {\n    /**\n     * The number of milliseconds a request can take before automatically being terminated.\n     */\n    timeout?: number;\n  };\n  /**\n   * Options used when tracing is enabled.\n   */\n  tracingOptions?: {\n    /**\n     * OpenTelemetry SpanOptions used to create a span when tracing is enabled.\n     */\n    spanOptions?: SpanOptions;\n  };\n}\n\n/**\n * Represents an access token with an expiration time.\n */\nexport interface AccessToken {\n  /**\n   * The access token returned by the authentication service.\n   */\n  token: string;\n\n  /**\n   * The access token's expiration timestamp in milliseconds, UNIX epoch time.\n   */\n  expiresOnTimestamp: number;\n}\n\n/**\n * Tests an object to determine whether it implements TokenCredential.\n *\n * @param credential - The assumed TokenCredential to be tested.\n */\nexport function isTokenCredential(credential: unknown): credential is TokenCredential {\n  // Check for an object with a 'getToken' function and possibly with\n  // a 'signRequest' function.  We do this check to make sure that\n  // a ServiceClientCredentials implementor (like TokenClientCredentials\n  // in ms-rest-nodeauth) doesn't get mistaken for a TokenCredential if\n  // it doesn't actually implement TokenCredential also.\n  const castCredential = credential as {\n    getToken: unknown;\n    signRequest: unknown;\n  };\n  return (\n    castCredential &&\n    typeof castCredential.getToken === \"function\" &&\n    (castCredential.signRequest === undefined || castCredential.getToken.length > 0)\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpPipelineLogger } from \"../httpPipelineLogger\";\nimport { HttpPipelineLogLevel } from \"../httpPipelineLogLevel\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Creates a new RequestPolicy per-request that uses the provided nextPolicy.\n */\nexport type RequestPolicyFactory = {\n  create(nextPolicy: RequestPolicy, options: RequestPolicyOptionsLike): RequestPolicy;\n};\n\nexport interface RequestPolicy {\n  sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse>;\n}\n\nexport abstract class BaseRequestPolicy implements RequestPolicy {\n  protected constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptionsLike\n  ) {}\n\n  public abstract sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse>;\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return this._options.shouldLog(logLevel);\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meat the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    this._options.log(logLevel, message);\n  }\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport interface RequestPolicyOptionsLike {\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  shouldLog(logLevel: HttpPipelineLogLevel): boolean;\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  log(logLevel: HttpPipelineLogLevel, message: string): void;\n}\n\n/**\n * Optional properties that can be used when creating a RequestPolicy.\n */\nexport class RequestPolicyOptions {\n  constructor(private _logger?: HttpPipelineLogger) {}\n\n  /**\n   * Get whether or not a log with the provided log level should be logged.\n   * @param logLevel - The log level of the log that will be logged.\n   * @returns Whether or not a log with the provided log level should be logged.\n   */\n  public shouldLog(logLevel: HttpPipelineLogLevel): boolean {\n    return (\n      !!this._logger &&\n      logLevel !== HttpPipelineLogLevel.OFF &&\n      logLevel <= this._logger.minimumLogLevel\n    );\n  }\n\n  /**\n   * Attempt to log the provided message to the provided logger. If no logger was provided or if\n   * the log level does not meet the logger's threshold, then nothing will be logged.\n   * @param logLevel - The log level of this log.\n   * @param message - The message of this log.\n   */\n  public log(logLevel: HttpPipelineLogLevel, message: string): void {\n    if (this._logger && this.shouldLog(logLevel)) {\n      this._logger.log(logLevel, message);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nconst logFunction = console.debug || console.log;\nexport function log(...args: any[]): void {\n  logFunction(...args);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable no-invalid-this */\n\nimport { log } from \"./log\";\n\n/**\n * A simple mechanism for enabling logging.\n * Intended to mimic the publicly available `debug` package.\n */\nexport interface Debug {\n  /**\n   * Creates a new logger with the given namespace.\n   */\n  (namespace: string): Debugger;\n  /**\n   * The default log method (defaults to console)\n   */\n  log: (...args: any[]) => void;\n  /**\n   * Enables a particular set of namespaces.\n   * To enable multiple separate them with commas, e.g. \"info,debug\".\n   * Supports wildcards, e.g. \"azure:*\"\n   * Supports skip syntax, e.g. \"azure:*,-azure:storage:*\" will enable\n   * everything under azure except for things under azure:storage.\n   */\n  enable: (namespaces: string) => void;\n  /**\n   * Checks if a particular namespace is enabled.\n   */\n  enabled: (namespace: string) => boolean;\n  /**\n   * Disables all logging, returns what was previously enabled.\n   */\n  disable: () => string;\n}\n\n/**\n * A log function that can be dynamically enabled and redirected.\n */\nexport interface Debugger {\n  /**\n   * Logs the given arguments to the `log` method.\n   */\n  (...args: any[]): void;\n  /**\n   * True if this logger is active and logging.\n   */\n  enabled: boolean;\n  /**\n   * Used to cleanup/remove this logger.\n   */\n  destroy: () => boolean;\n  /**\n   * The current log method. Can be overridden to redirect output.\n   */\n  log: (...args: any[]) => void;\n  /**\n   * The namespace of this logger.\n   */\n  namespace: string;\n  /**\n   * Extends this logger with a child namespace.\n   * Namespaces are separated with a ':' character.\n   */\n  extend: (namespace: string) => Debugger;\n}\n\nconst debugEnvVariable =\n  (typeof process !== \"undefined\" && process.env && process.env.DEBUG) || undefined;\n\nlet enabledString: string | undefined;\nlet enabledNamespaces: RegExp[] = [];\nlet skippedNamespaces: RegExp[] = [];\nconst debuggers: Debugger[] = [];\n\nif (debugEnvVariable) {\n  enable(debugEnvVariable);\n}\n\nconst debugObj: Debug = Object.assign(\n  (namespace: string): Debugger => {\n    return createDebugger(namespace);\n  },\n  {\n    enable,\n    enabled,\n    disable,\n    log\n  }\n);\n\nfunction enable(namespaces: string): void {\n  enabledString = namespaces;\n  enabledNamespaces = [];\n  skippedNamespaces = [];\n  const wildcard = /\\*/g;\n  const namespaceList = namespaces.split(\",\").map((ns) => ns.trim().replace(wildcard, \".*?\"));\n  for (const ns of namespaceList) {\n    if (ns.startsWith(\"-\")) {\n      skippedNamespaces.push(new RegExp(`^${ns.substr(1)}$`));\n    } else {\n      enabledNamespaces.push(new RegExp(`^${ns}$`));\n    }\n  }\n  for (const instance of debuggers) {\n    instance.enabled = enabled(instance.namespace);\n  }\n}\n\nfunction enabled(namespace: string): boolean {\n  if (namespace.endsWith(\"*\")) {\n    return true;\n  }\n\n  for (const skipped of skippedNamespaces) {\n    if (skipped.test(namespace)) {\n      return false;\n    }\n  }\n  for (const enabledNamespace of enabledNamespaces) {\n    if (enabledNamespace.test(namespace)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction disable(): string {\n  const result = enabledString || \"\";\n  enable(\"\");\n  return result;\n}\n\nfunction createDebugger(namespace: string): Debugger {\n  const newDebugger: Debugger = Object.assign(debug, {\n    enabled: enabled(namespace),\n    destroy,\n    log: debugObj.log,\n    namespace,\n    extend\n  });\n\n  function debug(...args: any[]): void {\n    if (!newDebugger.enabled) {\n      return;\n    }\n    if (args.length > 0) {\n      args[0] = `${namespace} ${args[0]}`;\n    }\n    newDebugger.log(...args);\n  }\n\n  debuggers.push(newDebugger);\n\n  return newDebugger;\n}\n\nfunction destroy(this: Debugger): boolean {\n  const index = debuggers.indexOf(this);\n  if (index >= 0) {\n    debuggers.splice(index, 1);\n    return true;\n  }\n  return false;\n}\n\nfunction extend(this: Debugger, namespace: string): Debugger {\n  const newDebugger = createDebugger(`${this.namespace}:${namespace}`);\n  newDebugger.log = this.log;\n  return newDebugger;\n}\n\nexport default debugObj;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport debug, { Debugger } from \"./debug\";\nexport { Debugger } from \"./debug\";\n\nconst registeredLoggers = new Set<AzureDebugger>();\nconst logLevelFromEnv =\n  (typeof process !== \"undefined\" && process.env && process.env.AZURE_LOG_LEVEL) || undefined;\n\nlet azureLogLevel: AzureLogLevel | undefined;\n\n/**\n * The AzureLogger provides a mechanism for overriding where logs are output to.\n * By default, logs are sent to stderr.\n * Override the `log` method to redirect logs to another location.\n */\nexport const AzureLogger: AzureClientLogger = debug(\"azure\");\nAzureLogger.log = (...args) => {\n  debug.log(...args);\n};\n\n/**\n * The log levels supported by the logger.\n * The log levels in order of most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport type AzureLogLevel = \"verbose\" | \"info\" | \"warning\" | \"error\";\nconst AZURE_LOG_LEVELS = [\"verbose\", \"info\", \"warning\", \"error\"];\n\ntype AzureDebugger = Debugger & { level: AzureLogLevel };\n\n/**\n * An AzureClientLogger is a function that can log to an appropriate severity level.\n */\nexport type AzureClientLogger = Debugger;\n\nif (logLevelFromEnv) {\n  // avoid calling setLogLevel because we don't want a mis-set environment variable to crash\n  if (isAzureLogLevel(logLevelFromEnv)) {\n    setLogLevel(logLevelFromEnv);\n  } else {\n    console.error(\n      `AZURE_LOG_LEVEL set to unknown log level '${logLevelFromEnv}'; logging is not enabled. Acceptable values: ${AZURE_LOG_LEVELS.join(\n        \", \"\n      )}.`\n    );\n  }\n}\n\n/**\n * Immediately enables logging at the specified log level.\n * @param level - The log level to enable for logging.\n * Options from most verbose to least verbose are:\n * - verbose\n * - info\n * - warning\n * - error\n */\nexport function setLogLevel(level?: AzureLogLevel): void {\n  if (level && !isAzureLogLevel(level)) {\n    throw new Error(\n      `Unknown log level '${level}'. Acceptable values: ${AZURE_LOG_LEVELS.join(\",\")}`\n    );\n  }\n  azureLogLevel = level;\n\n  const enabledNamespaces = [];\n  for (const logger of registeredLoggers) {\n    if (shouldEnable(logger)) {\n      enabledNamespaces.push(logger.namespace);\n    }\n  }\n\n  debug.enable(enabledNamespaces.join(\",\"));\n}\n\n/**\n * Retrieves the currently specified log level.\n */\nexport function getLogLevel(): AzureLogLevel | undefined {\n  return azureLogLevel;\n}\n\nconst levelMap = {\n  verbose: 400,\n  info: 300,\n  warning: 200,\n  error: 100\n};\n\n/**\n * Defines the methods available on the SDK-facing logger.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface AzureLogger {\n  /**\n   * Used for failures the program is unlikely to recover from,\n   * such as Out of Memory.\n   */\n  error: Debugger;\n  /**\n   * Used when a function fails to perform its intended task.\n   * Usually this means the function will throw an exception.\n   * Not used for self-healing events (e.g. automatic retry)\n   */\n  warning: Debugger;\n  /**\n   * Used when a function operates normally.\n   */\n  info: Debugger;\n  /**\n   * Used for detailed trbouleshooting scenarios. This is\n   * intended for use by developers / system administrators\n   * for diagnosing specific failures.\n   */\n  verbose: Debugger;\n}\n\n/**\n * Creates a logger for use by the Azure SDKs that inherits from `AzureLogger`.\n * @param namespace - The name of the SDK package.\n * @hidden\n */\nexport function createClientLogger(namespace: string): AzureLogger {\n  const clientRootLogger: AzureClientLogger = AzureLogger.extend(namespace);\n  patchLogMethod(AzureLogger, clientRootLogger);\n  return {\n    error: createLogger(clientRootLogger, \"error\"),\n    warning: createLogger(clientRootLogger, \"warning\"),\n    info: createLogger(clientRootLogger, \"info\"),\n    verbose: createLogger(clientRootLogger, \"verbose\")\n  };\n}\n\nfunction patchLogMethod(parent: AzureClientLogger, child: AzureClientLogger | AzureDebugger): void {\n  child.log = (...args) => {\n    parent.log(...args);\n  };\n}\n\nfunction createLogger(parent: AzureClientLogger, level: AzureLogLevel): AzureDebugger {\n  const logger: AzureDebugger = Object.assign(parent.extend(level), {\n    level\n  });\n\n  patchLogMethod(parent, logger);\n\n  if (shouldEnable(logger)) {\n    const enabledNamespaces = debug.disable();\n    debug.enable(enabledNamespaces + \",\" + logger.namespace);\n  }\n\n  registeredLoggers.add(logger);\n\n  return logger;\n}\n\nfunction shouldEnable(logger: AzureDebugger): boolean {\n  if (azureLogLevel && levelMap[logger.level] <= levelMap[azureLogLevel]) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction isAzureLogLevel(logLevel: string): logLevel is AzureLogLevel {\n  return AZURE_LOG_LEVELS.includes(logLevel as any);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createClientLogger } from \"@azure/logger\";\nexport const logger = createClientLogger(\"core-http\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { Debugger } from \"@azure/logger\";\nimport { logger as coreLogger } from \"../log\";\nimport { Sanitizer } from \"../util/sanitizer\";\n\nexport interface LogPolicyOptions {\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   */\n  allowedHeaderNames?: string[];\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   */\n  allowedQueryParameters?: string[];\n\n  /**\n   * The Debugger (logger) instance to use for writing pipeline logs.\n   */\n  logger?: Debugger;\n}\n\nexport function logPolicy(loggingOptions: LogPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new LogPolicy(nextPolicy, options, loggingOptions);\n    }\n  };\n}\n\nexport class LogPolicy extends BaseRequestPolicy {\n  logger: Debugger;\n  sanitizer: Sanitizer;\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedHeaderNames(): Set<string> {\n    return this.sanitizer.allowedHeaderNames;\n  }\n\n  /**\n   * Header names whose values will be logged when logging is enabled. Defaults to\n   * Date, traceparent, x-ms-client-request-id, and x-ms-request id.  Any headers\n   * specified in this field will be added to that list.  Any other values will\n   * be written to logs as \"REDACTED\".\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedHeaderNames(allowedHeaderNames: Set<string>) {\n    this.sanitizer.allowedHeaderNames = allowedHeaderNames;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public get allowedQueryParameters(): Set<string> {\n    return this.sanitizer.allowedQueryParameters;\n  }\n\n  /**\n   * Query string names whose values will be logged when logging is enabled. By default no\n   * query string values are logged.\n   * @deprecated Pass these into the constructor instead.\n   */\n  public set allowedQueryParameters(allowedQueryParameters: Set<string>) {\n    this.sanitizer.allowedQueryParameters = allowedQueryParameters;\n  }\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    {\n      logger = coreLogger.info,\n      allowedHeaderNames = [],\n      allowedQueryParameters = []\n    }: LogPolicyOptions = {}\n  ) {\n    super(nextPolicy, options);\n    this.logger = logger;\n    this.sanitizer = new Sanitizer({ allowedHeaderNames, allowedQueryParameters });\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!this.logger.enabled) return this._nextPolicy.sendRequest(request);\n\n    this.logRequest(request);\n    return this._nextPolicy.sendRequest(request).then((response) => this.logResponse(response));\n  }\n\n  private logRequest(request: WebResourceLike): void {\n    this.logger(`Request: ${this.sanitizer.sanitize(request)}`);\n  }\n\n  private logResponse(response: HttpOperationResponse): HttpOperationResponse {\n    this.logger(`Response status code: ${response.status}`);\n    this.logger(`Headers: ${this.sanitizer.sanitize(response.headers)}`);\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { Mapper } from \"./serializer\";\n\nexport type ParameterPath = string | string[] | { [propertyName: string]: ParameterPath };\n\n/**\n * A common interface that all Operation parameter's extend.\n */\nexport interface OperationParameter {\n  /**\n   * The path to this parameter's value in OperationArguments or the object that contains paths for\n   * each property's value in OperationArguments.\n   */\n  parameterPath: ParameterPath;\n\n  /**\n   * The mapper that defines how to validate and serialize this parameter's value.\n   */\n  mapper: Mapper;\n}\n\n/**\n * A parameter for an operation that will be substituted into the operation's request URL.\n */\nexport interface OperationURLParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the URL parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n}\n\n/**\n * A parameter for an operation that will be added as a query parameter to the operation's HTTP\n * request.\n */\nexport interface OperationQueryParameter extends OperationParameter {\n  /**\n   * Whether or not to skip encoding the query parameter's value before adding it to the URL.\n   */\n  skipEncoding?: boolean;\n\n  /**\n   * If this query parameter's value is a collection, what type of format should the value be\n   * converted to.\n   */\n  collectionFormat?: QueryCollectionFormat;\n}\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter - The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter: OperationParameter): string {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\n\nexport function getPathStringFromParameterPath(\n  parameterPath: ParameterPath,\n  mapper: Mapper\n): string {\n  let result: string;\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName!;\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter\n} from \"./operationParameter\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { MapperType, Serializer } from \"./serializer\";\nimport { HttpMethods } from \"./webResource\";\n\n/**\n * A specification that defines an operation.\n */\nexport interface OperationSpec {\n  /**\n   * The serializer to use in this operation.\n   */\n  readonly serializer: Serializer;\n\n  /**\n   * The HTTP method that should be used by requests for this operation.\n   */\n  readonly httpMethod: HttpMethods;\n\n  /**\n   * The URL that was provided in the service's specification. This will still have all of the URL\n   * template variables in it. If this is not provided when the OperationSpec is created, then it\n   * will be populated by a \"baseUri\" property on the ServiceClient.\n   */\n  readonly baseUrl?: string;\n\n  /**\n   * The fixed path for this operation's URL. This will still have all of the URL template variables\n   * in it.\n   */\n  readonly path?: string;\n\n  /**\n   * The content type of the request body. This value will be used as the \"Content-Type\" header if\n   * it is provided.\n   */\n  readonly contentType?: string;\n\n  /**\n   * The media type of the request body.\n   * This value can be used to aide in serialization if it is provided.\n   */\n  readonly mediaType?:\n    | \"json\"\n    | \"xml\"\n    | \"form\"\n    | \"binary\"\n    | \"multipart\"\n    | \"text\"\n    | \"unknown\"\n    | string;\n  /**\n   * The parameter that will be used to construct the HTTP request's body.\n   */\n  readonly requestBody?: OperationParameter;\n\n  /**\n   * Whether or not this operation uses XML request and response bodies.\n   */\n  readonly isXML?: boolean;\n\n  /**\n   * The parameters to the operation method that will be substituted into the constructed URL.\n   */\n  readonly urlParameters?: ReadonlyArray<OperationURLParameter>;\n\n  /**\n   * The parameters to the operation method that will be added to the constructed URL's query.\n   */\n  readonly queryParameters?: ReadonlyArray<OperationQueryParameter>;\n\n  /**\n   * The parameters to the operation method that will be converted to headers on the operation's\n   * HTTP request.\n   */\n  readonly headerParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The parameters to the operation method that will be used to create a formdata body for the\n   * operation's HTTP request.\n   */\n  readonly formDataParameters?: ReadonlyArray<OperationParameter>;\n\n  /**\n   * The different types of responses that this operation can return based on what status code is\n   * returned.\n   */\n  readonly responses: { [responseCode: string]: OperationResponse };\n}\n\nexport function isStreamOperation(operationSpec: OperationSpec): boolean {\n  let result = false;\n  for (const statusCode in operationSpec.responses) {\n    const operationResponse: OperationResponse = operationSpec.responses[statusCode];\n    if (\n      operationResponse.bodyMapper &&\n      operationResponse.bodyMapper.type.name === MapperType.Stream\n    ) {\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./serializer.common\";\n\n// tslint:disable-next-line:no-null-keyword\nconst doc = document.implementation.createDocument(null, null, null);\n\nconst parser = new DOMParser();\nexport function parseXML(str: string, opts: SerializerOptions = {}): Promise<any> {\n  try {\n    const updatedOptions: Required<SerializerOptions> = {\n      rootName: opts.rootName ?? \"\",\n      includeRoot: opts.includeRoot ?? false,\n      xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n    };\n    const dom = parser.parseFromString(str, \"application/xml\");\n    throwIfError(dom);\n\n    let obj;\n    if (updatedOptions.includeRoot) {\n      obj = domToObject(dom, updatedOptions);\n    } else {\n      obj = domToObject(dom.childNodes[0], updatedOptions);\n    }\n\n    return Promise.resolve(obj);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nlet errorNS = \"\";\ntry {\n  errorNS = parser.parseFromString(\"INVALID\", \"text/xml\").getElementsByTagName(\"parsererror\")[0]\n    .namespaceURI!;\n} catch (ignored) {\n  // Most browsers will return a document containing <parsererror>, but IE will throw.\n}\n\nfunction throwIfError(dom: Document): void {\n  if (errorNS) {\n    const parserErrors = dom.getElementsByTagNameNS(errorNS, \"parsererror\");\n    if (parserErrors.length) {\n      throw new Error(parserErrors.item(0)!.innerHTML);\n    }\n  }\n}\n\nfunction isElement(node: Node): node is Element {\n  return !!(node as Element).attributes;\n}\n\n/**\n * Get the Element-typed version of the provided Node if the provided node is an element with\n * attributes. If it isn't, then undefined is returned.\n */\nfunction asElementWithAttributes(node: Node): Element | undefined {\n  return isElement(node) && node.hasAttributes() ? node : undefined;\n}\n\nfunction domToObject(node: Node, options: Required<SerializerOptions>): any {\n  let result: any = {};\n\n  const childNodeCount: number = node.childNodes.length;\n\n  const firstChildNode: Node = node.childNodes[0];\n  const onlyChildTextValue: string | undefined =\n    (firstChildNode &&\n      childNodeCount === 1 &&\n      firstChildNode.nodeType === Node.TEXT_NODE &&\n      firstChildNode.nodeValue) ||\n    undefined;\n\n  const elementWithAttributes: Element | undefined = asElementWithAttributes(node);\n  if (elementWithAttributes) {\n    result[XML_ATTRKEY] = {};\n\n    for (let i = 0; i < elementWithAttributes.attributes.length; i++) {\n      const attr = elementWithAttributes.attributes[i];\n      result[XML_ATTRKEY][attr.nodeName] = attr.nodeValue;\n    }\n\n    if (onlyChildTextValue) {\n      result[options.xmlCharKey] = onlyChildTextValue;\n    }\n  } else if (childNodeCount === 0) {\n    result = \"\";\n  } else if (onlyChildTextValue) {\n    result = onlyChildTextValue;\n  }\n\n  if (!onlyChildTextValue) {\n    for (let i = 0; i < childNodeCount; i++) {\n      const child = node.childNodes[i];\n      // Ignore leading/trailing whitespace nodes\n      if (child.nodeType !== Node.TEXT_NODE) {\n        const childObject: any = domToObject(child, options);\n        if (!result[child.nodeName]) {\n          result[child.nodeName] = childObject;\n        } else if (Array.isArray(result[child.nodeName])) {\n          result[child.nodeName].push(childObject);\n        } else {\n          result[child.nodeName] = [result[child.nodeName], childObject];\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nconst serializer = new XMLSerializer();\n\nexport function stringifyXML(content: unknown, opts: SerializerOptions = {}): string {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: opts.rootName ?? \"root\",\n    includeRoot: opts.includeRoot ?? false,\n    xmlCharKey: opts.xmlCharKey ?? XML_CHARKEY\n  };\n  const dom = buildNode(content, updatedOptions.rootName, updatedOptions)[0];\n  return (\n    '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>' + serializer.serializeToString(dom)\n  );\n}\n\nfunction buildAttributes(attrs: { [key: string]: { toString(): string } }): Attr[] {\n  const result = [];\n  for (const key of Object.keys(attrs)) {\n    const attr = doc.createAttribute(key);\n    attr.value = attrs[key].toString();\n    result.push(attr);\n  }\n  return result;\n}\n\nfunction buildNode(obj: any, elementName: string, options: Required<SerializerOptions>): Node[] {\n  if (\n    obj === undefined ||\n    obj === null ||\n    typeof obj === \"string\" ||\n    typeof obj === \"number\" ||\n    typeof obj === \"boolean\"\n  ) {\n    const elem = doc.createElement(elementName);\n    elem.textContent = obj === undefined || obj === null ? \"\" : obj.toString();\n    return [elem];\n  } else if (Array.isArray(obj)) {\n    const result = [];\n    for (const arrayElem of obj) {\n      for (const child of buildNode(arrayElem, elementName, options)) {\n        result.push(child);\n      }\n    }\n    return result;\n  } else if (typeof obj === \"object\") {\n    const elem = doc.createElement(elementName);\n    for (const key of Object.keys(obj)) {\n      if (key === XML_ATTRKEY) {\n        for (const attr of buildAttributes(obj[key])) {\n          elem.attributes.setNamedItem(attr);\n        }\n      } else if (key === options.xmlCharKey) {\n        elem.textContent = obj[key].toString();\n      } else {\n        for (const child of buildNode(obj[key], key, options)) {\n          elem.appendChild(child);\n        }\n      }\n    }\n    return [elem];\n  } else {\n    throw new Error(`Illegal value passed to buildObject: ${obj}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { OperationResponse } from \"../operationResponse\";\nimport { OperationSpec, isStreamOperation } from \"../operationSpec\";\nimport { RestError } from \"../restError\";\nimport { MapperType } from \"../serializer\";\nimport { parseXML } from \"../util/xml\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport { XML_CHARKEY, SerializerOptions } from \"../util/serializer.common\";\n\n/**\n * Options to configure API response deserialization.\n */\nexport interface DeserializationOptions {\n  /**\n   * Configures the expected content types for the deserialization of\n   * JSON and XML response bodies.\n   */\n  expectedContentTypes: DeserializationContentTypes;\n}\n\n/**\n * The content-types that will indicate that an operation response should be deserialized in a\n * particular way.\n */\nexport interface DeserializationContentTypes {\n  /**\n   * The content-types that indicate that an operation response should be deserialized as JSON.\n   * Defaults to [ \"application/json\", \"text/json\" ].\n   */\n  json?: string[];\n\n  /**\n   * The content-types that indicate that an operation response should be deserialized as XML.\n   * Defaults to [ \"application/xml\", \"application/atom+xml\" ].\n   */\n  xml?: string[];\n}\n\n/**\n * Create a new serialization RequestPolicyCreator that will serialized HTTP request bodies as they\n * pass through the HTTP pipeline.\n */\nexport function deserializationPolicy(\n  deserializationContentTypes?: DeserializationContentTypes,\n  parsingOptions?: SerializerOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new DeserializationPolicy(\n        nextPolicy,\n        options,\n        deserializationContentTypes,\n        parsingOptions\n      );\n    }\n  };\n}\n\nexport const defaultJsonContentTypes = [\"application/json\", \"text/json\"];\nexport const defaultXmlContentTypes = [\"application/xml\", \"application/atom+xml\"];\n\nexport const DefaultDeserializationOptions: DeserializationOptions = {\n  expectedContentTypes: {\n    json: defaultJsonContentTypes,\n    xml: defaultXmlContentTypes\n  }\n};\n\n/**\n * A RequestPolicy that will deserialize HTTP response bodies and headers as they pass through the\n * HTTP pipeline.\n */\nexport class DeserializationPolicy extends BaseRequestPolicy {\n  public readonly jsonContentTypes: string[];\n  public readonly xmlContentTypes: string[];\n  public readonly xmlCharKey: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    requestPolicyOptions: RequestPolicyOptions,\n    deserializationContentTypes?: DeserializationContentTypes,\n    parsingOptions: SerializerOptions = {}\n  ) {\n    super(nextPolicy, requestPolicyOptions);\n\n    this.jsonContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.json) || defaultJsonContentTypes;\n    this.xmlContentTypes =\n      (deserializationContentTypes && deserializationContentTypes.xml) || defaultXmlContentTypes;\n    this.xmlCharKey = parsingOptions.xmlCharKey ?? XML_CHARKEY;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(request).then((response: HttpOperationResponse) =>\n      deserializeResponseBody(this.jsonContentTypes, this.xmlContentTypes, response, {\n        xmlCharKey: this.xmlCharKey\n      })\n    );\n  }\n}\n\nfunction getOperationResponse(\n  parsedResponse: HttpOperationResponse\n): undefined | OperationResponse {\n  let result: OperationResponse | undefined;\n  const request: WebResourceLike = parsedResponse.request;\n  const operationSpec: OperationSpec | undefined = request.operationSpec;\n  if (operationSpec) {\n    const operationResponseGetter:\n      | undefined\n      | ((\n          operationSpec: OperationSpec,\n          response: HttpOperationResponse\n        ) => undefined | OperationResponse) = request.operationResponseGetter;\n    if (!operationResponseGetter) {\n      result = operationSpec.responses[parsedResponse.status];\n    } else {\n      result = operationResponseGetter(operationSpec, parsedResponse);\n    }\n  }\n  return result;\n}\n\nfunction shouldDeserializeResponse(parsedResponse: HttpOperationResponse): boolean {\n  const shouldDeserialize: undefined | boolean | ((response: HttpOperationResponse) => boolean) =\n    parsedResponse.request.shouldDeserialize;\n  let result: boolean;\n  if (shouldDeserialize === undefined) {\n    result = true;\n  } else if (typeof shouldDeserialize === \"boolean\") {\n    result = shouldDeserialize;\n  } else {\n    result = shouldDeserialize(parsedResponse);\n  }\n  return result;\n}\n\nexport function deserializeResponseBody(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  response: HttpOperationResponse,\n  options: SerializerOptions = {}\n): Promise<HttpOperationResponse> {\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: options.rootName ?? \"\",\n    includeRoot: options.includeRoot ?? false,\n    xmlCharKey: options.xmlCharKey ?? XML_CHARKEY\n  };\n  return parse(jsonContentTypes, xmlContentTypes, response, updatedOptions).then(\n    (parsedResponse) => {\n      if (!shouldDeserializeResponse(parsedResponse)) {\n        return parsedResponse;\n      }\n\n      const operationSpec = parsedResponse.request.operationSpec;\n      if (!operationSpec || !operationSpec.responses) {\n        return parsedResponse;\n      }\n\n      const responseSpec = getOperationResponse(parsedResponse);\n\n      const { error, shouldReturnResponse } = handleErrorResponse(\n        parsedResponse,\n        operationSpec,\n        responseSpec\n      );\n      if (error) {\n        throw error;\n      } else if (shouldReturnResponse) {\n        return parsedResponse;\n      }\n\n      // An operation response spec does exist for current status code, so\n      // use it to deserialize the response.\n      if (responseSpec) {\n        if (responseSpec.bodyMapper) {\n          let valueToDeserialize: any = parsedResponse.parsedBody;\n          if (operationSpec.isXML && responseSpec.bodyMapper.type.name === MapperType.Sequence) {\n            valueToDeserialize =\n              typeof valueToDeserialize === \"object\"\n                ? valueToDeserialize[responseSpec.bodyMapper.xmlElementName!]\n                : [];\n          }\n          try {\n            parsedResponse.parsedBody = operationSpec.serializer.deserialize(\n              responseSpec.bodyMapper,\n              valueToDeserialize,\n              \"operationRes.parsedBody\",\n              options\n            );\n          } catch (innerError) {\n            const restError = new RestError(\n              `Error ${innerError} occurred in deserializing the responseBody - ${parsedResponse.bodyAsText}`,\n              undefined,\n              parsedResponse.status,\n              parsedResponse.request,\n              parsedResponse\n            );\n            throw restError;\n          }\n        } else if (operationSpec.httpMethod === \"HEAD\") {\n          // head methods never have a body, but we return a boolean to indicate presence/absence of the resource\n          parsedResponse.parsedBody = response.status >= 200 && response.status < 300;\n        }\n\n        if (responseSpec.headersMapper) {\n          parsedResponse.parsedHeaders = operationSpec.serializer.deserialize(\n            responseSpec.headersMapper,\n            parsedResponse.headers.rawHeaders(),\n            \"operationRes.parsedHeaders\",\n            options\n          );\n        }\n      }\n\n      return parsedResponse;\n    }\n  );\n}\n\nfunction isOperationSpecEmpty(operationSpec: OperationSpec): boolean {\n  const expectedStatusCodes = Object.keys(operationSpec.responses);\n  return (\n    expectedStatusCodes.length === 0 ||\n    (expectedStatusCodes.length === 1 && expectedStatusCodes[0] === \"default\")\n  );\n}\n\nfunction handleErrorResponse(\n  parsedResponse: HttpOperationResponse,\n  operationSpec: OperationSpec,\n  responseSpec: OperationResponse | undefined\n): { error: RestError | null; shouldReturnResponse: boolean } {\n  const isSuccessByStatus = 200 <= parsedResponse.status && parsedResponse.status < 300;\n  const isExpectedStatusCode: boolean = isOperationSpecEmpty(operationSpec)\n    ? isSuccessByStatus\n    : !!responseSpec;\n\n  if (isExpectedStatusCode) {\n    if (responseSpec) {\n      if (!responseSpec.isError) {\n        return { error: null, shouldReturnResponse: false };\n      }\n    } else {\n      return { error: null, shouldReturnResponse: false };\n    }\n  }\n\n  const errorResponseSpec = responseSpec ?? operationSpec.responses.default;\n  const initialErrorMessage = isStreamOperation(operationSpec)\n    ? `Unexpected status code: ${parsedResponse.status}`\n    : (parsedResponse.bodyAsText as string);\n\n  const error = new RestError(\n    initialErrorMessage,\n    undefined,\n    parsedResponse.status,\n    parsedResponse.request,\n    parsedResponse\n  );\n\n  // If the item failed but there's no error spec or default spec to deserialize the error,\n  // we should fail so we just throw the parsed response\n  if (!errorResponseSpec) {\n    throw error;\n  }\n\n  const defaultBodyMapper = errorResponseSpec.bodyMapper;\n  const defaultHeadersMapper = errorResponseSpec.headersMapper;\n\n  try {\n    // If error response has a body, try to deserialize it using default body mapper.\n    // Then try to extract error code & message from it\n    if (parsedResponse.parsedBody) {\n      const parsedBody = parsedResponse.parsedBody;\n      let parsedError;\n      if (defaultBodyMapper) {\n        let valueToDeserialize: any = parsedBody;\n        if (operationSpec.isXML && defaultBodyMapper.type.name === MapperType.Sequence) {\n          valueToDeserialize =\n            typeof parsedBody === \"object\" ? parsedBody[defaultBodyMapper.xmlElementName!] : [];\n        }\n        parsedError = operationSpec.serializer.deserialize(\n          defaultBodyMapper,\n          valueToDeserialize,\n          \"error.response.parsedBody\"\n        );\n      }\n\n      const internalError: any = parsedBody.error || parsedError || parsedBody;\n      error.code = internalError.code;\n      if (internalError.message) {\n        error.message = internalError.message;\n      }\n\n      if (defaultBodyMapper) {\n        error.response!.parsedBody = parsedError;\n      }\n    }\n\n    // If error response has headers, try to deserialize it using default header mapper\n    if (parsedResponse.headers && defaultHeadersMapper) {\n      error.response!.parsedHeaders = operationSpec.serializer.deserialize(\n        defaultHeadersMapper,\n        parsedResponse.headers.rawHeaders(),\n        \"operationRes.parsedHeaders\"\n      );\n    }\n  } catch (defaultError) {\n    error.message = `Error \"${defaultError.message}\" occurred in deserializing the responseBody - \"${parsedResponse.bodyAsText}\" for the default response.`;\n  }\n\n  return { error, shouldReturnResponse: false };\n}\n\nfunction parse(\n  jsonContentTypes: string[],\n  xmlContentTypes: string[],\n  operationResponse: HttpOperationResponse,\n  opts: Required<SerializerOptions>\n): Promise<HttpOperationResponse> {\n  const errorHandler = (err: Error & { code: string }): Promise<never> => {\n    const msg = `Error \"${err}\" occurred while parsing the response body - ${operationResponse.bodyAsText}.`;\n    const errCode = err.code || RestError.PARSE_ERROR;\n    const e = new RestError(\n      msg,\n      errCode,\n      operationResponse.status,\n      operationResponse.request,\n      operationResponse\n    );\n    return Promise.reject(e);\n  };\n\n  if (!operationResponse.request.streamResponseBody && operationResponse.bodyAsText) {\n    const text = operationResponse.bodyAsText;\n    const contentType: string = operationResponse.headers.get(\"Content-Type\") || \"\";\n    const contentComponents: string[] = !contentType\n      ? []\n      : contentType.split(\";\").map((component) => component.toLowerCase());\n    if (\n      contentComponents.length === 0 ||\n      contentComponents.some((component) => jsonContentTypes.indexOf(component) !== -1)\n    ) {\n      return new Promise<HttpOperationResponse>((resolve) => {\n        operationResponse.parsedBody = JSON.parse(text);\n        resolve(operationResponse);\n      }).catch(errorHandler);\n    } else if (contentComponents.some((component) => xmlContentTypes.indexOf(component) !== -1)) {\n      return parseXML(text, opts)\n        .then((body) => {\n          operationResponse.parsedBody = body;\n          return operationResponse;\n        })\n        .catch(errorHandler);\n    }\n  }\n\n  return Promise.resolve(operationResponse);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../coreHttp\";\n\nexport const DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport const DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport const DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport const DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n\nexport function isNumber(n: unknown): n is number {\n  return typeof n === \"number\";\n}\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(\n  retryLimit: number,\n  predicate: (response?: HttpOperationResponse, error?: RetryError) => boolean,\n  retryData: RetryData,\n  response?: HttpOperationResponse,\n  error?: RetryError\n): boolean {\n  if (!predicate(response, error)) {\n    return false;\n  }\n\n  return retryData.retryCount < retryLimit;\n}\n\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nexport function updateRetryData(\n  retryOptions: { retryInterval: number; minRetryInterval: number; maxRetryInterval: number },\n  retryData: RetryData = { retryCount: 0, retryInterval: 0 },\n  err?: RetryError\n): RetryData {\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n  const boundedRandDelta =\n    retryOptions.retryInterval * 0.8 +\n    Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    retryOptions.minRetryInterval + incrementDelta,\n    retryOptions.maxRetryInterval\n  );\n\n  return retryData;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport {\n  RetryData,\n  RetryError,\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  isNumber,\n  updateRetryData,\n  shouldRetry\n} from \"../util/exponentialBackoffStrategy\";\nimport { RestError } from \"../restError\";\nimport { logger } from \"../log\";\n\nexport function exponentialRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ExponentialRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\n/**\n * Describes the Retry Mode type. Currently supporting only Exponential.\n */\nexport enum RetryMode {\n  Exponential\n}\n\n/**\n * Options that control how to retry failed requests.\n */\nexport interface RetryOptions {\n  /**\n   * The maximum number of retry attempts.  Defaults to 3.\n   */\n  maxRetries?: number;\n\n  /**\n   * The amount of delay in milliseconds between retry attempts. Defaults to 30000\n   * (30 seconds). The delay increases exponentially with each retry up to a maximum\n   * specified by maxRetryDelayInMs.\n   */\n  retryDelayInMs?: number;\n\n  /**\n   * The maximum delay in milliseconds allowed before retrying an operation. Defaults\n   * to 90000 (90 seconds).\n   */\n  maxRetryDelayInMs?: number;\n\n  /**\n   * Currently supporting only Exponential mode.\n   */\n  mode?: RetryMode;\n}\n\nexport const DefaultRetryOptions: RetryOptions = {\n  maxRetries: DEFAULT_CLIENT_RETRY_COUNT,\n  retryDelayInMs: DEFAULT_CLIENT_RETRY_INTERVAL,\n  maxRetryDelayInMs: DEFAULT_CLIENT_MAX_RETRY_INTERVAL\n};\n\n/**\n * Instantiates a new \"ExponentialRetryPolicyFilter\" instance.\n */\nexport class ExponentialRetryPolicy extends BaseRequestPolicy {\n  /**\n   * The client retry count.\n   */\n  retryCount: number;\n  /**\n   * The client retry interval in milliseconds.\n   */\n  retryInterval: number;\n  /**\n   * The maximum retry interval in milliseconds.\n   */\n  maxRetryInterval: number;\n\n  /**\n   * @param nextPolicy - The next RequestPolicy in the pipeline chain.\n   * @param options - The options for this RequestPolicy.\n   * @param retryCount - The client retry count.\n   * @param retryInterval - The client retry interval, in milliseconds.\n   * @param minRetryInterval - The minimum retry interval, in milliseconds.\n   * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => retry(this, request, response))\n      .catch((error) => retry(this, request, error.response, undefined, error));\n  }\n}\n\nasync function retry(\n  policy: ExponentialRetryPolicy,\n  request: WebResourceLike,\n  response?: HttpOperationResponse,\n  retryData?: RetryData,\n  requestError?: RetryError\n): Promise<HttpOperationResponse> {\n  function shouldPolicyRetry(responseParam?: HttpOperationResponse): boolean {\n    const statusCode = responseParam?.status;\n    if (\n      statusCode === undefined ||\n      (statusCode < 500 && statusCode !== 408) ||\n      statusCode === 501 ||\n      statusCode === 505\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  retryData = updateRetryData(\n    {\n      retryInterval: policy.retryInterval,\n      minRetryInterval: 0,\n      maxRetryInterval: policy.maxRetryInterval\n    },\n    retryData,\n    requestError\n  );\n\n  const isAborted: boolean | undefined = request.abortSignal && request.abortSignal.aborted;\n  if (!isAborted && shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, response)) {\n    logger.info(`Retrying request in ${retryData.retryInterval}`);\n    try {\n      await utils.delay(retryData.retryInterval);\n      const res = await policy._nextPolicy.sendRequest(request.clone());\n      return retry(policy, request, res, retryData);\n    } catch (err) {\n      return retry(policy, request, response, retryData, err);\n    }\n  } else if (isAborted || requestError || !response) {\n    // If the operation failed in the end, return all errors instead of just the last one\n    const err =\n      retryData.error ||\n      new RestError(\n        \"Failed to send the request.\",\n        RestError.REQUEST_SEND_ERROR,\n        response && response.status,\n        response && response.request,\n        response\n      );\n    throw err;\n  } else {\n    return response;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function generateClientRequestIdPolicy(\n  requestIdHeaderName = \"x-ms-client-request-id\"\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\n\nexport class GenerateClientRequestIdPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private _requestIdHeaderName: string\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, request.requestId);\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n * and \"plugins\" section in webpack.testconfig.ts.\n */\n\nimport { TelemetryInfo } from \"./userAgentPolicy\";\n\ninterface NavigatorEx extends Navigator {\n  // oscpu is not yet standards-compliant, but can not be undefined in TypeScript 3.6.2\n  readonly oscpu: string;\n}\n\nexport function getDefaultUserAgentKey(): string {\n  return \"x-ms-useragent\";\n}\n\nexport function getPlatformSpecificData(): TelemetryInfo[] {\n  const navigator = window.navigator as NavigatorEx;\n  const osInfo = {\n    key: \"OS\",\n    value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n  };\n\n  return [osInfo];\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { WebResourceLike } from \"../webResource\";\nimport { getDefaultUserAgentKey, getPlatformSpecificData } from \"./msRestUserAgentPolicy\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport type TelemetryInfo = { key?: string; value?: string };\n\n/**\n * Options for adding user agent details to outgoing requests.\n */\nexport interface UserAgentOptions {\n  /*\n   * String prefix to add to the user agent for outgoing requests.\n   * Defaults to an empty string.\n   */\n  userAgentPrefix?: string;\n}\n\nfunction getRuntimeInfo(): TelemetryInfo[] {\n  const msRestRuntime = {\n    key: \"core-http\",\n    value: Constants.coreHttpVersion\n  };\n\n  return [msRestRuntime];\n}\n\nfunction getUserAgentString(\n  telemetryInfo: TelemetryInfo[],\n  keySeparator = \" \",\n  valueSeparator = \"/\"\n): string {\n  return telemetryInfo\n    .map((info) => {\n      const value = info.value ? `${valueSeparator}${info.value}` : \"\";\n      return `${info.key}${value}`;\n    })\n    .join(keySeparator);\n}\n\nexport const getDefaultUserAgentHeaderName = getDefaultUserAgentKey;\n\nexport function getDefaultUserAgentValue(): string {\n  const runtimeInfo = getRuntimeInfo();\n  const platformSpecificData = getPlatformSpecificData();\n  const userAgent = getUserAgentString(runtimeInfo.concat(platformSpecificData));\n  return userAgent;\n}\n\nexport function userAgentPolicy(userAgentData?: TelemetryInfo): RequestPolicyFactory {\n  const key: string =\n    !userAgentData || userAgentData.key === undefined || userAgentData.key === null\n      ? getDefaultUserAgentKey()\n      : userAgentData.key;\n  const value: string =\n    !userAgentData || userAgentData.value === undefined || userAgentData.value === null\n      ? getDefaultUserAgentValue()\n      : userAgentData.value;\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new UserAgentPolicy(nextPolicy, options, key, value);\n    }\n  };\n}\n\nexport class UserAgentPolicy extends BaseRequestPolicy {\n  constructor(\n    readonly _nextPolicy: RequestPolicy,\n    readonly _options: RequestPolicyOptions,\n    protected headerKey: string,\n    protected headerValue: string\n  ) {\n    super(_nextPolicy, _options);\n  }\n\n  sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    this.addUserAgentHeader(request);\n    return this._nextPolicy.sendRequest(request);\n  }\n\n  addUserAgentHeader(request: WebResourceLike): void {\n    if (!request.headers) {\n      request.headers = new HttpHeaders();\n    }\n\n    if (!request.headers.get(this.headerKey) && this.headerValue) {\n      request.headers.set(this.headerKey, this.headerValue);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\n/**\n * Methods that are allowed to follow redirects 301 and 302\n */\nconst allowedRedirect = [\"GET\", \"HEAD\"];\n\n/**\n * Options for how redirect responses are handled.\n */\nexport interface RedirectOptions {\n  /*\n   * When true, redirect responses are followed.  Defaults to true.\n   */\n  handleRedirects: boolean;\n\n  /*\n   * The maximum number of times the redirect URL will be tried before\n   * failing.  Defaults to 20.\n   */\n  maxRetries?: number;\n}\n\nexport const DefaultRedirectOptions: RedirectOptions = {\n  handleRedirects: true,\n  maxRetries: 20\n};\n\nexport function redirectPolicy(maximumRetries = 20): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RedirectPolicy(nextPolicy, options, maximumRetries);\n    }\n  };\n}\n\nexport class RedirectPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, readonly maxRetries = 20) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request)\n      .then((response) => handleRedirect(this, response, 0));\n  }\n}\n\nfunction handleRedirect(\n  policy: RedirectPolicy,\n  response: HttpOperationResponse,\n  currentRetries: number\n): Promise<HttpOperationResponse> {\n  const { request, status } = response;\n  const locationHeader = response.headers.get(\"location\");\n  if (\n    locationHeader &&\n    (status === 300 ||\n      (status === 301 && allowedRedirect.includes(request.method)) ||\n      (status === 302 && allowedRedirect.includes(request.method)) ||\n      (status === 303 && request.method === \"POST\") ||\n      status === 307) &&\n    (!policy.maxRetries || currentRetries < policy.maxRetries)\n  ) {\n    const builder = URLBuilder.parse(request.url);\n    builder.setPath(locationHeader);\n    request.url = builder.toString();\n\n    // POST request with Status code 303 should be converted into a\n    // redirected GET request if the redirect url is present in the location header\n    if (status === 303) {\n      request.method = \"GET\";\n      delete request.body;\n    }\n\n    return policy._nextPolicy\n      .sendRequest(request)\n      .then((res) => handleRedirect(policy, res, currentRetries + 1));\n  }\n\n  return Promise.resolve(response);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function rpRegistrationPolicy(retryTimeout = 30): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new RPRegistrationPolicy(nextPolicy, options, retryTimeout);\n    }\n  };\n}\n\nexport class RPRegistrationPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    readonly _retryTimeout = 30\n  ) {\n    super(nextPolicy, options);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .then((response) => registerIfNeeded(this, request, response));\n  }\n}\n\nfunction registerIfNeeded(\n  policy: RPRegistrationPolicy,\n  request: WebResourceLike,\n  response: HttpOperationResponse\n): Promise<HttpOperationResponse> {\n  if (response.status === 409) {\n    const rpName = checkRPNotRegisteredError(response.bodyAsText as string);\n    if (rpName) {\n      const urlPrefix = extractSubscriptionUrl(request.url);\n      return (\n        registerRP(policy, urlPrefix, rpName, request)\n          // Autoregistration of ${provider} failed for some reason. We will not return this error\n          // instead will return the initial response with 409 status code back to the user.\n          // do nothing here as we are returning the original response at the end of this method.\n          .catch(() => false)\n          .then((registrationStatus) => {\n            if (registrationStatus) {\n              // Retry the original request. We have to change the x-ms-client-request-id\n              // otherwise Azure endpoint will return the initial 409 (cached) response.\n              request.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n              return policy._nextPolicy.sendRequest(request.clone());\n            }\n            return response;\n          })\n      );\n    }\n  }\n\n  return Promise.resolve(response);\n}\n\n/**\n * Reuses the headers of the original request and url (if specified).\n * @param originalRequest - The original request\n * @param reuseUrlToo - Should the url from the original request be reused as well. Default false.\n * @returns A new request object with desired headers.\n */\nfunction getRequestEssentials(\n  originalRequest: WebResourceLike,\n  reuseUrlToo = false\n): WebResourceLike {\n  const reqOptions: WebResourceLike = originalRequest.clone();\n  if (reuseUrlToo) {\n    reqOptions.url = originalRequest.url;\n  }\n\n  // We have to change the x-ms-client-request-id otherwise Azure endpoint\n  // will return the initial 409 (cached) response.\n  reqOptions.headers.set(\"x-ms-client-request-id\", utils.generateUuid());\n\n  // Set content-type to application/json\n  reqOptions.headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n\n  return reqOptions;\n}\n\n/**\n * Validates the error code and message associated with 409 response status code. If it matches to that of\n * RP not registered then it returns the name of the RP else returns undefined.\n * @param body - The response body received after making the original request.\n * @returns The name of the RP if condition is satisfied else undefined.\n */\nfunction checkRPNotRegisteredError(body: string): string {\n  let result, responseBody;\n  if (body) {\n    try {\n      responseBody = JSON.parse(body);\n    } catch (err) {\n      // do nothing;\n    }\n    if (\n      responseBody &&\n      responseBody.error &&\n      responseBody.error.message &&\n      responseBody.error.code &&\n      responseBody.error.code === \"MissingSubscriptionRegistration\"\n    ) {\n      const matchRes = responseBody.error.message.match(/.*'(.*)'/i);\n      if (matchRes) {\n        result = matchRes.pop();\n      }\n    }\n  }\n  return result;\n}\n\n/**\n * Extracts the first part of the URL, just after subscription:\n * https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param url - The original request url\n * @returns The url prefix as explained above.\n */\nfunction extractSubscriptionUrl(url: string): string {\n  let result;\n  const matchRes = url.match(/.*\\/subscriptions\\/[a-f0-9-]+\\//gi);\n  if (matchRes && matchRes[0]) {\n    result = matchRes[0];\n  } else {\n    throw new Error(`Unable to extract subscriptionId from the given url - ${url}.`);\n  }\n  return result;\n}\n\n/**\n * Registers the given provider.\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param urlPrefix - https://management.azure.com/subscriptions/00000000-0000-0000-0000-000000000000/\n * @param provider - The provider name to be registered.\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @param callback - The callback that handles the RP registration\n */\nfunction registerRP(\n  policy: RPRegistrationPolicy,\n  urlPrefix: string,\n  provider: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const postUrl = `${urlPrefix}providers/${provider}/register?api-version=2016-02-01`;\n  const getUrl = `${urlPrefix}providers/${provider}?api-version=2016-02-01`;\n  const reqOptions = getRequestEssentials(originalRequest);\n  reqOptions.method = \"POST\";\n  reqOptions.url = postUrl;\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((response) => {\n    if (response.status !== 200) {\n      throw new Error(`Autoregistration of ${provider} failed. Please try registering manually.`);\n    }\n    return getRegistrationStatus(policy, getUrl, originalRequest);\n  });\n}\n\n/**\n * Polls the registration status of the provider that was registered. Polling happens at an interval of 30 seconds.\n * Polling will happen till the registrationState property of the response body is \"Registered\".\n * @param policy - The RPRegistrationPolicy this function is being called against.\n * @param url - The request url for polling\n * @param originalRequest - The original request sent by the user that returned a 409 response\n * with a message that the provider is not registered.\n * @returns True if RP Registration is successful.\n */\nfunction getRegistrationStatus(\n  policy: RPRegistrationPolicy,\n  url: string,\n  originalRequest: WebResourceLike\n): Promise<boolean> {\n  const reqOptions: any = getRequestEssentials(originalRequest);\n  reqOptions.url = url;\n  reqOptions.method = \"GET\";\n\n  return policy._nextPolicy.sendRequest(reqOptions).then((res) => {\n    const obj = res.parsedBody as any;\n    if (res.parsedBody && obj.registrationState && obj.registrationState === \"Registered\") {\n      return true;\n    } else {\n      return utils\n        .delay(policy._retryTimeout * 1000)\n        .then(() => getRegistrationStatus(policy, url, originalRequest));\n    }\n  });\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken } from \"@azure/core-auth\";\n\n/**\n * Defines the default token refresh buffer duration.\n */\nexport const TokenRefreshBufferMs = 2 * 60 * 1000; // 2 Minutes\n\n/**\n * Provides a cache for an AccessToken that was that\n * was returned from a TokenCredential.\n */\nexport interface AccessTokenCache {\n  /**\n   * Sets the cached token.\n   *\n   * @param accessToken - The {@link AccessToken} to be cached or null to\n   *        clear the cached token.\n   */\n  setCachedToken(accessToken: AccessToken | undefined): void;\n\n  /**\n   * Returns the cached {@link AccessToken} or undefined if nothing is cached.\n   */\n  getCachedToken(): AccessToken | undefined;\n}\n\n/**\n * Provides an {@link AccessTokenCache} implementation which clears\n * the cached {@link AccessToken}'s after the expiresOnTimestamp has\n * passed.\n */\nexport class ExpiringAccessTokenCache implements AccessTokenCache {\n  private tokenRefreshBufferMs: number;\n  private cachedToken?: AccessToken = undefined;\n\n  /**\n   * Constructs an instance of {@link ExpiringAccessTokenCache} with\n   * an optional expiration buffer time.\n   */\n  constructor(tokenRefreshBufferMs: number = TokenRefreshBufferMs) {\n    this.tokenRefreshBufferMs = tokenRefreshBufferMs;\n  }\n\n  setCachedToken(accessToken: AccessToken | undefined): void {\n    this.cachedToken = accessToken;\n  }\n\n  getCachedToken(): AccessToken | undefined {\n    if (\n      this.cachedToken &&\n      Date.now() + this.tokenRefreshBufferMs >= this.cachedToken.expiresOnTimestamp\n    ) {\n      this.cachedToken = undefined;\n    }\n\n    return this.cachedToken;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccessToken, TokenCredential, GetTokenOptions } from \"@azure/core-auth\";\n\n/**\n * Helps the core-http token authentication policies with requesting a new token if we're not currently waiting for a new token.\n */\nexport class AccessTokenRefresher {\n  private promise: Promise<AccessToken | undefined> | undefined;\n  private lastCalled = 0;\n\n  constructor(\n    private credential: TokenCredential,\n    private scopes: string | string[],\n    private requiredMillisecondsBeforeNewRefresh: number = 30000\n  ) {}\n\n  /**\n   * Returns true if the required milliseconds(defaulted to 30000) have been passed signifying\n   * that we are ready for a new refresh.\n   */\n  public isReady(): boolean {\n    // We're only ready for a new refresh if the required milliseconds have passed.\n    return (\n      !this.lastCalled || Date.now() - this.lastCalled > this.requiredMillisecondsBeforeNewRefresh\n    );\n  }\n\n  /**\n   * Stores the time in which it is called,\n   * then requests a new token,\n   * then sets this.promise to undefined,\n   * then returns the token.\n   */\n  private async getToken(options: GetTokenOptions): Promise<AccessToken | undefined> {\n    this.lastCalled = Date.now();\n    const token = await this.credential.getToken(this.scopes, options);\n    this.promise = undefined;\n    return token || undefined;\n  }\n\n  /**\n   * Requests a new token if we're not currently waiting for a new token.\n   * Returns null if the required time between each call hasn't been reached.\n   */\n  public refresh(options: GetTokenOptions): Promise<AccessToken | undefined> {\n    if (!this.promise) {\n      this.promise = this.getToken(options);\n    }\n\n    return this.promise;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential, GetTokenOptions } from \"@azure/core-auth\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"../policies/requestPolicy\";\nimport { Constants } from \"../util/constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { HttpHeaders } from \"../httpHeaders\";\nimport { WebResourceLike } from \"../webResource\";\nimport { AccessTokenCache, ExpiringAccessTokenCache } from \"../credentials/accessTokenCache\";\nimport { AccessTokenRefresher } from \"../credentials/accessTokenRefresher\";\n\n/**\n * The automated token refresh will only start to happen at the\n * expiration date minus the value of timeBetweenRefreshAttemptsInMs,\n * which is by default 30 seconds.\n */\nconst timeBetweenRefreshAttemptsInMs = 30000;\n\n/**\n * Creates a new BearerTokenAuthenticationPolicy factory.\n *\n * @param credential - The TokenCredential implementation that can supply the bearer token.\n * @param scopes - The scopes for which the bearer token applies.\n */\nexport function bearerTokenAuthenticationPolicy(\n  credential: TokenCredential,\n  scopes: string | string[]\n): RequestPolicyFactory {\n  const tokenCache: AccessTokenCache = new ExpiringAccessTokenCache();\n  const tokenRefresher = new AccessTokenRefresher(\n    credential,\n    scopes,\n    timeBetweenRefreshAttemptsInMs\n  );\n\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new BearerTokenAuthenticationPolicy(nextPolicy, options, tokenCache, tokenRefresher);\n    }\n  };\n}\n\n/**\n *\n * Provides a RequestPolicy that can request a token from a TokenCredential\n * implementation and then apply it to the Authorization header of a request\n * as a Bearer token.\n *\n */\nexport class BearerTokenAuthenticationPolicy extends BaseRequestPolicy {\n  /**\n   * Creates a new BearerTokenAuthenticationPolicy object.\n   *\n   * @param nextPolicy - The next RequestPolicy in the request pipeline.\n   * @param options - Options for this RequestPolicy.\n   * @param credential - The TokenCredential implementation that can supply the bearer token.\n   * @param scopes - The scopes for which the bearer token applies.\n   * @param tokenCache - The cache for the most recent AccessToken returned from the TokenCredential.\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private tokenCache: AccessTokenCache,\n    private tokenRefresher: AccessTokenRefresher\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Applies the Bearer token to the request through the Authorization header.\n   */\n  public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!webResource.headers) webResource.headers = new HttpHeaders();\n    const token = await this.getToken({\n      abortSignal: webResource.abortSignal,\n      tracingOptions: {\n        spanOptions: webResource.spanOptions\n      }\n    });\n    webResource.headers.set(Constants.HeaderConstants.AUTHORIZATION, `Bearer ${token}`);\n    return this._nextPolicy.sendRequest(webResource);\n  }\n\n  /**\n   * Attempts a token update if any other time related conditionals have been reached based on the tokenRefresher class.\n   */\n  private async updateTokenIfNeeded(options: GetTokenOptions): Promise<void> {\n    if (this.tokenRefresher.isReady()) {\n      const accessToken = await this.tokenRefresher.refresh(options);\n      this.tokenCache.setCachedToken(accessToken);\n    }\n  }\n\n  private async getToken(options: GetTokenOptions): Promise<string | undefined> {\n    let accessToken = this.tokenCache.getCachedToken();\n    if (accessToken === undefined) {\n      // Waiting for the next refresh only if the cache is unable to retrieve the access token,\n      // which means that it has expired, or it has never been set.\n      accessToken = await this.tokenRefresher.refresh(options);\n      this.tokenCache.setCachedToken(accessToken);\n    } else {\n      // If we still have a cached access token,\n      // And any other time related conditionals have been reached based on the tokenRefresher class,\n      // then attempt to refresh without waiting.\n      this.updateTokenIfNeeded(options);\n    }\n\n    return accessToken ? accessToken.token : undefined;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport * as utils from \"../util/utils\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\nimport {\n  RetryData,\n  RetryError,\n  shouldRetry,\n  updateRetryData,\n  DEFAULT_CLIENT_MAX_RETRY_INTERVAL,\n  DEFAULT_CLIENT_RETRY_COUNT,\n  DEFAULT_CLIENT_RETRY_INTERVAL,\n  DEFAULT_CLIENT_MIN_RETRY_INTERVAL,\n  isNumber\n} from \"../util/exponentialBackoffStrategy\";\n\nexport function systemErrorRetryPolicy(\n  retryCount?: number,\n  retryInterval?: number,\n  minRetryInterval?: number,\n  maxRetryInterval?: number\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SystemErrorRetryPolicy(\n        nextPolicy,\n        options,\n        retryCount,\n        retryInterval,\n        minRetryInterval,\n        maxRetryInterval\n      );\n    }\n  };\n}\n\n/**\n * @param retryCount - The client retry count.\n * @param retryInterval - The client retry interval, in milliseconds.\n * @param minRetryInterval - The minimum retry interval, in milliseconds.\n * @param maxRetryInterval - The maximum retry interval, in milliseconds.\n */\nexport class SystemErrorRetryPolicy extends BaseRequestPolicy {\n  retryCount: number;\n  retryInterval: number;\n  minRetryInterval: number;\n  maxRetryInterval: number;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryCount?: number,\n    retryInterval?: number,\n    minRetryInterval?: number,\n    maxRetryInterval?: number\n  ) {\n    super(nextPolicy, options);\n    this.retryCount = isNumber(retryCount) ? retryCount : DEFAULT_CLIENT_RETRY_COUNT;\n    this.retryInterval = isNumber(retryInterval) ? retryInterval : DEFAULT_CLIENT_RETRY_INTERVAL;\n    this.minRetryInterval = isNumber(minRetryInterval)\n      ? minRetryInterval\n      : DEFAULT_CLIENT_MIN_RETRY_INTERVAL;\n    this.maxRetryInterval = isNumber(maxRetryInterval)\n      ? maxRetryInterval\n      : DEFAULT_CLIENT_MAX_RETRY_INTERVAL;\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy\n      .sendRequest(request.clone())\n      .catch((error) => retry(this, request, error.response, error));\n  }\n}\n\nasync function retry(\n  policy: SystemErrorRetryPolicy,\n  request: WebResourceLike,\n  operationResponse: HttpOperationResponse,\n  err?: RetryError,\n  retryData?: RetryData\n): Promise<HttpOperationResponse> {\n  retryData = updateRetryData(policy, retryData, err);\n\n  function shouldPolicyRetry(_response?: HttpOperationResponse, error?: RetryError): boolean {\n    if (\n      error &&\n      error.code &&\n      (error.code === \"ETIMEDOUT\" ||\n        error.code === \"ESOCKETTIMEDOUT\" ||\n        error.code === \"ECONNREFUSED\" ||\n        error.code === \"ECONNRESET\" ||\n        error.code === \"ENOENT\")\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  if (shouldRetry(policy.retryCount, shouldPolicyRetry, retryData, operationResponse, err)) {\n    // If previous operation ended with an error and the policy allows a retry, do that\n    try {\n      await utils.delay(retryData.retryInterval);\n      return policy._nextPolicy.sendRequest(request.clone());\n    } catch (nestedErr) {\n      return retry(policy, request, operationResponse, nestedErr, retryData);\n    }\n  } else {\n    if (err) {\n      // If the operation failed in the end, return all errors instead of just the last one\n      return Promise.reject(retryData.error);\n    }\n    return operationResponse;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The format that will be used to join an array of values together for a query parameter value.\n */\nexport enum QueryCollectionFormat {\n  Csv = \",\",\n  Ssv = \" \",\n  Tsv = \"\\t\",\n  Pipes = \"|\",\n  Multi = \"Multi\"\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { Constants } from \"../util/constants\";\nimport { delay } from \"../util/utils\";\n\ntype ResponseHandler = (\n  httpRequest: WebResourceLike,\n  response: HttpOperationResponse\n) => Promise<HttpOperationResponse>;\nconst StatusCodes = Constants.HttpConstants.StatusCodes;\n\nexport function throttlingRetryPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new ThrottlingRetryPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * To learn more, please refer to\n * https://docs.microsoft.com/en-us/azure/azure-resource-manager/resource-manager-request-limits,\n * https://docs.microsoft.com/en-us/azure/azure-subscription-service-limits and\n * https://docs.microsoft.com/en-us/azure/virtual-machines/troubleshooting/troubleshooting-throttling-errors\n */\nexport class ThrottlingRetryPolicy extends BaseRequestPolicy {\n  private _handleResponse: ResponseHandler;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    _handleResponse?: ResponseHandler\n  ) {\n    super(nextPolicy, options);\n    this._handleResponse = _handleResponse || this._defaultResponseHandler;\n  }\n\n  public async sendRequest(httpRequest: WebResourceLike): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(httpRequest.clone()).then((response) => {\n      if (response.status !== StatusCodes.TooManyRequests) {\n        return response;\n      } else {\n        return this._handleResponse(httpRequest, response);\n      }\n    });\n  }\n\n  private async _defaultResponseHandler(\n    httpRequest: WebResourceLike,\n    httpResponse: HttpOperationResponse\n  ): Promise<HttpOperationResponse> {\n    const retryAfterHeader: string | undefined = httpResponse.headers.get(\n      Constants.HeaderConstants.RETRY_AFTER\n    );\n\n    if (retryAfterHeader) {\n      const delayInMs: number | undefined = ThrottlingRetryPolicy.parseRetryAfterHeader(\n        retryAfterHeader\n      );\n      if (delayInMs) {\n        return delay(delayInMs).then((_: any) => this._nextPolicy.sendRequest(httpRequest));\n      }\n    }\n\n    return httpResponse;\n  }\n\n  public static parseRetryAfterHeader(headerValue: string): number | undefined {\n    const retryAfterInSeconds = Number(headerValue);\n    if (Number.isNaN(retryAfterInSeconds)) {\n      return ThrottlingRetryPolicy.parseDateRetryAfterHeader(headerValue);\n    } else {\n      return retryAfterInSeconds * 1000;\n    }\n  }\n\n  public static parseDateRetryAfterHeader(headerValue: string): number | undefined {\n    try {\n      const now: number = Date.now();\n      const date: number = Date.parse(headerValue);\n      const diff = date - now;\n\n      return Number.isNaN(diff) ? undefined : diff;\n    } catch (error) {\n      return undefined;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { ServiceClientCredentials } from \"../credentials/serviceClientCredentials\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\nimport {\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions\n} from \"./requestPolicy\";\n\nexport function signingPolicy(\n  authenticationProvider: ServiceClientCredentials\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new SigningPolicy(nextPolicy, options, authenticationProvider);\n    }\n  };\n}\n\nexport class SigningPolicy extends BaseRequestPolicy {\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    public authenticationProvider: ServiceClientCredentials\n  ) {\n    super(nextPolicy, options);\n  }\n\n  signRequest(request: WebResourceLike): Promise<WebResourceLike> {\n    return this.authenticationProvider.signRequest(request);\n  }\n\n  public sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    return this.signRequest(request).then((nextRequest) =>\n      this._nextPolicy.sendRequest(nextRequest)\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\n/**\n * Options for how HTTP connections should be maintained for future\n * requests.\n */\nexport interface KeepAliveOptions {\n  /*\n   * When true, connections will be kept alive for multiple requests.\n   * Defaults to true.\n   */\n  enable: boolean;\n}\n\nexport const DefaultKeepAliveOptions: KeepAliveOptions = {\n  enable: true\n};\n\nexport function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private readonly keepAliveOptions: KeepAliveOptions\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n",{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/common/Logger.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/getter.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/HttpTextPropagator.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/NoopHttpTextPropagator.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/context/propagation/setter.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/correlation_context/CorrelationContext.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/correlation_context/EntryValue.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/BatchObserverResult.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/BoundInstrument.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Meter.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/MeterProvider.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Metric.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeter.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/NoopMeterProvider.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/Observation.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/metrics/ObserverResult.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/Event.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/instrumentation/Plugin.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/link_context.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/link.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/trace_flags.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopSpan.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracer.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/NoopTracerProvider.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/Sampler.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/SamplingResult.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span_context.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span_kind.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/span.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/SpanOptions.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/status.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/TimedEvent.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/tracer_provider.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/trace/tracer.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/types.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/context.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/NoopContextManager.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/context-base@0.10.2/node_modules/@opentelemetry/context-base/src/index.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/platform/browser/globalThis.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/platform/browser/index.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/global-utils.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/context.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/trace.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/metrics.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/api/propagation.ts"},{"errno":-2,"code":"ENOENT","syscall":"open","path":"/mnt/vss-agent-2.181.0/_work/1/s/common/temp/node_modules/.pnpm/@opentelemetry/api@0.10.2/node_modules/@opentelemetry/api/src/index.ts"},"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Span, SpanContext, Attributes, Status, TraceFlags } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Span that can safely be used without side-effects.\n */\nexport class NoOpSpan implements Span {\n  /**\n   * Returns the SpanContext associated with this Span.\n   */\n  context(): SpanContext {\n    return {\n      spanId: \"\",\n      traceId: \"\",\n      traceFlags: TraceFlags.NONE\n    };\n  }\n\n  /**\n   * Marks the end of Span execution.\n   * @param _endTime The time to use as the Span's end time. Defaults to\n   * the current time.\n   */\n  end(_endTime?: number): void {\n    /* Noop */\n  }\n\n  /**\n   * Sets an attribute on the Span\n   * @param _key the attribute key\n   * @param _value the attribute value\n   */\n  setAttribute(_key: string, _value: unknown): this {\n    return this;\n  }\n\n  /**\n   * Sets attributes on the Span\n   * @param _attributes the attributes to add\n   */\n  setAttributes(_attributes: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Adds an event to the Span\n   * @param _name The name of the event\n   * @param _attributes The associated attributes to add for this event\n   */\n  addEvent(_name: string, _attributes?: Attributes): this {\n    return this;\n  }\n\n  /**\n   * Sets a status on the span. Overrides the default of CanonicalCode.OK.\n   * @param _status The status to set.\n   */\n  setStatus(_status: Status): this {\n    return this;\n  }\n\n  /**\n   * Updates the name of the Span\n   * @param _name the new Span name\n   */\n  updateName(_name: string): this {\n    return this;\n  }\n\n  /**\n   * Returns whether this span will be recorded\n   */\n  isRecording(): boolean {\n    return false;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpSpan } from \"./noOpSpan\";\nimport { Tracer, Span, SpanOptions } from \"@opentelemetry/api\";\n\n/**\n * A no-op implementation of Tracer that can be used when tracing\n * is disabled.\n */\nexport class NoOpTracer implements Tracer {\n  /**\n   * Starts a new Span.\n   * @param _name The name of the span.\n   * @param _options The SpanOptions used during Span creation.\n   */\n  startSpan(_name: string, _options?: SpanOptions): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Returns the current Span from the current context, if available.\n   */\n  getCurrentSpan(): Span {\n    return new NoOpSpan();\n  }\n\n  /**\n   * Executes the given function within the context provided by a Span.\n   * @param _span The span that provides the context.\n   * @param fn The function to be executed.\n   */\n  withSpan<T extends (...args: unknown[]) => ReturnType<T>>(_span: Span, fn: T): ReturnType<T> {\n    return fn();\n  }\n\n  /**\n   * Bind a Span as the target's scope\n   * @param target An object to bind the scope.\n   * @param _span A specific Span to use. Otherwise, use the current one.\n   */\n  bind<T>(target: T, _span?: Span): T {\n    return target;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport function getGlobalObject(): any {\n  return self;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getGlobalObject } from \"./global\";\n\n// V1 = OpenTelemetry 0.1\n// V2 = OpenTelemetry 0.2\n// V3 = OpenTelemetry 0.6.1\nconst GLOBAL_TRACER_VERSION = 3;\n// preview5 shipped with @azure/core-tracing.tracerCache\n// and didn't have smart detection for collisions\nconst GLOBAL_TRACER_SYMBOL = Symbol.for(\"@azure/core-tracing.tracerCache2\");\n\nexport interface TracerCache {\n  version: number;\n  tracer?: Tracer;\n}\n\nlet cache: TracerCache;\n\nfunction loadTracerCache(): void {\n  const globalObj = getGlobalObject();\n  const existingCache: TracerCache = globalObj[GLOBAL_TRACER_SYMBOL];\n  let setGlobalCache = true;\n  if (existingCache) {\n    if (existingCache.version === GLOBAL_TRACER_VERSION) {\n      cache = existingCache;\n    } else {\n      setGlobalCache = false;\n      if (existingCache.tracer) {\n        throw new Error(\n          `Two incompatible versions of @azure/core-tracing have been loaded.\n          This library is ${GLOBAL_TRACER_VERSION}, existing is ${existingCache.version}.`\n        );\n      }\n    }\n  }\n\n  if (!cache) {\n    cache = {\n      tracer: undefined,\n      version: GLOBAL_TRACER_VERSION\n    };\n  }\n  if (setGlobalCache) {\n    globalObj[GLOBAL_TRACER_SYMBOL] = cache;\n  }\n}\n\nexport function getCache(): TracerCache {\n  if (!cache) {\n    loadTracerCache();\n  }\n  return cache;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { NoOpTracer } from \"./tracers/noop/noOpTracer\";\nimport { Tracer } from \"@opentelemetry/api\";\nimport { getCache } from \"./utils/cache\";\n\nlet defaultTracer: Tracer;\n\nfunction getDefaultTracer(): Tracer {\n  if (!defaultTracer) {\n    defaultTracer = new NoOpTracer();\n  }\n  return defaultTracer;\n}\n\n/**\n * Sets the global tracer, enabling tracing for the Azure SDK.\n * @param tracer An OpenTelemetry Tracer instance.\n */\nexport function setTracer(tracer: Tracer): void {\n  const cache = getCache();\n  cache.tracer = tracer;\n}\n\n/**\n * Retrieves the active tracer, or returns a\n * no-op implementation if one is not set.\n */\nexport function getTracer(): Tracer {\n  const cache = getCache();\n  if (!cache.tracer) {\n    return getDefaultTracer();\n  }\n  return cache.tracer;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SpanContext, TraceFlags } from \"../interfaces\";\n\nconst VERSION = \"00\";\n\n/**\n * Generates a `SpanContext` given a `traceparent` header value.\n * @param traceParent Serialized span context data as a `traceparent` header value.\n * @returns The `SpanContext` generated from the `traceparent` value.\n */\nexport function extractSpanContextFromTraceParentHeader(\n  traceParentHeader: string\n): SpanContext | undefined {\n  const parts = traceParentHeader.split(\"-\");\n\n  if (parts.length !== 4) {\n    return;\n  }\n\n  const [version, traceId, spanId, traceOptions] = parts;\n\n  if (version !== VERSION) {\n    return;\n  }\n\n  const traceFlags = parseInt(traceOptions, 16);\n\n  const spanContext: SpanContext = {\n    spanId,\n    traceId,\n    traceFlags\n  };\n\n  return spanContext;\n}\n\n/**\n * Generates a `traceparent` value given a span context.\n * @param spanContext Contains context for a specific span.\n * @returns The `spanContext` represented as a `traceparent` value.\n */\nexport function getTraceParentHeader(spanContext: SpanContext): string | undefined {\n  const missingFields: string[] = [];\n  if (!spanContext.traceId) {\n    missingFields.push(\"traceId\");\n  }\n  if (!spanContext.spanId) {\n    missingFields.push(\"spanId\");\n  }\n\n  if (missingFields.length) {\n    return;\n  }\n\n  const flags = spanContext.traceFlags || TraceFlags.NONE;\n  const hexFlags = flags.toString(16);\n  const traceFlags = hexFlags.length === 1 ? `0${hexFlags}` : hexFlags;\n\n  // https://www.w3.org/TR/trace-context/#traceparent-header-field-values\n  return `${VERSION}-${spanContext.traceId}-${spanContext.spanId}-${traceFlags}`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getTracer, getTraceParentHeader } from \"@azure/core-tracing\";\nimport { SpanOptions, SpanKind } from \"@opentelemetry/api\";\nimport {\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n  BaseRequestPolicy\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { URLBuilder } from \"../url\";\n\nexport interface TracingPolicyOptions {\n  userAgent?: string;\n}\n\nexport function tracingPolicy(tracingOptions: TracingPolicyOptions = {}): RequestPolicyFactory {\n  return {\n    create(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n      return new TracingPolicy(nextPolicy, options, tracingOptions);\n    }\n  };\n}\n\nexport class TracingPolicy extends BaseRequestPolicy {\n  private userAgent?: string;\n\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    tracingOptions: TracingPolicyOptions\n  ) {\n    super(nextPolicy, options);\n    this.userAgent = tracingOptions.userAgent;\n  }\n\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!request.spanOptions || !request.spanOptions.parent) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    // create a new span\n    const tracer = getTracer();\n    const spanOptions: SpanOptions = {\n      ...request.spanOptions,\n      kind: SpanKind.CLIENT\n    };\n    const path = URLBuilder.parse(request.url).getPath() || \"/\";\n    const span = tracer.startSpan(path, spanOptions);\n    span.setAttributes({\n      \"http.method\": request.method,\n      \"http.url\": request.url,\n      requestId: request.requestId\n    });\n\n    if (this.userAgent) {\n      span.setAttribute(\"http.user_agent\", this.userAgent);\n    }\n\n    try {\n      // set headers\n      const spanContext = span.context();\n      const traceParentHeader = getTraceParentHeader(spanContext);\n      if (traceParentHeader) {\n        request.headers.set(\"traceparent\", traceParentHeader);\n        const traceState = spanContext.traceState && spanContext.traceState.serialize();\n        // if tracestate is set, traceparent MUST be set, so only set tracestate after traceparent\n        if (traceState) {\n          request.headers.set(\"tracestate\", traceState);\n        }\n      }\n\n      const response = await this._nextPolicy.sendRequest(request);\n      span.setAttribute(\"http.status_code\", response.status);\n      const serviceRequestId = response.headers.get(\"x-ms-request-id\");\n      if (serviceRequestId) {\n        span.setAttribute(\"serviceRequestId\", serviceRequestId);\n      }\n      span.end();\n      return response;\n    } catch (err) {\n      span.end();\n      throw err;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json\n */\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResource } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nconst DisbleResponseDecompressionNotSupportedInBrowser = new Error(\n  \"DisableResponseDecompressionPolicy is not supported in browser environment\"\n);\n\n/**\n * {@link DisableResponseDecompressionPolicy} is not supported in browser and attempting\n * to use it will results in error being thrown.\n */\nexport function disableResponseDecompressionPolicy(): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw DisbleResponseDecompressionNotSupportedInBrowser;\n    }\n  };\n}\n\nexport class DisableResponseDecompressionPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n\n  public async sendRequest(_request: WebResource): Promise<HttpOperationResponse> {\n    throw DisbleResponseDecompressionNotSupportedInBrowser;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// BaseRequestPolicy has a protected constructor.\n/* eslint-disable @typescript-eslint/no-useless-constructor */\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyOptions,\n  RequestPolicyFactory\n} from \"./requestPolicy\";\nimport { WebResourceLike } from \"../webResource\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\n\nexport function ndJsonPolicy(): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new NdJsonPolicy(nextPolicy, options);\n    }\n  };\n}\n\n/**\n * NdJsonPolicy that formats a JSON array as newline-delimited JSON\n */\nclass NdJsonPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends a request.\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    // There currently isn't a good way to bypass the serializer\n    if (typeof request.body === \"string\" && request.body.startsWith(\"[\")) {\n      const body = JSON.parse(request.body);\n      if (Array.isArray(body)) {\n        request.body = body.map((item) => JSON.stringify(item) + \"\\n\").join(\"\");\n      }\n    }\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpClient } from \"./httpClient\";\nimport { DefaultHttpClient } from \"./defaultHttpClient\";\n\nlet cachedHttpClient: HttpClient | undefined;\n\nexport function getCachedDefaultHttpClient(): HttpClient {\n  if (!cachedHttpClient) {\n    cachedHttpClient = new DefaultHttpClient();\n  }\n\n  return cachedHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential, isTokenCredential } from \"@azure/core-auth\";\nimport { HttpClient } from \"./httpClient\";\nimport { HttpOperationResponse, RestResponse } from \"./httpOperationResponse\";\nimport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nimport { logPolicy, LogPolicyOptions } from \"./policies/logPolicy\";\nimport { OperationArguments } from \"./operationArguments\";\nimport {\n  getPathStringFromParameter,\n  getPathStringFromParameterPath,\n  OperationParameter,\n  ParameterPath\n} from \"./operationParameter\";\nimport { isStreamOperation, OperationSpec } from \"./operationSpec\";\nimport {\n  deserializationPolicy,\n  DeserializationContentTypes,\n  DefaultDeserializationOptions\n} from \"./policies/deserializationPolicy\";\nimport { exponentialRetryPolicy, DefaultRetryOptions } from \"./policies/exponentialRetryPolicy\";\nimport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nimport {\n  userAgentPolicy,\n  getDefaultUserAgentHeaderName,\n  getDefaultUserAgentValue\n} from \"./policies/userAgentPolicy\";\nimport { redirectPolicy, DefaultRedirectOptions } from \"./policies/redirectPolicy\";\nimport {\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions\n} from \"./policies/requestPolicy\";\nimport { rpRegistrationPolicy } from \"./policies/rpRegistrationPolicy\";\nimport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nimport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nimport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nimport { CompositeMapper, DictionaryMapper, Mapper, MapperType, Serializer } from \"./serializer\";\nimport { URLBuilder } from \"./url\";\nimport * as utils from \"./util/utils\";\nimport { stringifyXML } from \"./util/xml\";\nimport {\n  RequestOptionsBase,\n  RequestPrepareOptions,\n  WebResource,\n  WebResourceLike,\n  isWebResourceLike\n} from \"./webResource\";\nimport { OperationResponse } from \"./operationResponse\";\nimport { ServiceCallback, isNode } from \"./util/utils\";\nimport { proxyPolicy } from \"./policies/proxyPolicy\";\nimport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nimport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nimport { signingPolicy } from \"./policies/signingPolicy\";\nimport { logger } from \"./log\";\nimport { InternalPipelineOptions } from \"./pipelineOptions\";\nimport { DefaultKeepAliveOptions, keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nimport { tracingPolicy } from \"./policies/tracingPolicy\";\nimport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nimport { ndJsonPolicy } from \"./policies/ndJsonPolicy\";\nimport { XML_ATTRKEY, SerializerOptions, XML_CHARKEY } from \"./util/serializer.common\";\nimport { URL } from \"./url\";\nimport { getCachedDefaultHttpClient } from \"./httpClientCache\";\n\n/**\n * Options to configure a proxy for outgoing requests (Node.js only).\n */\nexport interface ProxySettings {\n  /**\n   * The proxy's host address.\n   */\n  host: string;\n\n  /**\n   * The proxy host's port.\n   */\n  port: number;\n\n  /**\n   * The user name to authenticate with the proxy, if required.\n   */\n  username?: string;\n\n  /**\n   * The password to authenticate with the proxy, if required.\n   */\n  password?: string;\n}\n\nexport type ProxyOptions = ProxySettings; // Alias ProxySettings as ProxyOptions for future use.\n\n/**\n * Options to be provided while creating the client.\n */\nexport interface ServiceClientOptions {\n  /**\n   * An array of factories which get called to create the RequestPolicy pipeline used to send a HTTP\n   * request on the wire, or a function that takes in the defaultRequestPolicyFactories and returns\n   * the requestPolicyFactories that will be used.\n   */\n  requestPolicyFactories?:\n    | RequestPolicyFactory[]\n    | ((defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | RequestPolicyFactory[]);\n  /**\n   * The HttpClient that will be used to send HTTP requests.\n   */\n  httpClient?: HttpClient;\n  /**\n   * The HttpPipelineLogger that can be used to debug RequestPolicies within the HTTP pipeline.\n   */\n  httpPipelineLogger?: HttpPipelineLogger;\n  /**\n   * If set to true, turn off the default retry policy.\n   */\n  noRetryPolicy?: boolean;\n  /**\n   * Gets or sets the retry timeout in seconds for AutomaticRPRegistration. Default value is 30.\n   */\n  rpRegistrationRetryTimeout?: number;\n  /**\n   * Whether or not to generate a client request ID header for each HTTP request.\n   */\n  generateClientRequestIdHeader?: boolean;\n  /**\n   * Whether to include credentials in CORS requests in the browser.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials for more information.\n   */\n  withCredentials?: boolean;\n  /**\n   * If specified, a GenerateRequestIdPolicy will be added to the HTTP pipeline that will add a\n   * header to all outgoing requests with this header name and a random UUID as the request ID.\n   */\n  clientRequestIdHeaderName?: string;\n  /**\n   * The content-types that will be associated with JSON or XML serialization.\n   */\n  deserializationContentTypes?: DeserializationContentTypes;\n  /**\n   * The header name to use for the telemetry header while sending the request. If this is not\n   * specified, then \"User-Agent\" will be used when running on Node.js and \"x-ms-useragent\" will\n   * be used when running in a browser.\n   */\n  userAgentHeaderName?: string | ((defaultUserAgentHeaderName: string) => string);\n  /**\n   * The string to be set to the telemetry header while sending the request, or a function that\n   * takes in the default user-agent string and returns the user-agent string that will be used.\n   */\n  userAgent?: string | ((defaultUserAgent: string) => string);\n  /**\n   * Proxy settings which will be used for every HTTP request (Node.js only).\n   */\n  proxySettings?: ProxySettings;\n  /**\n   * If specified, will be used to build the BearerTokenAuthenticationPolicy.\n   */\n  credentialScopes?: string | string[];\n}\n\n/**\n * ServiceClient sends service requests and receives responses.\n */\nexport class ServiceClient {\n  /**\n   * If specified, this is the base URI that requests will be made against for this ServiceClient.\n   * If it is not specified, then all OperationSpecs must contain a baseUrl property.\n   */\n  protected baseUri?: string;\n\n  /**\n   * The default request content type for the service.\n   * Used if no requestContentType is present on an OperationSpec.\n   */\n  protected requestContentType?: string;\n\n  /**\n   * The HTTP client that will be used to send requests.\n   */\n  private readonly _httpClient: HttpClient;\n  private readonly _requestPolicyOptions: RequestPolicyOptions;\n\n  private readonly _requestPolicyFactories: RequestPolicyFactory[];\n  private readonly _withCredentials: boolean;\n\n  /**\n   * The ServiceClient constructor\n   * @param credentials - The credentials used for authentication with the service.\n   * @param options - The service client options that govern the behavior of the client.\n   */\n  constructor(\n    credentials?: TokenCredential | ServiceClientCredentials,\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: ServiceClientOptions\n  ) {\n    if (!options) {\n      options = {};\n    }\n\n    this._withCredentials = options.withCredentials || false;\n    this._httpClient = options.httpClient || getCachedDefaultHttpClient();\n    this._requestPolicyOptions = new RequestPolicyOptions(options.httpPipelineLogger);\n\n    let requestPolicyFactories: RequestPolicyFactory[];\n    if (Array.isArray(options.requestPolicyFactories)) {\n      logger.info(\"ServiceClient: using custom request policies\");\n      requestPolicyFactories = options.requestPolicyFactories;\n    } else {\n      let authPolicyFactory: RequestPolicyFactory | undefined = undefined;\n      if (isTokenCredential(credentials)) {\n        logger.info(\n          \"ServiceClient: creating bearer token authentication policy from provided credentials\"\n        );\n        // Create a wrapped RequestPolicyFactory here so that we can provide the\n        // correct scope to the BearerTokenAuthenticationPolicy at the first time\n        // one is requested.  This is needed because generated ServiceClient\n        // implementations do not set baseUri until after ServiceClient's constructor\n        // is finished, leaving baseUri empty at the time when it is needed to\n        // build the correct scope name.\n        const wrappedPolicyFactory: () => RequestPolicyFactory = () => {\n          let bearerTokenPolicyFactory: RequestPolicyFactory | undefined = undefined;\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const serviceClient = this;\n          const serviceClientOptions = options;\n          return {\n            create(nextPolicy: RequestPolicy, createOptions: RequestPolicyOptions): RequestPolicy {\n              const credentialScopes = getCredentialScopes(\n                serviceClientOptions,\n                serviceClient.baseUri\n              );\n\n              if (!credentialScopes) {\n                throw new Error(\n                  `When using credential, the ServiceClient must contain a baseUri or a credentialScopes in ServiceClientOptions. Unable to create a bearerTokenAuthenticationPolicy`\n                );\n              }\n\n              if (bearerTokenPolicyFactory === undefined || bearerTokenPolicyFactory === null) {\n                bearerTokenPolicyFactory = bearerTokenAuthenticationPolicy(\n                  credentials,\n                  credentialScopes\n                );\n              }\n\n              return bearerTokenPolicyFactory.create(nextPolicy, createOptions);\n            }\n          };\n        };\n\n        authPolicyFactory = wrappedPolicyFactory();\n      } else if (credentials && typeof credentials.signRequest === \"function\") {\n        logger.info(\"ServiceClient: creating signing policy from provided credentials\");\n        authPolicyFactory = signingPolicy(credentials);\n      } else if (credentials !== undefined && credentials !== null) {\n        throw new Error(\"The credentials argument must implement the TokenCredential interface\");\n      }\n\n      logger.info(\"ServiceClient: using default request policies\");\n      requestPolicyFactories = createDefaultRequestPolicyFactories(authPolicyFactory, options);\n      if (options.requestPolicyFactories) {\n        // options.requestPolicyFactories can also be a function that manipulates\n        // the default requestPolicyFactories array\n        const newRequestPolicyFactories:\n          | void\n          | RequestPolicyFactory[] = options.requestPolicyFactories(requestPolicyFactories);\n        if (newRequestPolicyFactories) {\n          requestPolicyFactories = newRequestPolicyFactories;\n        }\n      }\n    }\n    this._requestPolicyFactories = requestPolicyFactories;\n  }\n\n  /**\n   * Send the provided httpRequest.\n   */\n  sendRequest(options: RequestPrepareOptions | WebResourceLike): Promise<HttpOperationResponse> {\n    if (options === null || options === undefined || typeof options !== \"object\") {\n      throw new Error(\"options cannot be null or undefined and it must be of type object.\");\n    }\n\n    let httpRequest: WebResourceLike;\n    try {\n      if (isWebResourceLike(options)) {\n        options.validateRequestProperties();\n        httpRequest = options;\n      } else {\n        httpRequest = new WebResource();\n        httpRequest = httpRequest.prepare(options);\n      }\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    let httpPipeline: RequestPolicy = this._httpClient;\n    if (this._requestPolicyFactories && this._requestPolicyFactories.length > 0) {\n      for (let i = this._requestPolicyFactories.length - 1; i >= 0; --i) {\n        httpPipeline = this._requestPolicyFactories[i].create(\n          httpPipeline,\n          this._requestPolicyOptions\n        );\n      }\n    }\n    return httpPipeline.sendRequest(httpRequest);\n  }\n\n  /**\n   * Send an HTTP request that is populated using the provided OperationSpec.\n   * @param operationArguments - The arguments that the HTTP request's templated values will be populated from.\n   * @param operationSpec - The OperationSpec to use to populate the httpRequest.\n   * @param callback - The callback to call when the response is received.\n   */\n  async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n    callback?: ServiceCallback<any>\n  ): Promise<RestResponse> {\n    if (typeof operationArguments.options === \"function\") {\n      callback = operationArguments.options;\n      operationArguments.options = undefined;\n    }\n\n    const serializerOptions = operationArguments.options?.serializerOptions;\n    const httpRequest: WebResourceLike = new WebResource();\n\n    let result: Promise<RestResponse>;\n    try {\n      const baseUri: string | undefined = operationSpec.baseUrl || this.baseUri;\n      if (!baseUri) {\n        throw new Error(\n          \"If operationSpec.baseUrl is not specified, then the ServiceClient must have a baseUri string property that contains the base URL to use.\"\n        );\n      }\n\n      httpRequest.method = operationSpec.httpMethod;\n      httpRequest.operationSpec = operationSpec;\n\n      const requestUrl: URLBuilder = URLBuilder.parse(baseUri);\n      if (operationSpec.path) {\n        requestUrl.appendPath(operationSpec.path);\n      }\n      if (operationSpec.urlParameters && operationSpec.urlParameters.length > 0) {\n        for (const urlParameter of operationSpec.urlParameters) {\n          let urlParameterValue: string = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            urlParameter,\n            operationSpec.serializer\n          );\n          urlParameterValue = operationSpec.serializer.serialize(\n            urlParameter.mapper,\n            urlParameterValue,\n            getPathStringFromParameter(urlParameter),\n            serializerOptions\n          );\n          if (!urlParameter.skipEncoding) {\n            urlParameterValue = encodeURIComponent(urlParameterValue);\n          }\n          requestUrl.replaceAll(\n            `{${urlParameter.mapper.serializedName || getPathStringFromParameter(urlParameter)}}`,\n            urlParameterValue\n          );\n        }\n      }\n      if (operationSpec.queryParameters && operationSpec.queryParameters.length > 0) {\n        for (const queryParameter of operationSpec.queryParameters) {\n          let queryParameterValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            queryParameter,\n            operationSpec.serializer\n          );\n          if (queryParameterValue !== undefined && queryParameterValue !== null) {\n            queryParameterValue = operationSpec.serializer.serialize(\n              queryParameter.mapper,\n              queryParameterValue,\n              getPathStringFromParameter(queryParameter),\n              serializerOptions\n            );\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null\n            ) {\n              if (queryParameter.collectionFormat === QueryCollectionFormat.Multi) {\n                if (queryParameterValue.length === 0) {\n                  // The collection is empty, no need to try serializing the current queryParam\n                  continue;\n                } else {\n                  for (const index in queryParameterValue) {\n                    const item = queryParameterValue[index];\n                    queryParameterValue[index] =\n                      item === undefined || item === null ? \"\" : item.toString();\n                  }\n                }\n              } else if (\n                queryParameter.collectionFormat === QueryCollectionFormat.Ssv ||\n                queryParameter.collectionFormat === QueryCollectionFormat.Tsv\n              ) {\n                queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n              }\n            }\n            if (!queryParameter.skipEncoding) {\n              if (Array.isArray(queryParameterValue)) {\n                for (const index in queryParameterValue) {\n                  if (\n                    queryParameterValue[index] !== undefined &&\n                    queryParameterValue[index] !== null\n                  ) {\n                    queryParameterValue[index] = encodeURIComponent(queryParameterValue[index]);\n                  }\n                }\n              } else {\n                queryParameterValue = encodeURIComponent(queryParameterValue);\n              }\n            }\n            if (\n              queryParameter.collectionFormat !== undefined &&\n              queryParameter.collectionFormat !== null &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Multi &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Ssv &&\n              queryParameter.collectionFormat !== QueryCollectionFormat.Tsv\n            ) {\n              queryParameterValue = queryParameterValue.join(queryParameter.collectionFormat);\n            }\n            requestUrl.setQueryParameter(\n              queryParameter.mapper.serializedName || getPathStringFromParameter(queryParameter),\n              queryParameterValue\n            );\n          }\n        }\n      }\n      httpRequest.url = requestUrl.toString();\n\n      const contentType = operationSpec.contentType || this.requestContentType;\n      if (contentType && operationSpec.requestBody) {\n        httpRequest.headers.set(\"Content-Type\", contentType);\n      }\n\n      if (operationSpec.headerParameters) {\n        for (const headerParameter of operationSpec.headerParameters) {\n          let headerValue: any = getOperationArgumentValueFromParameter(\n            this,\n            operationArguments,\n            headerParameter,\n            operationSpec.serializer\n          );\n          if (headerValue !== undefined && headerValue !== null) {\n            headerValue = operationSpec.serializer.serialize(\n              headerParameter.mapper,\n              headerValue,\n              getPathStringFromParameter(headerParameter),\n              serializerOptions\n            );\n            const headerCollectionPrefix = (headerParameter.mapper as DictionaryMapper)\n              .headerCollectionPrefix;\n            if (headerCollectionPrefix) {\n              for (const key of Object.keys(headerValue)) {\n                httpRequest.headers.set(headerCollectionPrefix + key, headerValue[key]);\n              }\n            } else {\n              httpRequest.headers.set(\n                headerParameter.mapper.serializedName ||\n                  getPathStringFromParameter(headerParameter),\n                headerValue\n              );\n            }\n          }\n        }\n      }\n\n      const options: RequestOptionsBase | undefined = operationArguments.options;\n      if (options) {\n        if (options.customHeaders) {\n          for (const customHeaderName in options.customHeaders) {\n            httpRequest.headers.set(customHeaderName, options.customHeaders[customHeaderName]);\n          }\n        }\n\n        if (options.abortSignal) {\n          httpRequest.abortSignal = options.abortSignal;\n        }\n\n        if (options.timeout) {\n          httpRequest.timeout = options.timeout;\n        }\n\n        if (options.onUploadProgress) {\n          httpRequest.onUploadProgress = options.onUploadProgress;\n        }\n\n        if (options.onDownloadProgress) {\n          httpRequest.onDownloadProgress = options.onDownloadProgress;\n        }\n\n        if (options.spanOptions) {\n          httpRequest.spanOptions = options.spanOptions;\n        }\n\n        if (options.shouldDeserialize !== undefined && options.shouldDeserialize !== null) {\n          httpRequest.shouldDeserialize = options.shouldDeserialize;\n        }\n      }\n\n      httpRequest.withCredentials = this._withCredentials;\n\n      serializeRequestBody(this, httpRequest, operationArguments, operationSpec);\n\n      if (httpRequest.streamResponseBody === undefined || httpRequest.streamResponseBody === null) {\n        httpRequest.streamResponseBody = isStreamOperation(operationSpec);\n      }\n\n      let rawResponse: HttpOperationResponse;\n      let sendRequestError;\n      try {\n        rawResponse = await this.sendRequest(httpRequest);\n      } catch (error) {\n        sendRequestError = error;\n      }\n      if (sendRequestError) {\n        if (sendRequestError.response) {\n          sendRequestError.details = flattenResponse(\n            sendRequestError.response,\n            operationSpec.responses[sendRequestError.statusCode] ||\n              operationSpec.responses[\"default\"]\n          );\n        }\n        result = Promise.reject(sendRequestError);\n      } else {\n        result = Promise.resolve(\n          flattenResponse(rawResponse!, operationSpec.responses[rawResponse!.status])\n        );\n      }\n    } catch (error) {\n      result = Promise.reject(error);\n    }\n\n    const cb = callback;\n    if (cb) {\n      result\n        .then((res) => cb(null, res._response.parsedBody, res._response.request, res._response))\n        .catch((err) => cb(err));\n    }\n\n    return result;\n  }\n}\n\nexport function serializeRequestBody(\n  serviceClient: ServiceClient,\n  httpRequest: WebResourceLike,\n  operationArguments: OperationArguments,\n  operationSpec: OperationSpec\n): void {\n  const serializerOptions = operationArguments.options?.serializerOptions ?? {};\n  const updatedOptions: Required<SerializerOptions> = {\n    rootName: serializerOptions.rootName ?? \"\",\n    includeRoot: serializerOptions.includeRoot ?? false,\n    xmlCharKey: serializerOptions.xmlCharKey ?? XML_CHARKEY\n  };\n\n  const xmlCharKey = serializerOptions.xmlCharKey;\n  if (operationSpec.requestBody && operationSpec.requestBody.mapper) {\n    httpRequest.body = getOperationArgumentValueFromParameter(\n      serviceClient,\n      operationArguments,\n      operationSpec.requestBody,\n      operationSpec.serializer\n    );\n\n    const bodyMapper = operationSpec.requestBody.mapper;\n    const {\n      required,\n      xmlName,\n      xmlElementName,\n      serializedName,\n      xmlNamespace,\n      xmlNamespacePrefix\n    } = bodyMapper;\n    const typeName = bodyMapper.type.name;\n\n    try {\n      if ((httpRequest.body !== undefined && httpRequest.body !== null) || required) {\n        const requestBodyParameterPathString: string = getPathStringFromParameter(\n          operationSpec.requestBody\n        );\n        httpRequest.body = operationSpec.serializer.serialize(\n          bodyMapper,\n          httpRequest.body,\n          requestBodyParameterPathString,\n          updatedOptions\n        );\n\n        const isStream = typeName === MapperType.Stream;\n\n        if (operationSpec.isXML) {\n          const xmlnsKey = xmlNamespacePrefix ? `xmlns:${xmlNamespacePrefix}` : \"xmlns\";\n          const value = getXmlValueWithNamespace(\n            xmlNamespace,\n            xmlnsKey,\n            typeName,\n            httpRequest.body,\n            updatedOptions\n          );\n          if (typeName === MapperType.Sequence) {\n            httpRequest.body = stringifyXML(\n              utils.prepareXMLRootList(\n                value,\n                xmlElementName || xmlName || serializedName!,\n                xmlnsKey,\n                xmlNamespace\n              ),\n              {\n                rootName: xmlName || serializedName,\n                xmlCharKey\n              }\n            );\n          } else if (!isStream) {\n            httpRequest.body = stringifyXML(value, {\n              rootName: xmlName || serializedName,\n              xmlCharKey\n            });\n          }\n        } else if (\n          typeName === MapperType.String &&\n          (operationSpec.contentType?.match(\"text/plain\") || operationSpec.mediaType === \"text\")\n        ) {\n          // the String serializer has validated that request body is a string\n          // so just send the string.\n          return;\n        } else if (!isStream) {\n          httpRequest.body = JSON.stringify(httpRequest.body);\n        }\n      }\n    } catch (error) {\n      throw new Error(\n        `Error \"${error.message}\" occurred in serializing the payload - ${JSON.stringify(\n          serializedName,\n          undefined,\n          \"  \"\n        )}.`\n      );\n    }\n  } else if (operationSpec.formDataParameters && operationSpec.formDataParameters.length > 0) {\n    httpRequest.formData = {};\n    for (const formDataParameter of operationSpec.formDataParameters) {\n      const formDataParameterValue: any = getOperationArgumentValueFromParameter(\n        serviceClient,\n        operationArguments,\n        formDataParameter,\n        operationSpec.serializer\n      );\n      if (formDataParameterValue !== undefined && formDataParameterValue !== null) {\n        const formDataParameterPropertyName: string =\n          formDataParameter.mapper.serializedName || getPathStringFromParameter(formDataParameter);\n        httpRequest.formData[formDataParameterPropertyName] = operationSpec.serializer.serialize(\n          formDataParameter.mapper,\n          formDataParameterValue,\n          getPathStringFromParameter(formDataParameter),\n          updatedOptions\n        );\n      }\n    }\n  }\n}\n\n/**\n * Adds an xml namespace to the xml serialized object if needed, otherwise it just returns the value itself\n */\nfunction getXmlValueWithNamespace(\n  xmlNamespace: string | undefined,\n  xmlnsKey: string,\n  typeName: string,\n  serializedValue: any,\n  options: Required<SerializerOptions>\n): any {\n  // Composite and Sequence schemas already got their root namespace set during serialization\n  // We just need to add xmlns to the other schema types\n  if (xmlNamespace && ![\"Composite\", \"Sequence\", \"Dictionary\"].includes(typeName)) {\n    const result: any = {};\n    result[options.xmlCharKey] = serializedValue;\n    result[XML_ATTRKEY] = { [xmlnsKey]: xmlNamespace };\n    return result;\n  }\n\n  return serializedValue;\n}\n\nfunction getValueOrFunctionResult(\n  value: undefined | string | ((defaultValue: string) => string),\n  defaultValueCreator: () => string\n): string {\n  let result: string;\n  if (typeof value === \"string\") {\n    result = value;\n  } else {\n    result = defaultValueCreator();\n    if (typeof value === \"function\") {\n      result = value(result);\n    }\n  }\n  return result;\n}\n\nfunction createDefaultRequestPolicyFactories(\n  authPolicyFactory: RequestPolicyFactory | undefined,\n  options: ServiceClientOptions\n): RequestPolicyFactory[] {\n  const factories: RequestPolicyFactory[] = [];\n\n  if (options.generateClientRequestIdHeader) {\n    factories.push(generateClientRequestIdPolicy(options.clientRequestIdHeaderName));\n  }\n\n  if (authPolicyFactory) {\n    factories.push(authPolicyFactory);\n  }\n\n  const userAgentHeaderName: string = getValueOrFunctionResult(\n    options.userAgentHeaderName,\n    getDefaultUserAgentHeaderName\n  );\n  const userAgentHeaderValue: string = getValueOrFunctionResult(\n    options.userAgent,\n    getDefaultUserAgentValue\n  );\n  if (userAgentHeaderName && userAgentHeaderValue) {\n    factories.push(userAgentPolicy({ key: userAgentHeaderName, value: userAgentHeaderValue }));\n  }\n  factories.push(redirectPolicy());\n  factories.push(rpRegistrationPolicy(options.rpRegistrationRetryTimeout));\n\n  if (!options.noRetryPolicy) {\n    factories.push(exponentialRetryPolicy());\n    factories.push(systemErrorRetryPolicy());\n    factories.push(throttlingRetryPolicy());\n  }\n\n  factories.push(deserializationPolicy(options.deserializationContentTypes));\n\n  if (isNode) {\n    factories.push(proxyPolicy(options.proxySettings));\n  }\n\n  factories.push(logPolicy({ logger: logger.info }));\n\n  return factories;\n}\n\nexport function createPipelineFromOptions(\n  pipelineOptions: InternalPipelineOptions,\n  authPolicyFactory?: RequestPolicyFactory\n): ServiceClientOptions {\n  const requestPolicyFactories: RequestPolicyFactory[] = [];\n\n  if (pipelineOptions.sendStreamingJson) {\n    requestPolicyFactories.push(ndJsonPolicy());\n  }\n\n  let userAgentValue = undefined;\n  if (pipelineOptions.userAgentOptions && pipelineOptions.userAgentOptions.userAgentPrefix) {\n    const userAgentInfo: string[] = [];\n    userAgentInfo.push(pipelineOptions.userAgentOptions.userAgentPrefix);\n\n    // Add the default user agent value if it isn't already specified\n    // by the userAgentPrefix option.\n    const defaultUserAgentInfo = getDefaultUserAgentValue();\n    if (userAgentInfo.indexOf(defaultUserAgentInfo) === -1) {\n      userAgentInfo.push(defaultUserAgentInfo);\n    }\n\n    userAgentValue = userAgentInfo.join(\" \");\n  }\n\n  const keepAliveOptions = {\n    ...DefaultKeepAliveOptions,\n    ...pipelineOptions.keepAliveOptions\n  };\n\n  const retryOptions = {\n    ...DefaultRetryOptions,\n    ...pipelineOptions.retryOptions\n  };\n\n  const redirectOptions = {\n    ...DefaultRedirectOptions,\n    ...pipelineOptions.redirectOptions\n  };\n\n  if (isNode) {\n    requestPolicyFactories.push(proxyPolicy(pipelineOptions.proxyOptions));\n  }\n\n  const deserializationOptions = {\n    ...DefaultDeserializationOptions,\n    ...pipelineOptions.deserializationOptions\n  };\n\n  const loggingOptions: LogPolicyOptions = {\n    ...pipelineOptions.loggingOptions\n  };\n\n  requestPolicyFactories.push(\n    tracingPolicy({ userAgent: userAgentValue }),\n    keepAlivePolicy(keepAliveOptions),\n    userAgentPolicy({ value: userAgentValue }),\n    generateClientRequestIdPolicy(),\n    deserializationPolicy(deserializationOptions.expectedContentTypes),\n    throttlingRetryPolicy(),\n    systemErrorRetryPolicy(),\n    exponentialRetryPolicy(\n      retryOptions.maxRetries,\n      retryOptions.retryDelayInMs,\n      retryOptions.maxRetryDelayInMs\n    )\n  );\n\n  if (redirectOptions.handleRedirects) {\n    requestPolicyFactories.push(redirectPolicy(redirectOptions.maxRetries));\n  }\n\n  if (authPolicyFactory) {\n    requestPolicyFactories.push(authPolicyFactory);\n  }\n\n  requestPolicyFactories.push(logPolicy(loggingOptions));\n\n  if (isNode && pipelineOptions.decompressResponse === false) {\n    requestPolicyFactories.push(disableResponseDecompressionPolicy());\n  }\n\n  return {\n    httpClient: pipelineOptions.httpClient,\n    requestPolicyFactories\n  };\n}\n\nexport type PropertyParent = { [propertyName: string]: any };\n\n/**\n * Get the property parent for the property at the provided path when starting with the provided\n * parent object.\n */\nexport function getPropertyParent(parent: PropertyParent, propertyPath: string[]): PropertyParent {\n  if (parent && propertyPath) {\n    const propertyPathLength: number = propertyPath.length;\n    for (let i = 0; i < propertyPathLength - 1; ++i) {\n      const propertyName: string = propertyPath[i];\n      if (!parent[propertyName]) {\n        parent[propertyName] = {};\n      }\n      parent = parent[propertyName];\n    }\n  }\n  return parent;\n}\n\nfunction getOperationArgumentValueFromParameter(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameter: OperationParameter,\n  serializer: Serializer\n): any {\n  return getOperationArgumentValueFromParameterPath(\n    serviceClient,\n    operationArguments,\n    parameter.parameterPath,\n    parameter.mapper,\n    serializer\n  );\n}\n\nexport function getOperationArgumentValueFromParameterPath(\n  serviceClient: ServiceClient,\n  operationArguments: OperationArguments,\n  parameterPath: ParameterPath,\n  parameterMapper: Mapper,\n  serializer: Serializer\n): any {\n  let value: any;\n  if (typeof parameterPath === \"string\") {\n    parameterPath = [parameterPath];\n  }\n  const serializerOptions = operationArguments.options?.serializerOptions;\n  if (Array.isArray(parameterPath)) {\n    if (parameterPath.length > 0) {\n      if (parameterMapper.isConstant) {\n        value = parameterMapper.defaultValue;\n      } else {\n        let propertySearchResult: PropertySearchResult = getPropertyFromParameterPath(\n          operationArguments,\n          parameterPath\n        );\n        if (!propertySearchResult.propertyFound) {\n          propertySearchResult = getPropertyFromParameterPath(serviceClient, parameterPath);\n        }\n\n        let useDefaultValue = false;\n        if (!propertySearchResult.propertyFound) {\n          useDefaultValue =\n            parameterMapper.required ||\n            (parameterPath[0] === \"options\" && parameterPath.length === 2);\n        }\n        value = useDefaultValue ? parameterMapper.defaultValue : propertySearchResult.propertyValue;\n      }\n\n      // Serialize just for validation purposes.\n      const parameterPathString: string = getPathStringFromParameterPath(\n        parameterPath,\n        parameterMapper\n      );\n      serializer.serialize(parameterMapper, value, parameterPathString, serializerOptions);\n    }\n  } else {\n    if (parameterMapper.required) {\n      value = {};\n    }\n\n    for (const propertyName in parameterPath) {\n      const propertyMapper: Mapper = (parameterMapper as CompositeMapper).type.modelProperties![\n        propertyName\n      ];\n      const propertyPath: ParameterPath = parameterPath[propertyName];\n      const propertyValue: any = getOperationArgumentValueFromParameterPath(\n        serviceClient,\n        operationArguments,\n        propertyPath,\n        propertyMapper,\n        serializer\n      );\n      // Serialize just for validation purposes.\n      const propertyPathString: string = getPathStringFromParameterPath(\n        propertyPath,\n        propertyMapper\n      );\n      serializer.serialize(propertyMapper, propertyValue, propertyPathString, serializerOptions);\n      if (propertyValue !== undefined && propertyValue !== null) {\n        if (!value) {\n          value = {};\n        }\n        value[propertyName] = propertyValue;\n      }\n    }\n  }\n  return value;\n}\n\ninterface PropertySearchResult {\n  propertyValue?: any;\n  propertyFound: boolean;\n}\n\nfunction getPropertyFromParameterPath(\n  parent: { [parameterName: string]: any },\n  parameterPath: string[]\n): PropertySearchResult {\n  const result: PropertySearchResult = { propertyFound: false };\n  let i = 0;\n  for (; i < parameterPath.length; ++i) {\n    const parameterPathPart: string = parameterPath[i];\n    // Make sure to check inherited properties too, so don't use hasOwnProperty().\n    if (parent !== undefined && parent !== null && parameterPathPart in parent) {\n      parent = parent[parameterPathPart];\n    } else {\n      break;\n    }\n  }\n  if (i === parameterPath.length) {\n    result.propertyValue = parent;\n    result.propertyFound = true;\n  }\n  return result;\n}\n\nexport function flattenResponse(\n  _response: HttpOperationResponse,\n  responseSpec: OperationResponse | undefined\n): RestResponse {\n  const parsedHeaders = _response.parsedHeaders;\n  const bodyMapper = responseSpec && responseSpec.bodyMapper;\n\n  const addOperationResponse = (\n    obj: Record<string, unknown>\n  ): {\n    _response: HttpOperationResponse;\n  } => {\n    return Object.defineProperty(obj, \"_response\", {\n      value: _response\n    });\n  };\n\n  if (bodyMapper) {\n    const typeName = bodyMapper.type.name;\n    if (typeName === \"Stream\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        blobBody: _response.blobBody,\n        readableStreamBody: _response.readableStreamBody\n      });\n    }\n\n    const modelProperties =\n      (typeName === \"Composite\" && (bodyMapper as CompositeMapper).type.modelProperties) || {};\n    const isPageableResponse = Object.keys(modelProperties).some(\n      (k) => modelProperties[k].serializedName === \"\"\n    );\n    if (typeName === \"Sequence\" || isPageableResponse) {\n      const arrayResponse = [...(_response.parsedBody || [])] as RestResponse & any[];\n\n      for (const key of Object.keys(modelProperties)) {\n        if (modelProperties[key].serializedName) {\n          arrayResponse[key] = _response.parsedBody[key];\n        }\n      }\n\n      if (parsedHeaders) {\n        for (const key of Object.keys(parsedHeaders)) {\n          arrayResponse[key] = parsedHeaders[key];\n        }\n      }\n      addOperationResponse(arrayResponse);\n      return arrayResponse;\n    }\n\n    if (typeName === \"Composite\" || typeName === \"Dictionary\") {\n      return addOperationResponse({\n        ...parsedHeaders,\n        ..._response.parsedBody\n      });\n    }\n  }\n\n  if (\n    bodyMapper ||\n    _response.request.method === \"HEAD\" ||\n    utils.isPrimitiveType(_response.parsedBody)\n  ) {\n    // primitive body types and HEAD booleans\n    return addOperationResponse({\n      ...parsedHeaders,\n      body: _response.parsedBody\n    });\n  }\n\n  return addOperationResponse({\n    ...parsedHeaders,\n    ..._response.parsedBody\n  });\n}\n\nfunction getCredentialScopes(\n  options?: ServiceClientOptions,\n  baseUri?: string\n): string | string[] | undefined {\n  if (options?.credentialScopes) {\n    const scopes = options.credentialScopes;\n    return Array.isArray(scopes)\n      ? scopes.map((scope) => new URL(scope).toString())\n      : new URL(scopes).toString();\n  }\n\n  if (baseUri) {\n    return `${baseUri}/.default`;\n  }\n  return undefined;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const encodeUTF8 = (str: string): Uint8Array => new TextEncoder().encode(str);\n\nexport function encodeUTF8fromBase64(str: string): Uint8Array {\n  if (typeof atob !== \"function\") {\n    throw new Error(\"Your browser environment is missing the global `atob` function\");\n  }\n  const binary = atob(str);\n  const bytes = new Uint8Array(binary.length);\n  for (let i = 0; i < binary.length; i++) {\n    bytes[i] = binary.charCodeAt(i);\n  }\n  return bytes;\n}\n\nexport function encodeBase64(value: ArrayBuffer): string {\n  if (typeof btoa !== \"function\") {\n    throw new Error(\"Your browser environment is missing the global `btoa` function\");\n  }\n  const bytes = new Uint8Array(value);\n  let binary = \"\";\n  for (const byte of bytes) {\n    binary += String.fromCharCode(byte);\n  }\n  return btoa(binary);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { encodeUTF8, encodeBase64, encodeUTF8fromBase64 } from \"./encodeUtils.browser\";\n\nconst globalRef: any = globalThis;\n\nconst getCrypto = (): SubtleCrypto => {\n  if (!globalRef) {\n    throw new Error(\"Could not find global\");\n  }\n\n  if (!globalRef.crypto || !globalRef.crypto.subtle) {\n    throw new Error(\"Browser does not support cryptography functions\");\n  }\n\n  return globalRef.crypto.subtle;\n};\n\nexport const shaHash = async (content: string): Promise<string> => {\n  const data = encodeUTF8(content);\n  const hash = await getCrypto().digest(\"SHA-256\", data);\n  return encodeBase64(hash);\n};\n\nexport const shaHMAC = async (secret: string, content: string): Promise<string> => {\n  const importParams: HmacImportParams = { name: \"HMAC\", hash: { name: \"SHA-256\" } };\n  const encodedMessage = encodeUTF8(content);\n  const encodedKey = encodeUTF8fromBase64(secret);\n  const crypto = getCrypto();\n  const cryptoKey = await crypto.importKey(\"raw\", encodedKey, importParams, false, [\"sign\"]);\n  const signature = await crypto.sign(importParams, cryptoKey, encodedMessage);\n  return encodeBase64(signature);\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { KeyCredential } from \"@azure/core-auth\";\nimport {\n  URLBuilder,\n  WebResource,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptionsLike,\n  RequestPolicyFactory,\n  WebResourceLike,\n  HttpOperationResponse,\n  BaseRequestPolicy\n} from \"@azure/core-http\";\nimport { shaHash, shaHMAC } from \"./cryptoUtils\";\n\n/**\n * Creates an HTTP pipeline policy to authenticate a request\n * using an `KeyCredential`\n *\n * @param {KeyCredential} credential The key credential\n */\nexport const createCommunicationAccessKeyCredentialPolicy = (\n  credential: KeyCredential\n): RequestPolicyFactory => {\n  return {\n    create: (nextpolicy: RequestPolicy, options: RequestPolicyOptionsLike) => {\n      return new CommunicationAccessKeyCredentialPolicy(credential, nextpolicy, options);\n    }\n  };\n};\n\n/**\n * CommunicationAccessKeyCredentialPolicy provides a means of signing requests made through\n * the SmsClient.\n */\nclass CommunicationAccessKeyCredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Initializes a new instance of the CommunicationAccessKeyCredential class\n   * using a base64 encoded key.\n   * @param accessKey The base64 encoded key to be used for signing.\n   */\n  constructor(\n    private readonly accessKey: KeyCredential,\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptionsLike\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Signs a request with the provided access key.\n   *\n   * @param {WebResource} webResource The WebResource to be signed.\n   */\n  private async signRequest(webResource: WebResource): Promise<WebResource> {\n    const verb = webResource.method.toUpperCase();\n    const utcNow = new Date().toUTCString();\n    const contentHash = await shaHash(webResource.body || \"\");\n    const dateHeader = isNode ? \"date\" : \"x-ms-date\";\n    const signedHeaders = `${dateHeader};host;x-ms-content-sha256`;\n\n    const url = URLBuilder.parse(webResource.url);\n    const query = url.getQuery();\n    const urlPathAndQuery = query ? `${url.getPath()}?${query}` : url.getPath();\n    const port = url.getPort();\n    const hostAndPort = port ? `${url.getHost()}:${port}` : url.getHost();\n\n    const stringToSign = `${verb}\\n${urlPathAndQuery}\\n${utcNow};${hostAndPort};${contentHash}`;\n    const signature = await shaHMAC(this.accessKey.key, stringToSign);\n\n    if (isNode) {\n      webResource.headers.set(\"Host\", hostAndPort || \"\");\n    }\n\n    webResource.headers.set(dateHeader, utcNow);\n    webResource.headers.set(\"x-ms-content-sha256\", contentHash);\n    webResource.headers.set(\n      \"Authorization\",\n      `HMAC-SHA256 SignedHeaders=${signedHeaders}&Signature=${signature}`\n    );\n\n    return webResource;\n  }\n\n  /**\n   * Signs the request and calls the next policy in the factory.\n   *\n   * @param {WebResourceLike} webResource\n   */\n  public async sendRequest(webResource: WebResourceLike): Promise<HttpOperationResponse> {\n    if (!webResource) {\n      throw new Error(\"webResource cannot be null or undefined\");\n    }\n\n    return this._nextPolicy.sendRequest(await this.signRequest(webResource));\n  }\n}\n","import { isTokenCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { bearerTokenAuthenticationPolicy, RequestPolicyFactory } from \"@azure/core-http\";\nimport { createCommunicationAccessKeyCredentialPolicy } from \"./communicationAccessKeyCredentialPolicy\";\n/**\n * Creates a pipeline policy to authenticate request based\n * on the credential passed in\n *\n * @param {KeyCredential | TokenCredential} credential The key credential\n */\nexport const createCommunicationAuthPolicy = (\n  credential: KeyCredential | TokenCredential\n): RequestPolicyFactory => {\n  if (isTokenCredential(credential)) {\n    return bearerTokenAuthenticationPolicy(credential, \"https://communication.azure.com//.default\");\n  } else {\n    return createCommunicationAccessKeyCredentialPolicy(credential);\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AzureKeyCredential, KeyCredential } from \"@azure/core-auth\";\n/**\n * Represents different properties of connection string\n * using format \"/endpoint=(.*);accesskey=(.*)\"\n */\nexport interface EndpointCredential {\n  /**\n   * The endpoint as string\n   */\n  endpoint: string;\n  /**\n   * The access key represented as a KeyCredential object\n   */\n  credential: KeyCredential;\n}\n\n// TODO: update when connection string format is finalized\nconst CONNECTION_STRING_REGEX = /endpoint=(.*);accesskey=(.*)/i;\n\nconst tryParseConnectionString = (s: string): EndpointCredential | undefined => {\n  const match = s.match(CONNECTION_STRING_REGEX);\n  if (match?.[1] && match[2]) {\n    return { endpoint: match[1], credential: new AzureKeyCredential(match[2]) };\n  }\n  return undefined;\n};\n/**\n * Returns an EndpointCredential to easily access properties of the connection string\n *\n * @param {string} connectionString The connection string to parse\n * @returns {EndpointCredential} Object to access the endpoint and the credenials\n */\nexport const parseConnectionString = (connectionString: string): EndpointCredential => {\n  const parsedConnectionString = tryParseConnectionString(connectionString);\n  if (parsedConnectionString) {\n    return parsedConnectionString;\n  } else {\n    throw new Error(`Invalid connection string ${connectionString}`);\n  }\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { isTokenCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport { URLBuilder } from \"@azure/core-http\";\nimport { parseConnectionString } from \"./connectionString\";\n\nconst isValidEndpoint = (host: string): boolean => {\n  const url = URLBuilder.parse(host);\n\n  return (\n    !!url.getScheme()?.match(/^http[s]?/) &&\n    url.getHost() !== undefined &&\n    url.getHost() !== \"\" &&\n    (url.getPath() === undefined || url.getPath() === \"\" || url.getPath() === \"/\")\n  );\n};\n\nconst assertValidEndpoint = (host: string): void => {\n  if (!isValidEndpoint(host)) {\n    throw new Error(`Invalid endpoint url ${host}`);\n  }\n};\n\n/**\n * Checks whether a value is a KeyCredential.\n *\n * @param {*} credential The credential being checked.\n */\nexport const isKeyCredential = (credential: any): credential is KeyCredential => {\n  return credential && typeof credential.key === \"string\" && credential.getToken === undefined;\n};\n\n/**\n * The URL and credential from parsing the arguments of a communication client.\n */\nexport type UrlWithCredential = {\n  url: string;\n  credential: TokenCredential | KeyCredential;\n};\n\n/**\n * Parses arguments passed to a communication client.\n *\n * @param {string} connectionStringOrUrl\n * @param {*} [credentialOrOptions]\n */\nexport const parseClientArguments = (\n  connectionStringOrUrl: string,\n  credentialOrOptions?: any\n): UrlWithCredential => {\n  if (isKeyCredential(credentialOrOptions) || isTokenCredential(credentialOrOptions)) {\n    assertValidEndpoint(connectionStringOrUrl);\n    return { url: connectionStringOrUrl, credential: credentialOrOptions };\n  } else {\n    const { endpoint: host, credential } = parseConnectionString(connectionStringOrUrl);\n    assertValidEndpoint(host);\n    return { url: host, credential };\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const CommunicationIdentity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentity\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityUpdateRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityUpdateRequest\",\n    modelProperties: {\n      tokensValidFrom: {\n        serializedName: \"tokensValidFrom\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationTokenRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationTokenRequest\",\n    modelProperties: {\n      scopes: {\n        serializedName: \"scopes\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CommunicationIdentityToken: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommunicationIdentityToken\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      token: {\n        serializedName: \"token\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"expiresOn\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationURLParameter,\n  OperationQueryParameter,\n  OperationParameter\n} from \"@azure/core-http\";\nimport {\n  CommunicationIdentityUpdateRequest as CommunicationIdentityUpdateRequestMapper,\n  CommunicationTokenRequest as CommunicationTokenRequestMapper\n} from \"../models/mappers\";\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-07-20-preview2\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/merge-patch+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CommunicationIdentityUpdateRequestMapper\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CommunicationTokenRequestMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { IdentityRestClient } from \"../identityRestClient\";\nimport {\n  CommunicationIdentityCreateResponse,\n  CommunicationIdentityUpdateRequest,\n  CommunicationTokenRequest,\n  CommunicationIdentityIssueTokenResponse\n} from \"../models\";\n\n/**\n * Class representing a CommunicationIdentity.\n */\nexport class CommunicationIdentity {\n  private readonly client: IdentityRestClient;\n\n  /**\n   * Initialize a new instance of the class CommunicationIdentity class.\n   * @param client Reference to the service client\n   */\n  constructor(client: IdentityRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Create a new identity.\n   * @param options The options parameters.\n   */\n  create(options?: coreHttp.OperationOptions): Promise<CommunicationIdentityCreateResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      createOperationSpec\n    ) as Promise<CommunicationIdentityCreateResponse>;\n  }\n\n  /**\n   * Delete the identity, revoke all tokens of the identity and delete all associated data.\n   * @param id Identifier of the identity to be deleted.\n   * @param options The options parameters.\n   */\n  delete(id: string, options?: coreHttp.OperationOptions): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, options: operationOptions },\n      deleteOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Update an Identity.\n   * @param id Identifier of the identity.\n   * @param body The properties of the identity to be updated.\n   * @param options The options parameters.\n   */\n  update(\n    id: string,\n    body: CommunicationIdentityUpdateRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, body, options: operationOptions },\n      updateOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Generate a new token for an identity.\n   * @param id Identifier of the identity to issue token for.\n   * @param body Requesting scopes for the new token.\n   * @param options The options parameters.\n   */\n  issueToken(\n    id: string,\n    body: CommunicationTokenRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<CommunicationIdentityIssueTokenResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { id, body, options: operationOptions },\n      issueTokenOperationSpec\n    ) as Promise<CommunicationIdentityIssueTokenResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentity\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"DELETE\",\n  responses: { 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  serializer\n};\nconst updateOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}\",\n  httpMethod: \"PATCH\",\n  responses: { 204: {} },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst issueTokenOperationSpec: coreHttp.OperationSpec = {\n  path: \"/identities/{id}/token\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CommunicationIdentityToken\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.id],\n  headerParameters: [Parameters.contentType1],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-administration-identity\";\nconst packageVersion = \"1.0.0-beta.4\";\n\nexport class IdentityRestClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the IdentityRestClientContext class.\n   * @param endpoint Auth and Identity endpoint\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2020-07-20-preview2\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { IdentityRestClientContext } from \"./identityRestClientContext\";\nimport { IdentityRestClientOptionalParams } from \"./models\";\n\nclass IdentityRestClient extends IdentityRestClientContext {\n  /**\n   * Initializes a new instance of the IdentityRestClient class.\n   * @param endpoint Auth and Identity endpoint\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: IdentityRestClientOptionalParams) {\n    super(endpoint, options);\n    this.communicationIdentity = new operations.CommunicationIdentity(this);\n  }\n\n  communicationIdentity: operations.CommunicationIdentity;\n}\n\n// Operation Specifications\n\nexport {\n  IdentityRestClient,\n  IdentityRestClientContext,\n  Models as IdentityRestModels,\n  Mappers as IdentityRestMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0-beta.4\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The @azure/logger configuration for this package.\n */\nexport const logger = createClientLogger(\"communication-administration\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions } from \"@azure/core-http\";\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanOptions, SpanKind } from \"@opentelemetry/api\";\n\ntype OperationTracingOptions = OperationOptions[\"tracingOptions\"];\n\n/**\n * Creates a span using the global tracer.\n * @ignore\n * @param name The name of the operation being performed.\n * @param tracingOptions The options for the underlying http request.\n */\nexport function createSpan<T extends OperationOptions>(\n  operationName: string,\n  operationOptions: T\n): { span: Span; updatedOptions: T } {\n  const tracer = getTracer();\n  const tracingOptions = operationOptions.tracingOptions || {};\n  const spanOptions: SpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Communication.${operationName}`, spanOptions);\n\n  span.setAttribute(\"az.namespace\", \"Microsoft.Communication\");\n\n  let newSpanOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newSpanOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span.context(),\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Communication\"\n      }\n    };\n  }\n\n  const newTracingOptions: OperationTracingOptions = {\n    ...tracingOptions,\n    spanOptions: newSpanOptions\n  };\n\n  const newOperationOptions: T = {\n    ...operationOptions,\n    tracingOptions: newTracingOptions\n  };\n\n  return {\n    span,\n    updatedOptions: newOperationOptions\n  };\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse, HttpResponse } from \"@azure/core-http\";\nimport { WithResponse } from \"..\";\n\n/**\n * Attach http response to a model\n */\nexport const attachHttpResponse = <T>(\n  model: T,\n  httpResponse: (HttpResponse & { bodyAsText: string; parsedBody: any }) | HttpOperationResponse\n): WithResponse<T> => {\n  const { parsedBody, bodyAsText, ...r } = httpResponse;\n  return Object.defineProperty(model, \"_response\", {\n    value: r\n  });\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  createCommunicationAuthPolicy,\n  parseClientArguments,\n  isKeyCredential,\n  CommunicationUserIdentifier\n} from \"@azure/communication-common\";\nimport { isTokenCredential, KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  OperationOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { CommunicationIdentity, IdentityRestClient } from \"./generated/src/identityRestClient\";\nimport { SDK_VERSION } from \"./constants\";\nimport { logger } from \"../common/logger\";\nimport { createSpan } from \"../common/tracing\";\nimport {\n  CommunicationIdentityOptions,\n  TokenScope,\n  IssueTokenResponse,\n  CreateUserResponse,\n  CommunicationUserToken\n} from \"./models\";\nimport { VoidResponse } from \"../common/models\";\nimport { attachHttpResponse } from \"../common/mappers\";\n\nconst isCommunicationIdentityOptions = (options: any): options is CommunicationIdentityOptions =>\n  options && !isTokenCredential(options) && !isKeyCredential(options);\n\n/**\n * Client class for interacting with Azure Communication Services User Token Management.\n */\nexport class CommunicationIdentityClient {\n  /**\n   * A reference to the auto-generated UserToken HTTP client.\n   */\n  private readonly client: CommunicationIdentity;\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class.\n   * @param connectionString Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(connectionString: string, options?: CommunicationIdentityOptions);\n\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using an Azure KeyCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential An object that is used to authenticate requests to the service. Use the AzureKeyCredential or `@azure/identity` to create a credential.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: KeyCredential,\n    options?: CommunicationIdentityOptions\n  );\n  /**\n   * Initializes a new instance of the CommunicationIdentity class using a TokenCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net)\n   * @param credential TokenCredential that is used to authenticate requests to the service.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: TokenCredential,\n    options?: CommunicationIdentityOptions\n  );\n  /**\n   * Creates an instance of CommunicationIdentity.\n   *\n   * @param {string} url The endpoint to the service\n   * @param {KeyCredential} credential An object that is used to authenticate requests to the service. Use the AzureKeyCredential or `@azure/identity` to create a credential.\n   * @param {CommunicationIdentityOptions} [options={}] Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | CommunicationIdentityOptions | TokenCredential,\n    maybeOptions: CommunicationIdentityOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isCommunicationIdentityOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n    const libInfo = `azsdk-js-communication-administration/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.client = new IdentityRestClient(url, pipeline).communicationIdentity;\n  }\n\n  /**\n   * Creates a scoped user token.\n   *\n   * @param {CommunicationUser} user The user whose tokens are being revoked.\n   * @param {TokenScope[]} scopes Scopes to include in the token.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async issueToken(\n    user: CommunicationUserIdentifier,\n    scopes: TokenScope[],\n    options: OperationOptions = {}\n  ): Promise<IssueTokenResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-issueToken\", options);\n    try {\n      const { token, id, expiresOn, _response } = await this.client.issueToken(\n        user.communicationUserId,\n        { scopes },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      const results: CommunicationUserToken = {\n        token,\n        expiresOn,\n        user: { communicationUserId: id }\n      };\n      return attachHttpResponse(results, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Revokes all data and tokens created for a user.\n   *\n   * @param {CommunicationUser} user The user whose tokens are being revoked.\n   * @param {Date} tokensValidFrom Tokens issued before this time will be revoked.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async revokeTokens(\n    user: CommunicationUserIdentifier,\n    tokensValidFrom: Date = new Date(),\n    options: OperationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-revokeTokens\", options);\n    try {\n      const { _response } = await this.client.update(\n        user.communicationUserId,\n        {\n          tokensValidFrom\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a single user.\n   *\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async createUser(options: OperationOptions = {}): Promise<CreateUserResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-createUser\", options);\n    try {\n      const { id, _response } = await this.client.create(\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      const user: CommunicationUserIdentifier = { communicationUserId: id };\n      return attachHttpResponse(user, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Triggers revocation event for user and deletes all its data.\n   *\n   * @param {CommunicationUser} user The user being deleted.\n   * @param {OperationOptions} [options={}] Additional options for the request.\n   */\n  public async deleteUser(\n    user: CommunicationUserIdentifier,\n    options: OperationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\"CommunicationIdentity-deleteUser\", options);\n    try {\n      const { _response } = await this.client.delete(\n        user.communicationUserId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\nexport { CommunicationTokenRequest, CommunicationIdentityToken } from \"./generated/src/models\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nif (typeof Symbol === undefined || !(Symbol as any).asyncIterator) {\n  (Symbol as any).asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const AcquiredPhoneNumbers: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcquiredPhoneNumbers\",\n    modelProperties: {\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"AcquiredPhoneNumber\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AcquiredPhoneNumber: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AcquiredPhoneNumber\",\n    modelProperties: {\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      acquiredCapabilities: {\n        serializedName: \"acquiredCapabilities\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      availableCapabilities: {\n        serializedName: \"availableCapabilities\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      assignmentStatus: {\n        serializedName: \"assignmentStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      placeName: {\n        serializedName: \"placeName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      activationState: {\n        serializedName: \"activationState\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorBody\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorBody: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorBody\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsQueries: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsQueries\",\n    modelProperties: {\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsQuery\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsQuery: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsQuery\",\n    modelProperties: {\n      labelId: {\n        serializedName: \"labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      optionsValue: {\n        serializedName: \"optionsValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AreaCodes: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AreaCodes\",\n    modelProperties: {\n      primaryAreaCodes: {\n        serializedName: \"primaryAreaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      secondaryAreaCodes: {\n        serializedName: \"secondaryAreaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdatePhoneNumberCapabilitiesResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdatePhoneNumberCapabilitiesResponse\",\n    modelProperties: {\n      capabilitiesUpdateId: {\n        serializedName: \"capabilitiesUpdateId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      capabilitiesUpdateStatus: {\n        serializedName: \"capabilitiesUpdateStatus\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberCapabilitiesUpdates: {\n        serializedName: \"phoneNumberCapabilitiesUpdates\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"NumberUpdateCapabilities\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const NumberUpdateCapabilities: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberUpdateCapabilities\",\n    modelProperties: {\n      add: {\n        serializedName: \"add\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      remove: {\n        serializedName: \"remove\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateNumberCapabilitiesRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateNumberCapabilitiesRequest\",\n    modelProperties: {\n      phoneNumberCapabilitiesUpdate: {\n        serializedName: \"phoneNumberCapabilitiesUpdate\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"NumberUpdateCapabilities\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateNumberCapabilitiesResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateNumberCapabilitiesResponse\",\n    modelProperties: {\n      capabilitiesUpdateId: {\n        serializedName: \"capabilitiesUpdateId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberCountries: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberCountries\",\n    modelProperties: {\n      countries: {\n        serializedName: \"countries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PhoneNumberCountry\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberCountry: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberCountry\",\n    modelProperties: {\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      countryCode: {\n        serializedName: \"countryCode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfigurationPhoneNumber: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfigurationPhoneNumber\",\n    modelProperties: {\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfigurationResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfigurationResponse\",\n    modelProperties: {\n      pstnConfiguration: {\n        serializedName: \"pstnConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PstnConfiguration\"\n        }\n      }\n    }\n  }\n};\n\nexport const PstnConfiguration: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PstnConfiguration\",\n    modelProperties: {\n      callbackUrl: {\n        serializedName: \"callbackUrl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationId: {\n        serializedName: \"applicationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NumberConfiguration: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NumberConfiguration\",\n    modelProperties: {\n      pstnConfiguration: {\n        serializedName: \"pstnConfiguration\",\n        type: {\n          name: \"Composite\",\n          className: \"PstnConfiguration\"\n        }\n      },\n      phoneNumber: {\n        serializedName: \"phoneNumber\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlanGroups: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlanGroups\",\n    modelProperties: {\n      phonePlanGroups: {\n        serializedName: \"phonePlanGroups\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"PhonePlanGroup\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlanGroup: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlanGroup\",\n    modelProperties: {\n      phonePlanGroupId: {\n        serializedName: \"phonePlanGroupId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberType: {\n        serializedName: \"phoneNumberType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedDescription: {\n        serializedName: \"localizedDescription\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      carrierDetails: {\n        serializedName: \"carrierDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"CarrierDetails\"\n        }\n      },\n      rateInformation: {\n        serializedName: \"rateInformation\",\n        type: {\n          name: \"Composite\",\n          className: \"RateInformation\"\n        }\n      }\n    }\n  }\n};\n\nexport const CarrierDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CarrierDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RateInformation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RateInformation\",\n    modelProperties: {\n      monthlyRate: {\n        serializedName: \"monthlyRate\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currencyType: {\n        defaultValue: \"USD\",\n        isConstant: true,\n        serializedName: \"currencyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rateErrorMessage: {\n        serializedName: \"rateErrorMessage\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlansResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlansResponse\",\n    modelProperties: {\n      phonePlans: {\n        serializedName: \"phonePlans\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"PhonePlan\" } }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhonePlan: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhonePlan\",\n    modelProperties: {\n      phonePlanId: {\n        serializedName: \"phonePlanId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedName: {\n        serializedName: \"localizedName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      locationType: {\n        serializedName: \"locationType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      areaCodes: {\n        serializedName: \"areaCodes\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      capabilities: {\n        serializedName: \"capabilities\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      maximumSearchSize: {\n        serializedName: \"maximumSearchSize\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsResponse\",\n    modelProperties: {\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"LocationOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptions\",\n    modelProperties: {\n      labelId: {\n        serializedName: \"labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labelName: {\n        serializedName: \"labelName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LocationOptionsDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationOptionsDetails\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"LocationOptions\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberRelease: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberRelease\",\n    modelProperties: {\n      releaseId: {\n        serializedName: \"releaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumberReleaseStatusDetails: {\n        serializedName: \"phoneNumberReleaseStatusDetails\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"PhoneNumberReleaseDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberReleaseDetails: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberReleaseDetails\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReleaseRequest: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReleaseRequest\",\n    modelProperties: {\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ReleaseResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReleaseResponse\",\n    modelProperties: {\n      releaseId: {\n        serializedName: \"releaseId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberEntities: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberEntities\",\n    modelProperties: {\n      entities: {\n        serializedName: \"entities\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"PhoneNumberEntity\" }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberEntity: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberEntity\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      quantityObtained: {\n        serializedName: \"quantityObtained\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      focDate: {\n        serializedName: \"focDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const PhoneNumberReservation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PhoneNumberReservation\",\n    modelProperties: {\n      reservationId: {\n        serializedName: \"searchId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phonePlanIds: {\n        serializedName: \"phonePlanIds\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      areaCode: {\n        serializedName: \"areaCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      phoneNumbers: {\n        serializedName: \"phoneNumbers\",\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      reservationExpiryDate: {\n        serializedName: \"reservationExpiryDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateSearchOptions: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateSearchOptions\",\n    modelProperties: {\n      displayName: {\n        constraints: {\n          MaxLength: 255\n        },\n        serializedName: \"displayName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        constraints: {\n          MaxLength: 255\n        },\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      phonePlanIds: {\n        serializedName: \"phonePlanIds\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"String\" } }\n        }\n      },\n      areaCode: {\n        serializedName: \"areaCode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        constraints: {\n          InclusiveMaximum: 2147483647,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      locationOptions: {\n        serializedName: \"locationOptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"LocationOptionsDetails\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateSearchResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateSearchResponse\",\n    modelProperties: {\n      searchId: {\n        serializedName: \"searchId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationURLParameter,\n  OperationQueryParameter,\n  OperationParameter\n} from \"@azure/core-http\";\nimport {\n  LocationOptionsQueries as LocationOptionsQueriesMapper,\n  UpdateNumberCapabilitiesRequest as UpdateNumberCapabilitiesRequestMapper,\n  NumberConfigurationPhoneNumber as NumberConfigurationPhoneNumberMapper,\n  NumberConfiguration as NumberConfigurationMapper,\n  ReleaseRequest as ReleaseRequestMapper,\n  CreateSearchOptions as CreateSearchOptionsMapper\n} from \"../models/mappers\";\n\nexport const endpoint: OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const locale: OperationQueryParameter = {\n  parameterPath: [\"options\", \"locale\"],\n  mapper: {\n    defaultValue: \"en-US\",\n    serializedName: \"locale\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const take: OperationQueryParameter = {\n  parameterPath: [\"options\", \"take\"],\n  mapper: {\n    defaultValue: 100,\n    serializedName: \"take\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-07-20-preview1\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: LocationOptionsQueriesMapper\n};\n\nexport const locationType: OperationQueryParameter = {\n  parameterPath: \"locationType\",\n  mapper: {\n    serializedName: \"locationType\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const countryCode: OperationURLParameter = {\n  parameterPath: \"countryCode\",\n  mapper: {\n    serializedName: \"countryCode\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const phonePlanId: OperationQueryParameter = {\n  parameterPath: \"phonePlanId\",\n  mapper: {\n    serializedName: \"phonePlanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const capabilitiesUpdateId: OperationURLParameter = {\n  parameterPath: \"capabilitiesUpdateId\",\n  mapper: {\n    serializedName: \"capabilitiesUpdateId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: UpdateNumberCapabilitiesRequestMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: NumberConfigurationPhoneNumberMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: NumberConfigurationMapper\n};\n\nexport const includeRateInformation: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeRateInformation\"],\n  mapper: {\n    serializedName: \"includeRateInformation\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const phonePlanGroupId: OperationURLParameter = {\n  parameterPath: \"phonePlanGroupId\",\n  mapper: {\n    serializedName: \"phonePlanGroupId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const phonePlanId1: OperationURLParameter = {\n  parameterPath: \"phonePlanId\",\n  mapper: {\n    serializedName: \"phonePlanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const releaseId: OperationURLParameter = {\n  parameterPath: \"releaseId\",\n  mapper: {\n    serializedName: \"releaseId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ReleaseRequestMapper\n};\n\nexport const searchId: OperationURLParameter = {\n  parameterPath: \"searchId\",\n  mapper: {\n    serializedName: \"searchId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: CreateSearchOptionsMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { PhoneNumberRestClient } from \"../phoneNumberRestClient\";\nimport {\n  PhoneNumberAdministrationGetAllPhoneNumbersOptionalParams,\n  PhoneNumberAdministrationGetAllPhoneNumbersResponse,\n  LocationOptionsQueries,\n  PhoneNumberAdministrationGetAllAreaCodesResponse,\n  PhoneNumberAdministrationGetCapabilitiesUpdateResponse,\n  UpdateNumberCapabilitiesRequest,\n  PhoneNumberAdministrationUpdateCapabilitiesResponse,\n  PhoneNumberAdministrationGetAllSupportedCountriesOptionalParams,\n  PhoneNumberAdministrationGetAllSupportedCountriesResponse,\n  NumberConfigurationPhoneNumber,\n  PhoneNumberAdministrationGetNumberConfigurationResponse,\n  NumberConfiguration,\n  PhoneNumberAdministrationGetPhonePlanGroupsOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanGroupsResponse,\n  PhoneNumberAdministrationGetPhonePlansOptionalParams,\n  PhoneNumberAdministrationGetPhonePlansResponse,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse,\n  PhoneNumberAdministrationGetReleaseByIdResponse,\n  ReleaseRequest,\n  PhoneNumberAdministrationReleasePhoneNumbersResponse,\n  PhoneNumberAdministrationGetAllReleasesOptionalParams,\n  PhoneNumberAdministrationGetAllReleasesResponse,\n  PhoneNumberAdministrationGetSearchByIdResponse,\n  CreateSearchOptions,\n  PhoneNumberAdministrationCreateSearchResponse,\n  PhoneNumberAdministrationGetAllSearchesOptionalParams,\n  PhoneNumberAdministrationGetAllSearchesResponse,\n  PhoneNumberAdministrationGetAllPhoneNumbersNextOptionalParams,\n  PhoneNumberAdministrationGetAllPhoneNumbersNextResponse,\n  PhoneNumberAdministrationGetAllSupportedCountriesNextOptionalParams,\n  PhoneNumberAdministrationGetAllSupportedCountriesNextResponse,\n  PhoneNumberAdministrationGetPhonePlanGroupsNextOptionalParams,\n  PhoneNumberAdministrationGetPhonePlanGroupsNextResponse,\n  PhoneNumberAdministrationGetPhonePlansNextOptionalParams,\n  PhoneNumberAdministrationGetPhonePlansNextResponse,\n  PhoneNumberAdministrationGetAllReleasesNextOptionalParams,\n  PhoneNumberAdministrationGetAllReleasesNextResponse,\n  PhoneNumberAdministrationGetAllSearchesNextOptionalParams,\n  PhoneNumberAdministrationGetAllSearchesNextResponse\n} from \"../models\";\n\n/**\n * Class representing a PhoneNumberAdministration.\n */\nexport class PhoneNumberAdministration {\n  private readonly client: PhoneNumberRestClient;\n\n  /**\n   * Initialize a new instance of the class PhoneNumberAdministration class.\n   * @param client Reference to the service client\n   */\n  constructor(client: PhoneNumberRestClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of the acquired phone numbers.\n   * @param options The options parameters.\n   */\n  getAllPhoneNumbers(\n    options?: PhoneNumberAdministrationGetAllPhoneNumbersOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllPhoneNumbersResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllPhoneNumbersOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllPhoneNumbersResponse>;\n  }\n\n  /**\n   * Gets a list of the supported area codes\n   * @param locationType The type of location information required by the plan.\n   * @param countryCode The ISO 3166-2 country code\n   * @param phonePlanId The plan id from which to search area codes.\n   * @param body Location options for when location type is selection.\n   * @param options The options parameters.\n   */\n  getAllAreaCodes(\n    locationType: string,\n    countryCode: string,\n    phonePlanId: string,\n    body: LocationOptionsQueries,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetAllAreaCodesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      {\n        locationType,\n        countryCode,\n        phonePlanId,\n        body,\n        options: operationOptions\n      },\n      getAllAreaCodesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllAreaCodesResponse>;\n  }\n\n  /**\n   * Get capabilities by capabilities update id.\n   * @param capabilitiesUpdateId\n   * @param options The options parameters.\n   */\n  getCapabilitiesUpdate(\n    capabilitiesUpdateId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetCapabilitiesUpdateResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { capabilitiesUpdateId, options: operationOptions },\n      getCapabilitiesUpdateOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetCapabilitiesUpdateResponse>;\n  }\n\n  /**\n   * Adds or removes phone number capabilities\n   * @param body Represents a numbers capabilities update request\n   * @param options The options parameters.\n   */\n  updateCapabilities(\n    body: UpdateNumberCapabilitiesRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationUpdateCapabilitiesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      updateCapabilitiesOperationSpec\n    ) as Promise<PhoneNumberAdministrationUpdateCapabilitiesResponse>;\n  }\n\n  /**\n   * Gets a list of supported countries\n   * @param options The options parameters.\n   */\n  getAllSupportedCountries(\n    options?: PhoneNumberAdministrationGetAllSupportedCountriesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSupportedCountriesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllSupportedCountriesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSupportedCountriesResponse>;\n  }\n\n  /**\n   * Endpoint for getting number configurations\n   * @param body The phone number whose configuration is to be fetched\n   * @param options The options parameters.\n   */\n  getNumberConfiguration(\n    body: NumberConfigurationPhoneNumber,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetNumberConfigurationResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      getNumberConfigurationOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetNumberConfigurationResponse>;\n  }\n\n  /**\n   * Endpoint for configuring a pstn number\n   * @param body Details of pstn number configuration of the given phoneNumber\n   * @param options The options parameters.\n   */\n  configureNumber(\n    body: NumberConfiguration,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      configureNumberOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Endpoint for unconfiguring a pstn number by removing the configuration\n   * @param body The phone number to un-configure\n   * @param options The options parameters.\n   */\n  unconfigureNumber(\n    body: NumberConfigurationPhoneNumber,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      unconfigureNumberOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Gets a list of phone plan groups for the given country\n   * @param countryCode The ISO 3166-2 country code.\n   * @param options The options parameters.\n   */\n  getPhonePlanGroups(\n    countryCode: string,\n    options?: PhoneNumberAdministrationGetPhonePlanGroupsOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanGroupsResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, options: operationOptions },\n      getPhonePlanGroupsOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanGroupsResponse>;\n  }\n\n  /**\n   * Gets a list of phone plans for a phone plan group\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param options The options parameters.\n   */\n  getPhonePlans(\n    countryCode: string,\n    phonePlanGroupId: string,\n    options?: PhoneNumberAdministrationGetPhonePlansOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlansResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, options: operationOptions },\n      getPhonePlansOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlansResponse>;\n  }\n\n  /**\n   * Gets a list of location options for a phone plan\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param phonePlanId\n   * @param options The options parameters.\n   */\n  getPhonePlanLocationOptions(\n    countryCode: string,\n    phonePlanGroupId: string,\n    phonePlanId: string,\n    options?: PhoneNumberAdministrationGetPhonePlanLocationOptionsOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, phonePlanId, options: operationOptions },\n      getPhonePlanLocationOptionsOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse>;\n  }\n\n  /**\n   * Gets a release by a release id\n   * @param releaseId Represents the release id\n   * @param options The options parameters.\n   */\n  getReleaseById(\n    releaseId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetReleaseByIdResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { releaseId, options: operationOptions },\n      getReleaseByIdOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetReleaseByIdResponse>;\n  }\n\n  /**\n   * Creates a release for the given phone numbers\n   * @param body Config api Release request\n   * @param options The options parameters.\n   */\n  releasePhoneNumbers(\n    body: ReleaseRequest,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationReleasePhoneNumbersResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      releasePhoneNumbersOperationSpec\n    ) as Promise<PhoneNumberAdministrationReleasePhoneNumbersResponse>;\n  }\n\n  /**\n   * Gets a list of all releases\n   * @param options The options parameters.\n   */\n  getAllReleases(\n    options?: PhoneNumberAdministrationGetAllReleasesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllReleasesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllReleasesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllReleasesResponse>;\n  }\n\n  /**\n   * Get search by search id\n   * @param searchId The search id to be searched for\n   * @param options The options parameters.\n   */\n  getSearchById(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationGetSearchByIdResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      getSearchByIdOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetSearchByIdResponse>;\n  }\n\n  /**\n   * Creates a phone number search\n   * @param body Defines the search options\n   * @param options The options parameters.\n   */\n  createSearch(\n    body: CreateSearchOptions,\n    options?: coreHttp.OperationOptions\n  ): Promise<PhoneNumberAdministrationCreateSearchResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { body, options: operationOptions },\n      createSearchOperationSpec\n    ) as Promise<PhoneNumberAdministrationCreateSearchResponse>;\n  }\n\n  /**\n   * Gets a list of all searches\n   * @param options The options parameters.\n   */\n  getAllSearches(\n    options?: PhoneNumberAdministrationGetAllSearchesOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSearchesResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { options: operationOptions },\n      getAllSearchesOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSearchesResponse>;\n  }\n\n  /**\n   * Cancels the search. This means existing numbers in the search will be made available.\n   * @param searchId The search id to be canceled\n   * @param options The options parameters.\n   */\n  cancelSearch(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      cancelSearchOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * Purchases the phone number search.\n   * @param searchId The search id to be purchased\n   * @param options The options parameters.\n   */\n  purchaseSearch(\n    searchId: string,\n    options?: coreHttp.OperationOptions\n  ): Promise<coreHttp.RestResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { searchId, options: operationOptions },\n      purchaseSearchOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * GetAllPhoneNumbersNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllPhoneNumbers method.\n   * @param options The options parameters.\n   */\n  getAllPhoneNumbersNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllPhoneNumbersNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllPhoneNumbersNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllPhoneNumbersNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllPhoneNumbersNextResponse>;\n  }\n\n  /**\n   * GetAllSupportedCountriesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllSupportedCountries\n   *                 method.\n   * @param options The options parameters.\n   */\n  getAllSupportedCountriesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllSupportedCountriesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSupportedCountriesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllSupportedCountriesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSupportedCountriesNextResponse>;\n  }\n\n  /**\n   * GetPhonePlanGroupsNext\n   * @param countryCode The ISO 3166-2 country code.\n   * @param nextLink The nextLink from the previous successful call to the GetPhonePlanGroups method.\n   * @param options The options parameters.\n   */\n  getPhonePlanGroupsNext(\n    countryCode: string,\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetPhonePlanGroupsNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlanGroupsNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, nextLink, options: operationOptions },\n      getPhonePlanGroupsNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlanGroupsNextResponse>;\n  }\n\n  /**\n   * GetPhonePlansNext\n   * @param countryCode The ISO 3166-2 country code.\n   * @param phonePlanGroupId\n   * @param nextLink The nextLink from the previous successful call to the GetPhonePlans method.\n   * @param options The options parameters.\n   */\n  getPhonePlansNext(\n    countryCode: string,\n    phonePlanGroupId: string,\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetPhonePlansNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetPhonePlansNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { countryCode, phonePlanGroupId, nextLink, options: operationOptions },\n      getPhonePlansNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetPhonePlansNextResponse>;\n  }\n\n  /**\n   * GetAllReleasesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllReleases method.\n   * @param options The options parameters.\n   */\n  getAllReleasesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllReleasesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllReleasesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllReleasesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllReleasesNextResponse>;\n  }\n\n  /**\n   * GetAllSearchesNext\n   * @param nextLink The nextLink from the previous successful call to the GetAllSearches method.\n   * @param options The options parameters.\n   */\n  getAllSearchesNext(\n    nextLink: string,\n    options?: PhoneNumberAdministrationGetAllSearchesNextOptionalParams\n  ): Promise<PhoneNumberAdministrationGetAllSearchesNextResponse> {\n    const operationOptions: coreHttp.RequestOptionsBase = coreHttp.operationOptionsToRequestOptionsBase(\n      options || {}\n    );\n    return this.client.sendOperationRequest(\n      { nextLink, options: operationOptions },\n      getAllSearchesNextOperationSpec\n    ) as Promise<PhoneNumberAdministrationGetAllSearchesNextResponse>;\n  }\n}\n// Operation Specifications\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst getAllPhoneNumbersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/phonenumbers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcquiredPhoneNumbers\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getAllAreaCodesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries/{countryCode}/areacodes\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AreaCodes\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion, Parameters.locationType, Parameters.phonePlanId],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getCapabilitiesUpdateOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/capabilities/{capabilitiesUpdateId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdatePhoneNumberCapabilitiesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.capabilitiesUpdateId],\n  serializer\n};\nconst updateCapabilitiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/capabilities\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateNumberCapabilitiesResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllSupportedCountriesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberCountries\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getNumberConfigurationOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NumberConfigurationResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst configureNumberOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration/configure\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body3,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst unconfigureNumberOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/numberconfiguration/unconfigure\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getPhonePlanGroupsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlanGroups\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.locale,\n    Parameters.skip,\n    Parameters.take,\n    Parameters.apiVersion,\n    Parameters.includeRateInformation\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode],\n  serializer\n};\nconst getPhonePlansOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups/{phonePlanGroupId}/phoneplans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlansResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode, Parameters.phonePlanGroupId],\n  serializer\n};\nconst getPhonePlanLocationOptionsOperationSpec: coreHttp.OperationSpec = {\n  path:\n    \"/administration/phonenumbers/countries/{countryCode}/phoneplangroups/{phonePlanGroupId}/phoneplans/{phonePlanId}/locationoptions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocationOptionsResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.countryCode,\n    Parameters.phonePlanGroupId,\n    Parameters.phonePlanId1\n  ],\n  serializer\n};\nconst getReleaseByIdOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases/{releaseId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberRelease\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.releaseId],\n  serializer\n};\nconst releasePhoneNumbersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReleaseResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body4,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllReleasesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/releases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst getSearchByIdOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberReservation\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst createSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches\",\n  httpMethod: \"POST\",\n  responses: {\n    201: {\n      bodyMapper: Mappers.CreateSearchResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  requestBody: Parameters.body5,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getAllSearchesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint],\n  serializer\n};\nconst cancelSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}/cancel\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst purchaseSearchOperationSpec: coreHttp.OperationSpec = {\n  path: \"/administration/phonenumbers/searches/{searchId}/purchase\",\n  httpMethod: \"POST\",\n  responses: {\n    202: {},\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.searchId],\n  serializer\n};\nconst getAllPhoneNumbersNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AcquiredPhoneNumbers\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getAllSupportedCountriesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberCountries\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getPhonePlanGroupsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlanGroups\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [\n    Parameters.locale,\n    Parameters.skip,\n    Parameters.take,\n    Parameters.apiVersion,\n    Parameters.includeRateInformation\n  ],\n  urlParameters: [Parameters.endpoint, Parameters.countryCode, Parameters.nextLink],\n  serializer\n};\nconst getPhonePlansNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhonePlansResponse\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.locale, Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [\n    Parameters.endpoint,\n    Parameters.countryCode,\n    Parameters.phonePlanGroupId,\n    Parameters.nextLink\n  ],\n  serializer\n};\nconst getAllReleasesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\nconst getAllSearchesNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PhoneNumberEntities\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  queryParameters: [Parameters.skip, Parameters.take, Parameters.apiVersion],\n  urlParameters: [Parameters.endpoint, Parameters.nextLink],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { PhoneNumberRestClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-communication-administration-phoneNumber\";\nconst packageVersion = \"1.0.0-beta.4\";\n\nexport class PhoneNumberRestClientContext extends coreHttp.ServiceClient {\n  endpoint: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the PhoneNumberRestClientContext class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: PhoneNumberRestClientOptionalParams) {\n    if (endpoint === undefined) {\n      throw new Error(\"'endpoint' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{endpoint}\";\n\n    // Parameter assignments\n    this.endpoint = endpoint;\n\n    // Assigning values to Constant parameters\n    this.apiVersion = options.apiVersion || \"2020-07-20-preview1\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as operations from \"./operations\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport { PhoneNumberRestClientContext } from \"./phoneNumberRestClientContext\";\nimport { PhoneNumberRestClientOptionalParams } from \"./models\";\n\nclass PhoneNumberRestClient extends PhoneNumberRestClientContext {\n  /**\n   * Initializes a new instance of the PhoneNumberRestClient class.\n   * @param endpoint The endpoint of the Azure Communication resource.\n   * @param options The parameter options\n   */\n  constructor(endpoint: string, options?: PhoneNumberRestClientOptionalParams) {\n    super(endpoint, options);\n    this.phoneNumberAdministration = new operations.PhoneNumberAdministration(this);\n  }\n\n  phoneNumberAdministration: operations.PhoneNumberAdministration;\n}\n\n// Operation Specifications\n\nexport {\n  PhoneNumberRestClient,\n  PhoneNumberRestClientContext,\n  Models as PhoneNumberRestModels,\n  Mappers as PhoneNumberRestMappers\n};\nexport * from \"./operations\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"1.0.0-beta.4\";\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PollOperation, PollOperationState } from \"./pollOperation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\n\n/**\n * CancelOnProgress is used as the return value of a Poller's onProgress method.\n * When a user invokes onProgress, they're required to pass in a function that will be\n * called as a callback with the new data received each time the poll operation is updated.\n * onProgress returns a function that will prevent any further update to reach the original callback.\n */\nexport type CancelOnProgress = () => void;\n\n/**\n * PollProgressCallback<TState> is the type of the callback functions sent to onProgress.\n * These functions will receive a TState that is defined by your implementation of\n * the Poller class.\n */\nexport type PollProgressCallback<TState> = (state: TState) => void;\n\n/**\n * When a poller is manually stopped through the `stopPolling` method,\n * the poller will be rejected with an instance of the PollerStoppedError.\n */\nexport class PollerStoppedError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerStoppedError\";\n    Object.setPrototypeOf(this, PollerStoppedError.prototype);\n  }\n}\n\n/**\n * When a poller is cancelled through the `cancelOperation` method,\n * the poller will be rejected with an instance of the PollerCancelledError.\n */\nexport class PollerCancelledError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = \"PollerCancelledError\";\n    Object.setPrototypeOf(this, PollerCancelledError.prototype);\n  }\n}\n\n/**\n * Abstract representation of a poller, intended to expose just the minimal API that the user needs to work with.\n */\n// eslint-disable-next-line no-use-before-define\nexport interface PollerLike<TState extends PollOperationState<TResult>, TResult> {\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   */\n  poll(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  pollUntilDone(): Promise<TResult>;\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  onProgress(callback: (state: TState) => void): CancelOnProgress;\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  isDone(): boolean;\n  /**\n   * Stops the poller. After this, no manual or automated requests can be sent.\n   */\n  stopPolling(): void;\n  /**\n   * Returns true if the poller is stopped.\n   */\n  isStopped(): boolean;\n  /**\n   * Attempts to cancel the underlying operation.\n   */\n  cancelOperation(options?: { abortSignal?: AbortSignalLike }): Promise<void>;\n  /**\n   * Returns the state of the operation.\n   * The TState defined in PollerLike can be a subset of the TState defined in\n   * the Poller implementation.\n   */\n  getOperationState(): TState;\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  getResult(): TResult | undefined;\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  toString(): string;\n}\n\n/**\n * A class that represents the definition of a program that polls through consecutive requests\n * until it reaches a state of completion.\n *\n * A poller can be executed manually, by polling request by request by calling to the `poll()` method repeatedly, until its operation is completed.\n * It also provides a way to wait until the operation completes, by calling `pollUntilDone()` and waiting until the operation finishes.\n * Pollers can also request the cancellation of the ongoing process to whom is providing the underlying long running operation.\n *\n * ```ts\n * const poller = new MyPoller();\n *\n * // Polling just once:\n * await poller.poll();\n *\n * // We can try to cancel the request here, by calling:\n * //\n * //     await poller.cancelOperation();\n * //\n *\n * // Getting the final result:\n * const result = await poller.pollUntilDone();\n * ```\n *\n * The Poller is defined by two types, a type representing the state of the poller, which\n * must include a basic set of properties from `PollOperationState<TResult>`,\n * and a return type defined by `TResult`, which can be anything.\n *\n * The Poller class implements the `PollerLike` interface, which allows poller implementations to avoid having\n * to export the Poller's class directly, and instead only export the already instantiated poller with the PollerLike type.\n *\n * ```ts\n * class Client {\n *   public async makePoller: PollerLike<MyOperationState, MyResult> {\n *     const poller = new MyPoller({});\n *     // It might be preferred to return the poller after the first request is made,\n *     // so that some information can be obtained right away.\n *     await poller.poll();\n *     return poller;\n *   }\n * }\n *\n * const poller: PollerLike<MyOperationState, MyResult> = myClient.makePoller();\n * ```\n *\n * A poller can be created through its constructor, then it can be polled until it's completed.\n * At any point in time, the state of the poller can be obtained without delay through the getOperationState method.\n * At any point in time, the intermediate forms of the result type can be requested without delay.\n * Once the underlying operation is marked as completed, the poller will stop and the final value will be returned.\n *\n * ```ts\n * const poller = myClient.makePoller();\n * const state: MyOperationState = poller.getOperationState();\n *\n * // The intermediate result can be obtained at any time.\n * const result: MyResult | undefined = poller.getResult();\n *\n * // The final result can only be obtained after the poller finishes.\n * const result: MyResult = await poller.pollUntilDone();\n * ```\n *\n */\n// eslint-disable-next-line no-use-before-define\nexport abstract class Poller<TState extends PollOperationState<TResult>, TResult>\n  implements PollerLike<TState, TResult> {\n  private stopped: boolean = true;\n  private resolve?: (value: TResult) => void;\n  private reject?: (error: PollerStoppedError | PollerCancelledError | Error) => void;\n  private pollOncePromise?: Promise<void>;\n  private cancelPromise?: Promise<void>;\n  private promise: Promise<TResult>;\n  private pollProgressCallbacks: PollProgressCallback<TState>[] = [];\n\n  /**\n   * The poller's operation is available in full to any of the methods of the Poller class\n   * and any class extending the Poller class.\n   */\n  protected operation: PollOperation<TState, TResult>;\n\n  /**\n   * A poller needs to be initialized by passing in at least the basic properties of the `PollOperation<TState, TResult>`.\n   *\n   * When writing an implementation of a Poller, this implementation needs to deal with the initialization\n   * of any custom state beyond the basic definition of the poller. The basic poller assumes that the poller's\n   * operation has already been defined, at least its basic properties. The code below shows how to approach\n   * the definition of the constructor of a new custom poller.\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor({\n   *     // Anything you might need outside of the basics\n   *   }) {\n   *     let state: MyOperationState = {\n   *       privateProperty: private,\n   *       publicProperty: public,\n   *     };\n   *\n   *     const operation = {\n   *       state,\n   *       update,\n   *       cancel,\n   *       toString\n   *     }\n   *\n   *     // Sending the operation to the parent's constructor.\n   *     super(operation);\n   *\n   *     // You can assign more local properties here.\n   *   }\n   * }\n   * ```\n   *\n   * Inside of this constructor, a new promise is created. This will be used to\n   * tell the user when the poller finishes (see `pollUntilDone()`). The promise's\n   * resolve and reject methods are also used internally to control when to resolve\n   * or reject anyone waiting for the poller to finish.\n   *\n   * The constructor of a custom implementation of a poller is where any serialized version of\n   * a previous poller's operation should be deserialized into the operation sent to the\n   * base constructor. For example:\n   *\n   * ```ts\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   constructor(\n   *     baseOperation: string | undefined\n   *   ) {\n   *     let state: MyOperationState = {};\n   *     if (baseOperation) {\n   *       state = {\n   *         ...JSON.parse(baseOperation).state,\n   *         ...state\n   *       };\n   *     }\n   *     const operation = {\n   *       state,\n   *       // ...\n   *     }\n   *     super(operation);\n   *   }\n   * }\n   * ```\n   *\n   * @param operation - Must contain the basic properties of `PollOperation<State, TResult>`.\n   */\n  constructor(operation: PollOperation<TState, TResult>) {\n    this.operation = operation;\n    this.promise = new Promise<TResult>(\n      (\n        resolve: (result: TResult) => void,\n        reject: (error: PollerStoppedError | PollerCancelledError | Error) => void\n      ) => {\n        this.resolve = resolve;\n        this.reject = reject;\n      }\n    );\n    // This prevents the UnhandledPromiseRejectionWarning in node.js from being thrown.\n    // The above warning would get thrown if `poller.poll` is called, it returns an error,\n    // and pullUntilDone did not have a .catch or await try/catch on it's return value.\n    this.promise.catch(() => {\n      /* intentionally blank */\n    });\n  }\n\n  /**\n   * Defines how much to wait between each poll request.\n   * This has to be implemented by your custom poller.\n   *\n   * \\@azure/core-http has a simple implementation of a delay function that waits as many milliseconds as specified.\n   * This can be used as follows:\n   *\n   * ```ts\n   * import { delay } from \"@azure/core-http\";\n   *\n   * export class MyPoller extends Poller<MyOperationState, string> {\n   *   // The other necessary definitions.\n   *\n   *   async delay(): Promise<void> {\n   *     const milliseconds = 1000;\n   *     return delay(milliseconds);\n   *   }\n   * }\n   * ```\n   *\n   */\n  protected abstract delay(): Promise<void>;\n\n  /**\n   * @internal\n   * @hidden\n   * Starts a loop that will break only if the poller is done\n   * or if the poller is stopped.\n   */\n  private async startPolling(): Promise<void> {\n    if (this.stopped) {\n      this.stopped = false;\n    }\n    while (!this.isStopped() && !this.isDone()) {\n      await this.poll();\n      await this.delay();\n    }\n  }\n\n  /**\n   * @internal\n   * @hidden\n   * pollOnce does one polling, by calling to the update method of the underlying\n   * poll operation to make any relevant change effective.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  private async pollOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    const state: PollOperationState<TResult> = this.operation.state;\n    try {\n      if (!this.isDone()) {\n        this.operation = await this.operation.update({\n          abortSignal: options.abortSignal,\n          fireProgress: this.fireProgress.bind(this)\n        });\n        if (this.isDone() && this.resolve) {\n          // If the poller has finished polling, this means we now have a result.\n          // However, it can be the case that TResult is instantiated to void, so\n          // we are not expecting a result anyway. To assert that we might not\n          // have a result eventually after finishing polling, we cast the result\n          // to TResult.\n          this.resolve(state.result as TResult);\n        }\n      }\n    } catch (e) {\n      state.error = e;\n      if (this.reject) {\n        this.reject(e);\n      }\n      throw e;\n    }\n  }\n\n  /**\n   * @internal\n   * @hidden\n   * fireProgress calls the functions passed in via onProgress the method of the poller.\n   *\n   * It loops over all of the callbacks received from onProgress, and executes them, sending them\n   * the current operation state.\n   *\n   * @param state - The current operation state.\n   */\n  private fireProgress(state: TState): void {\n    for (const callback of this.pollProgressCallbacks) {\n      callback(state);\n    }\n  }\n\n  /**\n   * @internal\n   * @hidden\n   * Invokes the underlying operation's cancel method, and rejects the\n   * pollUntilDone promise.\n   */\n  private async cancelOnce(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    this.operation = await this.operation.cancel(options);\n    if (this.reject) {\n      this.reject(new PollerCancelledError(\"Poller cancelled\"));\n    }\n  }\n\n  /**\n   * Returns a promise that will resolve once a single polling request finishes.\n   * It does this by calling the update method of the Poller's operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public poll(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.pollOncePromise) {\n      this.pollOncePromise = this.pollOnce(options);\n      const clearPollOncePromise = (): void => {\n        this.pollOncePromise = undefined;\n      };\n      this.pollOncePromise.then(clearPollOncePromise, clearPollOncePromise).catch(this.reject);\n    }\n    return this.pollOncePromise;\n  }\n\n  /**\n   * Returns a promise that will resolve once the underlying operation is completed.\n   */\n  public async pollUntilDone(): Promise<TResult> {\n    if (this.stopped) {\n      this.startPolling().catch(this.reject);\n    }\n    return this.promise;\n  }\n\n  /**\n   * Invokes the provided callback after each polling is completed,\n   * sending the current state of the poller's operation.\n   *\n   * It returns a method that can be used to stop receiving updates on the given callback function.\n   */\n  public onProgress(callback: (state: TState) => void): CancelOnProgress {\n    this.pollProgressCallbacks.push(callback);\n    return (): void => {\n      this.pollProgressCallbacks = this.pollProgressCallbacks.filter((c) => c !== callback);\n    };\n  }\n\n  /**\n   * Returns true if the poller has finished polling.\n   */\n  public isDone(): boolean {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return Boolean(state.isCompleted || state.isCancelled || state.error);\n  }\n\n  /**\n   * Stops the poller from continuing to poll.\n   */\n  public stopPolling(): void {\n    if (!this.stopped) {\n      this.stopped = true;\n      if (this.reject) {\n        this.reject(new PollerStoppedError(\"This poller is already stopped\"));\n      }\n    }\n  }\n\n  /**\n   * Returns true if the poller is stopped.\n   */\n  public isStopped(): boolean {\n    return this.stopped;\n  }\n\n  /**\n   * Attempts to cancel the underlying operation.\n   *\n   * It only optionally receives an object with an abortSignal property, from \\@azure/abort-controller's AbortSignalLike.\n   *\n   * If it's called again before it finishes, it will throw an error.\n   *\n   * @param options - Optional properties passed to the operation's update method.\n   */\n  public cancelOperation(options: { abortSignal?: AbortSignalLike } = {}): Promise<void> {\n    if (!this.stopped) {\n      this.stopped = true;\n    }\n    if (!this.cancelPromise) {\n      this.cancelPromise = this.cancelOnce(options);\n    } else if (options.abortSignal) {\n      throw new Error(\"A cancel request is currently pending\");\n    }\n    return this.cancelPromise;\n  }\n\n  /**\n   * Returns the state of the operation.\n   *\n   * Even though TState will be the same type inside any of the methods of any extension of the Poller class,\n   * implementations of the pollers can customize what's shared with the public by writing their own\n   * version of the `getOperationState` method, and by defining two types, one representing the internal state of the poller\n   * and a public type representing a safe to share subset of the properties of the internal state.\n   * Their definition of getOperationState can then return their public type.\n   *\n   * Example:\n   *\n   * ```ts\n   * // Let's say we have our poller's operation state defined as:\n   * interface MyOperationState extends PollOperationState<ResultType> {\n   *   privateProperty?: string;\n   *   publicProperty?: string;\n   * }\n   *\n   * // To allow us to have a true separation of public and private state, we have to define another interface:\n   * interface PublicState extends PollOperationState<ResultType> {\n   *   publicProperty?: string;\n   * }\n   *\n   * // Then, we define our Poller as follows:\n   * export class MyPoller extends Poller<MyOperationState, ResultType> {\n   *   // ... More content is needed here ...\n   *\n   *   public getOperationState(): PublicState {\n   *     const state: PublicState = this.operation.state;\n   *     return {\n   *       // Properties from PollOperationState<TResult>\n   *       isStarted: state.isStarted,\n   *       isCompleted: state.isCompleted,\n   *       isCancelled: state.isCancelled,\n   *       error: state.error,\n   *       result: state.result,\n   *\n   *       // The only other property needed by PublicState.\n   *       publicProperty: state.publicProperty\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * You can see this in the tests of this repository, go to the file:\n   * `../test/utils/testPoller.ts`\n   * and look for the getOperationState implementation.\n   */\n  public getOperationState(): TState {\n    return this.operation.state;\n  }\n\n  /**\n   * Returns the result value of the operation,\n   * regardless of the state of the poller.\n   * It can return undefined or an incomplete form of the final TResult value\n   * depending on the implementation.\n   */\n  public getResult(): TResult | undefined {\n    const state: PollOperationState<TResult> = this.operation.state;\n    return state.result;\n  }\n\n  /**\n   * Returns a serialized version of the poller's operation\n   * by invoking the operation's toString method.\n   */\n  public toString(): string {\n    return this.operation.toString();\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { delay, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { Poller, PollOperation } from \"@azure/core-lro\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { VoidResponse } from \"../../common/models\";\nimport { attachHttpResponse } from \"../../common/mappers\";\nimport { createSpan } from \"../../common/tracing\";\nimport { PhoneNumberAdministration } from \"../generated/src/phoneNumberRestClient\";\nimport { CancelReservationOptions, GetReservationOptions, GetReservationResponse } from \"../models\";\nimport { PhoneNumberReservation } from \"../generated/src/models\";\n\n/**\n * Common properties and methods of the phone number pollers.\n */\nexport abstract class PhoneNumberPollerBase<TState, TResult> extends Poller<TState, TResult> {\n  /**\n   * Defines how much time the poller is going to wait before making a new request to the service.\n   */\n  public pollInterval: number = 2000;\n\n  /**\n   * The method used by the poller to wait before attempting to update its operation\n   */\n  async delay(): Promise<void> {\n    return delay(this.pollInterval);\n  }\n}\n\n/**\n * Common properties and methods of the phone number poller operations.\n */\nexport class PhoneNumberPollOperationBase<TState, TResult>\n  implements PollOperation<TState, TResult> {\n  /**\n   * Initializes a new instance of the phone number poll operation\n   *\n   * @param {TState} state The state of the poll operation\n   * @param {string} cancelMessage A message to dispaly when a poll operation is cancelled.\n   */\n  constructor(public state: TState, private cancelMessage: string = \"Canceling not supported.\") {}\n\n  /**\n   * Reaches to the service and updates the Poller operation.\n   */\n  public async update(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(\"Operation not supported\");\n  }\n\n  /**\n   * Reaches to the service and cancels the Poller operation and the underlying request.\n   */\n  public async cancel(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(this.cancelMessage);\n  }\n\n  /**\n   * @summary Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state\n    });\n  }\n}\n\n/**\n * Common properties and methods of the phone number reservation poller operations.\n */\nexport class PhoneNumberReservationPollOperationBase<TState, TResult>\n  implements PollOperation<TState, TResult> {\n  /**\n   * Initializes a new instance of the phone number reservation poll operation\n   *\n   * @param {TState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} client A reference to the generated client used to make requests internally.\n   * @param {string} cancelMessage A message to dispaly when a poll operation is cancelled.\n   */\n  constructor(\n    public state: TState,\n    private client: PhoneNumberAdministration,\n    private cancelMessage: string = \"Canceling not supported.\"\n  ) {}\n\n  /**\n   * Gets the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation to fetch.\n   * @param {GetReservationOptions} options Additional request options.\n   */\n  public async getReservation(\n    reservationId: string,\n    options: GetReservationOptions = {}\n  ): Promise<GetReservationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getReservation\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getSearchById(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberReservation>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Cancels the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation to cancel.\n   * @param {CancelReservationOptions} options Additional request options.\n   */\n  public async cancelReservation(\n    reservationId: string,\n    options: CancelReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-cancelReservation\",\n      options\n    );\n    try {\n      const { _response } = await this.client.cancelSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and updates the Poller operation.\n   */\n  public async update(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(\"Operation not supported\");\n  }\n\n  /**\n   * Reaches to the service and cancels the Poller operation and the underlying request.\n   */\n  public async cancel(): Promise<PollOperation<TState, TResult>> {\n    throw new Error(this.cancelMessage);\n  }\n\n  /**\n   * @summary Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberReservation, SearchStatus } from \"../..\";\nimport { PhoneNumberRelease, ReleaseStatus } from \"../generated/src/models\";\n\nexport const isComplete = (\n  results: PhoneNumberReservation | PhoneNumberRelease,\n  completionStatus: SearchStatus | ReleaseStatus\n): boolean | never => {\n  if (results.status === \"Error\" || results.status === \"Failed\" || results.status === \"Expired\") {\n    throw new Error(JSON.stringify(results));\n  }\n\n  return results.status === completionStatus;\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport {\n  GetReleaseOptions,\n  GetReleaseResponse,\n  ReleasePhoneNumbersOptions,\n  ReleasePhoneNumbersResponse\n} from \"../../models\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberRelease, ReleaseResponse } from \"../../generated/src/models\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { ReleasePhoneNumbersPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PhoneNumberPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for releasing a phone number or list of phone numbers.\n */\nexport class ReleasePhoneNumbersPollOperation extends PhoneNumberPollOperationBase<\n  ReleasePhoneNumbersPollOperationState,\n  PhoneNumberRelease\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPollOperation\n   *\n   * @param {ReleasePhoneNumbersPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: ReleasePhoneNumbersPollOperationState,\n    private client: PhoneNumberAdministration,\n    private requestOptions: OperationOptions\n  ) {\n    super(state, \"Canceling a release is not supported.\");\n  }\n\n  /**\n   * Request the release of a list of acquired phone numbers.\n   *\n   * @param {string[]} phoneNumbers The phone numbers to be released.\n   * @param {ReleasePhoneNumbersOptions} options Additional request options.\n   */\n  private async releasePhoneNumbers(\n    phoneNumbers: string[],\n    options: ReleasePhoneNumbersOptions = {}\n  ): Promise<ReleasePhoneNumbersResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-releasePhoneNumbers\",\n      options\n    );\n    try {\n      const { releaseId, _response } = await this.client.releasePhoneNumbers(\n        {\n          phoneNumbers\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<ReleaseResponse>({ releaseId }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the release associated with a given id.\n   *\n   * @param {string} releaseId The id of the release returned by releasePhoneNumbers.\n   * @param {GetReleaseOptions} options Additional request options.\n   */\n  private async getRelease(\n    releaseId: string,\n    options: GetReleaseOptions = {}\n  ): Promise<GetReleaseResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getRelease\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getReleaseById(\n        releaseId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberRelease>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<ReleasePhoneNumbersPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<ReleasePhoneNumbersPollOperationState> = {}\n  ): Promise<ReleasePhoneNumbersPollOperation> {\n    const { state } = this;\n    const { phoneNumbers } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        const { releaseId } = await this.releasePhoneNumbers(phoneNumbers, this.requestOptions);\n        state.releaseId = releaseId;\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted && state.releaseId) {\n        state.result = await this.getRelease(state.releaseId, this.requestOptions);\n        state.isCompleted = isComplete(state.result, \"Complete\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberRelease } from \"../../generated/src/models\";\nimport {\n  ReleasePhoneNumbersPollerOptions,\n  ReleasePhoneNumbersPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { ReleasePhoneNumbersPollOperation } from \"./operation\";\n\n/**\n * The poller for release a phone number or list of phone numbers.\n */\nexport class ReleasePhoneNumbersPoller extends PhoneNumberPollerBase<\n  ReleasePhoneNumbersPollOperationState,\n  PhoneNumberRelease\n> {\n  /**\n   * Initializes an instance of ReleasePhoneNumbersPoller\n   *\n   * @param {ReleasePhoneNumbersPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: ReleasePhoneNumbersPollerOptions) {\n    const { client, phoneNumbers, requestOptions = {}, pollInterval = 2000, resumeFrom } = options;\n    let state: ReleasePhoneNumbersPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new ReleasePhoneNumbersPollOperation(\n      {\n        ...state,\n        phoneNumbers\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { operationOptionsToRequestOptionsBase, RequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport {\n  CreateReservationRequest,\n  CreateReservationOptions,\n  CreatePhoneNumberReservationResponse,\n  CreateReservationResponse\n} from \"../../models\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberReservation } from \"../../generated/src/models\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { ReservePhoneNumbersPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PhoneNumberReservationPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for reserving phone numbers.\n */\nexport class ReservePhoneNumbersPollOperation extends PhoneNumberReservationPollOperationBase<\n  ReservePhoneNumbersPollOperationState,\n  PhoneNumberReservation\n> {\n  /**\n   * Initializes an instance of ReservePhoneNumbersPollOperation\n   *\n   * @param {PurchaseReservationPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} _client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: ReservePhoneNumbersPollOperationState,\n    private _client: PhoneNumberAdministration,\n    private requestOptions: RequestOptionsBase\n  ) {\n    super(state, _client);\n  }\n\n  /**\n   * Starts a search for phone numbers given some constraints such as name or area code. The phone numbers that are\n   * found will then be reserved.\n   *\n   * @param {CreateReservationRequest} reservationRequest Request properties to constraint the search scope.\n   * @param {CreateReservationOptions} options Additional request options.\n   */\n  private async createReservation(\n    reservationRequest: CreateReservationRequest,\n    options: CreateReservationOptions = {}\n  ): Promise<CreatePhoneNumberReservationResponse> {\n    const { name, description, phonePlanIds, areaCode, quantity } = reservationRequest;\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-createReservation\",\n      options\n    );\n    try {\n      const { searchId, _response } = await this._client.createSearch(\n        {\n          displayName: name,\n          description,\n          phonePlanIds,\n          quantity,\n          areaCode\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<CreateReservationResponse>({ reservationId: searchId }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<ReservePhoneNumbersPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<ReservePhoneNumbersPollOperationState> = {}\n  ): Promise<ReservePhoneNumbersPollOperation> {\n    const state = this.state;\n    const { reservationRequest } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        const { reservationId } = await this.createReservation(\n          reservationRequest,\n          this.requestOptions\n        );\n        state.reservationId = reservationId;\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted && state.reservationId) {\n        state.result = await this.getReservation(state.reservationId, this.requestOptions);\n        state.isCompleted = isComplete(state.result, \"Reserved\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n\n  /**\n   * Reaches to the service and cancels the operation, also updating the poll operation.\n   */\n  public async cancel(): Promise<ReservePhoneNumbersPollOperation> {\n    const state = this.state;\n    const { reservationId, options = {} } = state;\n\n    if (reservationId) {\n      await this.cancelReservation(reservationId, options);\n    }\n\n    state.isCancelled = true;\n\n    return this;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { PhoneNumberReservation } from \"../../generated/src/models\";\nimport {\n  ReservePhoneNumbersPollerOptions,\n  ReservePhoneNumbersPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { ReservePhoneNumbersPollOperation } from \"./operation\";\n\n/**\n * The poller for reserving phone numbers.\n */\nexport class ReservePhoneNumbersPoller extends PhoneNumberPollerBase<\n  ReservePhoneNumbersPollOperationState,\n  PhoneNumberReservation\n> {\n  /**\n   * Initializes an instance of ReservePhoneNumbersPoller\n   *\n   * @param {ReservePhoneNumbersPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: ReservePhoneNumbersPollerOptions) {\n    const {\n      client,\n      reservationRequest,\n      requestOptions = {},\n      pollInterval = 2000,\n      resumeFrom\n    } = options;\n    let state: ReservePhoneNumbersPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new ReservePhoneNumbersPollOperation(\n      {\n        ...state,\n        reservationRequest\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, operationOptionsToRequestOptionsBase } from \"@azure/core-http\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { attachHttpResponse } from \"../../../common/mappers\";\nimport { VoidResponse } from \"../../../common/models\";\nimport { createSpan } from \"../../../common/tracing\";\nimport { PhoneNumberAdministration } from \"../../generated/src/phoneNumberRestClient\";\nimport { PurchaseReservationPollOperationState, UpdatePollerOptions } from \"../../lroModels\";\nimport { PurchaseReservationOptions } from \"../../models\";\nimport { PhoneNumberReservationPollOperationBase } from \"../phoneNumberPollerBase\";\nimport { isComplete } from \"../utils\";\n\n/**\n * The poll operation for purchasing a phone number reservation.\n */\nexport class PurchaseReservationPollOperation extends PhoneNumberReservationPollOperationBase<\n  PurchaseReservationPollOperationState,\n  void\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPollOperation\n   *\n   * @param {PurchaseReservationPollOperationState} state The state of the poll operation\n   * @param {PhoneNumberAdministration} _client A reference to the generated client used to make requests internally.\n   * @param {OperationOptions} requestOptions Additional options for the underlying requests.\n   */\n  constructor(\n    public state: PurchaseReservationPollOperationState,\n    private _client: PhoneNumberAdministration,\n    private requestOptions: OperationOptions\n  ) {\n    super(state, _client);\n  }\n\n  /**\n   * Purchases the phone number(s) in the reservation associated with a given id.\n   *\n   * @param {string} reservationId The id of the reservation being purchased.\n   * @param {PurchaseReservationOptions} options Additional request options.\n   */\n  private async purchaseReservation(\n    reservationId: string,\n    options: PurchaseReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-purchaseReservation\",\n      options\n    );\n    try {\n      const { _response } = await this._client.purchaseSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reaches to the service and queries the status of the operation.\n   *\n   * @param {UpdatePollerOptions<PurchaseReservationPollOperationState>} [options={}] Additional options for the poll operation\n   */\n  public async update(\n    options: UpdatePollerOptions<PurchaseReservationPollOperationState> = {}\n  ): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId } = state;\n\n    if (options.abortSignal) {\n      this.requestOptions.abortSignal = options.abortSignal;\n    }\n\n    try {\n      if (!state.isStarted) {\n        await this.purchaseReservation(reservationId, this.requestOptions);\n        state.isStarted = true;\n      }\n\n      if (!state.isCompleted) {\n        const result = await this.getReservation(reservationId, this.requestOptions);\n        state.isCompleted = isComplete(result, \"Success\");\n      }\n    } catch (error) {\n      state.error = error;\n      state.isCompleted = true;\n    } finally {\n      return this;\n    }\n  }\n\n  /**\n   * Reaches to the service and cancels the operation, also updating the poll operation.\n   */\n  public async cancel(): Promise<PurchaseReservationPollOperation> {\n    const state = this.state;\n    const { reservationId, options = {} } = state;\n\n    if (reservationId) {\n      await this.cancelReservation(reservationId, options);\n    }\n\n    state.isCancelled = true;\n\n    return this;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  PurchaseReservationPollerOptions,\n  PurchaseReservationPollOperationState\n} from \"../../lroModels\";\nimport { PhoneNumberPollerBase } from \"../phoneNumberPollerBase\";\nimport { PurchaseReservationPollOperation } from \"./operation\";\n\n/**\n * The poller for purchasing a phone number reservation.\n */\nexport class PurchaseReservationPoller extends PhoneNumberPollerBase<\n  PurchaseReservationPollOperationState,\n  void\n> {\n  /**\n   * Initializes an instance of PurchaseReservationPoller\n   *\n   * @param {PurchaseReservationPollerOptions} options Options for initializing the poller.\n   */\n  constructor(options: PurchaseReservationPollerOptions) {\n    const { client, reservationId, requestOptions = {}, pollInterval = 2000, resumeFrom } = options;\n    let state: PurchaseReservationPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new PurchaseReservationPollOperation(\n      {\n        ...state,\n        reservationId\n      },\n      client,\n      requestOptions\n    );\n\n    super(operation);\n\n    this.pollInterval = pollInterval;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/// <reference lib=\"esnext.asynciterable\" />\n\nimport {\n  parseClientArguments,\n  isKeyCredential,\n  createCommunicationAuthPolicy\n} from \"@azure/communication-common\";\nimport { KeyCredential, TokenCredential } from \"@azure/core-auth\";\nimport {\n  PipelineOptions,\n  InternalPipelineOptions,\n  createPipelineFromOptions,\n  operationOptionsToRequestOptionsBase\n} from \"@azure/core-http\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { CanonicalCode } from \"@opentelemetry/api\";\nimport { logger } from \"../common/logger\";\nimport { createSpan } from \"../common/tracing\";\nimport {\n  PhoneNumberRestClient,\n  PhoneNumberAdministration\n} from \"./generated/src/phoneNumberRestClient\";\nimport {\n  AcquiredPhoneNumber,\n  PhoneNumberCountry,\n  PhonePlanGroup,\n  PhonePlan,\n  PhoneNumberEntity,\n  UpdatePhoneNumberCapabilitiesResponse,\n  UpdateNumberCapabilitiesResponse,\n  PhoneNumberRelease,\n  AreaCodes,\n  NumberConfigurationResponse,\n  LocationOptionsResponse,\n  PhoneNumberReservation\n} from \"./generated/src/models\";\nimport { SDK_VERSION } from \"./constants\";\nimport {\n  GetAreaCodesOptions,\n  ConfigurePhoneNumberOptions,\n  ListSupportedCountriesOptions,\n  ListPhoneNumbersOptions,\n  ListPhonePlanGroupsOptions,\n  UpdateCapabilitiesOptions,\n  GetAreaCodesRequest,\n  PageableOptions,\n  ListPhonePlansRequest,\n  ListPhonePlansOptions,\n  GetPhonePlanLocationOptionsRequest,\n  GetPhonePlanLocationOptionsOptions,\n  ConfigurePhoneNumberRequest,\n  UpdateNumbersCapabilitiesResponse,\n  PhoneNumberCapabilitiesUpdates,\n  GetCapabilitiesUpdateResponse,\n  GetAreaCodesResponse,\n  GetPhoneNumberConfigurationResponse,\n  GetPhonePlanLocationOptionsResponse,\n  GetCapabilitiesUpdateOptions,\n  GetPhoneNumberConfigurationOptions,\n  UnconfigurePhoneNumberOptions,\n  CreateReservationRequest,\n  GetReservationOptions,\n  GetReservationResponse,\n  CancelReservationOptions\n} from \"./models\";\nimport { VoidResponse } from \"../common/models\";\nimport { attachHttpResponse } from \"../common/mappers\";\nimport {\n  BeginPurchaseReservationOptions,\n  BeginReleasePhoneNumbersOptions,\n  BeginReservePhoneNumbersOptions\n} from \"./lroModels\";\nimport { PollerLike, PollOperationState } from \"@azure/core-lro\";\nimport { ReleasePhoneNumbersPoller } from \"./lro/release/poller\";\nimport { ReservePhoneNumbersPoller } from \"./lro/reserve/poller\";\nimport { PurchaseReservationPoller } from \"./lro/purchase/poller\";\n\n/**\n * Client options used to configure the UserTokenClient API requests.\n */\nexport interface PhoneNumberAdministrationClientOptions extends PipelineOptions {}\n\nconst isPhoneNumberAdministrationClientOptions = (\n  options: any\n): options is PhoneNumberAdministrationClientOptions => options && !isKeyCredential(options);\n\n/**\n * Client class for interacting with Azure Communication Services PhoneNumber Administration.\n */\nexport class PhoneNumberAdministrationClient {\n  /**\n   * A reference to the auto-generated PhoneNumber HTTP client.\n   */\n  private readonly client: PhoneNumberAdministration;\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class.\n   * @param connectionString Connection string to connect to an Azure Communication Service resource.\n   *                         Example: \"endpoint=https://contoso.eastus.communications.azure.net/;accesskey=secret\";\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(connectionString: string, options?: PhoneNumberAdministrationClientOptions);\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class using an Azure KeyCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential An object that is used to authenticate requests to the service. Use the Azure KeyCredential or `@azure/identity` to create a credential.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: KeyCredential,\n    options?: PhoneNumberAdministrationClientOptions\n  );\n\n  /**\n   * Initializes a new instance of the PhoneNumberAdministrationClient class using a TokenCredential.\n   * @param url The endpoint of the service (ex: https://contoso.eastus.communications.azure.net).\n   * @param credential TokenCredential that is used to authenticate requests to the service.\n   * @param options Optional. Options to configure the HTTP pipeline.\n   */\n  public constructor(\n    url: string,\n    credential: TokenCredential,\n    options?: PhoneNumberAdministrationClientOptions\n  );\n\n  public constructor(\n    connectionStringOrUrl: string,\n    credentialOrOptions?: KeyCredential | TokenCredential | PhoneNumberAdministrationClientOptions,\n    maybeOptions: PhoneNumberAdministrationClientOptions = {}\n  ) {\n    const { url, credential } = parseClientArguments(connectionStringOrUrl, credentialOrOptions);\n    const options = isPhoneNumberAdministrationClientOptions(credentialOrOptions)\n      ? credentialOrOptions\n      : maybeOptions;\n    const libInfo = `azsdk-js-communication-administration/${SDK_VERSION}`;\n\n    if (!options.userAgentOptions) {\n      options.userAgentOptions = {};\n    }\n\n    if (options.userAgentOptions.userAgentPrefix) {\n      options.userAgentOptions.userAgentPrefix = `${options.userAgentOptions.userAgentPrefix} ${libInfo}`;\n    } else {\n      options.userAgentOptions.userAgentPrefix = libInfo;\n    }\n\n    const internalPipelineOptions: InternalPipelineOptions = {\n      ...options,\n      ...{\n        loggingOptions: {\n          logger: logger.info\n        }\n      }\n    };\n\n    const authPolicy = createCommunicationAuthPolicy(credential);\n    const pipeline = createPipelineFromOptions(internalPipelineOptions, authPolicy);\n    this.client = new PhoneNumberRestClient(url, pipeline).phoneNumberAdministration;\n  }\n\n  /**\n   * Configures a phone number, for example to assign a callbackUrl.\n   * @param config The configuration details\n   * @param options Additional request options.\n   */\n  public async configurePhoneNumber(\n    config: ConfigurePhoneNumberRequest,\n    options: ConfigurePhoneNumberOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-configurePhoneNumber\",\n      options\n    );\n    const { phoneNumber, callbackUrl } = config;\n    try {\n      const { _response } = await this.client.configureNumber(\n        {\n          phoneNumber,\n          pstnConfiguration: {\n            callbackUrl: callbackUrl,\n            applicationId: updatedOptions.applicationId\n          }\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Unconfigure a phone number, resetting its' configuration.\n   * @param phoneNumber Phone Number to unconfigure.\n   * @param options Additional request options.\n   */\n  public async unconfigurePhoneNumber(\n    phoneNumber: string,\n    options: UnconfigurePhoneNumberOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-unconfigurePhoneNumber\",\n      options\n    );\n    try {\n      const { _response } = await this.client.unconfigureNumber(\n        { phoneNumber },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates the capabilities for a list of phone numbers.\n   * The response includes the id of the created update capabilities request,\n   * remember that id for subsequent calls to getCapabilitiesUpdate.\n   * @param phoneNumberCapabilitiesUpdates Dictionary containing a list of phone numbers and their capabilities updates.\n   * @param options Additional request options.\n   */\n  public async updatePhoneNumbersCapabilities(\n    phoneNumberCapabilitiesUpdates: PhoneNumberCapabilitiesUpdates,\n    options: UpdateCapabilitiesOptions = {}\n  ): Promise<UpdateNumbersCapabilitiesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-updatePhoneNumbersCapabilities\",\n      options\n    );\n    try {\n      const { capabilitiesUpdateId, _response } = await this.client.updateCapabilities(\n        {\n          phoneNumberCapabilitiesUpdate: phoneNumberCapabilitiesUpdates\n        },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<UpdateNumberCapabilitiesResponse>(\n        { capabilitiesUpdateId },\n        _response\n      );\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get the update capabilities request associated with a given id.\n   * @param capabilitiesUpdateId  The id associated with the request.\n   * @param options Additional request options.\n   */\n  public async getCapabilitiesUpdate(\n    capabilitiesUpdateId: string,\n    options: GetCapabilitiesUpdateOptions = {}\n  ): Promise<GetCapabilitiesUpdateResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getCapabilitiesUpdate\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getCapabilitiesUpdate(\n        capabilitiesUpdateId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<UpdatePhoneNumberCapabilitiesResponse>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets a list of the supported area codes based on location.\n   * @param request Request properties to constraint the search scope.\n   * @param options Additional request options.\n   */\n  public async getAreaCodes(\n    request: GetAreaCodesRequest,\n    options: GetAreaCodesOptions = {}\n  ): Promise<GetAreaCodesResponse> {\n    const { countryCode: country, locationType, phonePlanId, locationOptionsQueries } = request;\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getAllAreaCodes\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getAllAreaCodes(\n        locationType,\n        country,\n        phonePlanId,\n        locationOptionsQueries,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<AreaCodes>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the configuration for a given phone number.\n   * @param phoneNumber The E.164 representation of the phone number whose configuration is requested.\n   * @param options Additional request options.\n   */\n  public async getPhoneNumberConfiguration(\n    phoneNumber: string,\n    options: GetPhoneNumberConfigurationOptions = {}\n  ): Promise<GetPhoneNumberConfigurationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getPhoneNumberConfiguration\",\n      options\n    );\n    try {\n      const { pstnConfiguration, _response } = await this.client.getNumberConfiguration(\n        { phoneNumber },\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<NumberConfigurationResponse>({ pstnConfiguration }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the location options for a given phone plan.\n   * @param request Request properties to constraint the search scope.\n   * @param options Additional request options.\n   */\n  public async getPhonePlanLocationOptions(\n    request: GetPhonePlanLocationOptionsRequest,\n    options: GetPhonePlanLocationOptionsOptions = {}\n  ): Promise<GetPhonePlanLocationOptionsResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getPhonePlanLocationOptions\",\n      options\n    );\n    const { countryCode, phonePlanGroupId, phonePlanId } = request;\n    try {\n      const { locationOptions, _response } = await this.client.getPhonePlanLocationOptions(\n        countryCode,\n        phonePlanGroupId,\n        phonePlanId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<LocationOptionsResponse>({ locationOptions }, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the reservation associated with a given id.\n   * Use this function to query the status of a phone number reservation.\n   * @param reservationId The id of the reservation returned by createReservation.\n   * @param options Additional request options.\n   */\n  public async getReservation(\n    reservationId: string,\n    options: GetReservationOptions = {}\n  ): Promise<GetReservationResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-getReservation\",\n      options\n    );\n    try {\n      const { _response, ...rest } = await this.client.getSearchById(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse<PhoneNumberReservation>(rest, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Cancels the reservation associated with a given id.\n   * @param reservationId The id of the reservation returned by createReservation.\n   * @param options Additional request options.\n   */\n  public async cancelReservation(\n    reservationId: string,\n    options: CancelReservationOptions = {}\n  ): Promise<VoidResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-cancelReservation\",\n      options\n    );\n    try {\n      const { _response } = await this.client.cancelSearch(\n        reservationId,\n        operationOptionsToRequestOptionsBase(updatedOptions)\n      );\n      return attachHttpResponse({}, _response);\n    } catch (e) {\n      span.setStatus({\n        code: CanonicalCode.UNKNOWN,\n        message: e.message\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listSearches.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSearchesPage(\n    continuationState: PageSettings,\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity[]> {\n    if (!continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSearches(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSearchesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listSearches.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSearchesAll(\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity> {\n    for await (const entities of this.listSearchesPage({}, options)) {\n      yield* entities;\n    }\n  }\n\n  /**\n   * Iterates the searches created by the Azure resource.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const entity of client.listSearches()) {\n   *   console.log(\"id: \", entity.id);\n   * }\n   * ```\n   * Gets all searches created by the Azure resource.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  public listSearches(\n    options: PageableOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberEntity> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listSearches\",\n      options\n    );\n    const iter = this.listSearchesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listSearchesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listReleases.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listReleasesPage(\n    continuationState: PageSettings,\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllReleases(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllReleasesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.entities) {\n        yield currentResponse.entities;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listReleases.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listReleasesAll(\n    options: PageableOptions = {}\n  ): AsyncIterableIterator<PhoneNumberEntity> {\n    for await (const entities of this.listReleasesPage({}, options)) {\n      yield* entities;\n    }\n  }\n\n  /**\n   * Iterates the releases created by the Azure resource.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const entity of client.listReleases()) {\n   *   console.log(\"id: \", entity.id);\n   * }\n   * ```\n   * Gets all releases created by the Azure resource.\n   * @param {PageableOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  public listReleases(\n    options: PageableOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberEntity> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listReleases\",\n      options\n    );\n    const iter = this.listReleasesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listReleasesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listSupportedCountries.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {ListSupportedCountriesOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSupportedCountriesPage(\n    continuationState: PageSettings,\n    options: ListSupportedCountriesOptions = {}\n  ): AsyncIterableIterator<PhoneNumberCountry[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllSupportedCountries(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.countries) {\n        yield currentResponse.countries;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllSupportedCountriesNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.countries) {\n        yield currentResponse.countries;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listSupportedCountries.\n   * @param {ListSupportedCountriesOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listSupportedCountriesAll(\n    options: ListSupportedCountriesOptions = {}\n  ): AsyncIterableIterator<PhoneNumberCountry> {\n    for await (const countries of this.listSupportedCountriesPage({}, options)) {\n      yield* countries;\n    }\n  }\n\n  /**\n   * Iterates the supported countries.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const country of client.listSupportedCountries()) {\n   *   console.log(\"country name: \", country.localizedName);\n   * }\n   * ```\n   * @summary List all supported countries.\n   * @param {ListSupportedCountriesOptions} [options] The optional parameters.\n   */\n  public listSupportedCountries(\n    options: ListSupportedCountriesOptions = {}\n  ): PagedAsyncIterableIterator<PhoneNumberCountry> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listAllSupportedCountries\",\n      options\n    );\n    const iter = this.listSupportedCountriesAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listSupportedCountriesPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhoneNumbers.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param {ListPhoneNumbersOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhoneNumbersPage(\n    continuationState: PageSettings,\n    options: ListPhoneNumbersOptions = {}\n  ): AsyncIterableIterator<AcquiredPhoneNumber[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getAllPhoneNumbers(options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phoneNumbers) {\n        yield currentResponse.phoneNumbers;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getAllPhoneNumbersNext(\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phoneNumbers) {\n        yield currentResponse.phoneNumbers;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhoneNumbers.\n   * @param {ListPhoneNumbersOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhoneNumbersAll(\n    options: ListPhoneNumbersOptions = {}\n  ): AsyncIterableIterator<AcquiredPhoneNumber> {\n    for await (const phoneNumbers of this.listPhoneNumbersPage({}, options)) {\n      yield* phoneNumbers;\n    }\n  }\n\n  /**\n   * Iterates the acquired phone numbers.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const acquired of client.listPhoneNumbers()) {\n   *   console.log(\"phone number: \", acquired.phoneNumber);\n   * }\n   * ```\n   * @summary List all acquired phone numbers.\n   * @param {ListPhoneNumbersOptions} [options] The optional parameters.\n   */\n  public listPhoneNumbers(\n    options: ListPhoneNumbersOptions = {}\n  ): PagedAsyncIterableIterator<AcquiredPhoneNumber> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listAllPhoneNumbers\",\n      options\n    );\n    const iter = this.listPhoneNumbersAll(options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) => this.listPhoneNumbersPage(settings, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhonePlanGroups.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param countryCode The ISO 3166-2 country code, for example \"FR\" or \"CN\".\n   * @param {ListPhonePlanGroupsOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlanGroupsPage(\n    continuationState: PageSettings,\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): AsyncIterableIterator<PhonePlanGroup[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getPhonePlanGroups(countryCode, options);\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlanGroups) {\n        yield currentResponse.phonePlanGroups;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getPhonePlanGroupsNext(\n        countryCode,\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlanGroups) {\n        yield currentResponse.phonePlanGroups;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhonePlanGroups.\n   * @param countryCode The ISO 3166-2 country code, for example \"FR\" or \"CN\".\n   * @param {ListPlansForCountryOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlanGroupsAll(\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): AsyncIterableIterator<PhonePlanGroup> {\n    for await (const phonePlanGroups of this.listPhonePlanGroupsPage({}, countryCode, options)) {\n      yield* phonePlanGroups;\n    }\n  }\n\n  /**\n   * Iterates the available phone plan groups for a country.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const phonePlanGroup of client.listPhonePlanGroups(\"CA\")) {\n   *   console.log(\"plan group id: \", phonePlanGroup.phonePlanGroupId);\n   * }\n   * ```\n   * @summary List all available phone plan groups for a country.\n   * @param {ListPhonePlanGroupsOptions} [options] The optional parameters.\n   */\n  public listPhonePlanGroups(\n    countryCode: string,\n    options: ListPhonePlanGroupsOptions = {}\n  ): PagedAsyncIterableIterator<PhonePlanGroup> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listPhonePlanGroups\",\n      options\n    );\n    const iter = this.listPhonePlanGroupsAll(countryCode, options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listPhonePlanGroupsPage(settings, countryCode, updatedOptions)\n    };\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the pagination of listPhonePlans.\n   * @param {PageSettings} continuationState An object that indicates the position of the paginated request.\n   * @param planGroupInfo Information need to search for plans.\n   * @param {GetPhonePlansOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlansPage(\n    continuationState: PageSettings,\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): AsyncIterableIterator<PhonePlan[]> {\n    if (continuationState.continuationToken == null) {\n      const currentResponse = await this.client.getPhonePlans(\n        planGroupInfo.countryCode,\n        planGroupInfo.phonePlanGroupId,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlans) {\n        yield currentResponse.phonePlans;\n      }\n    }\n\n    while (continuationState.continuationToken) {\n      const currentResponse = await this.client.getPhonePlansNext(\n        planGroupInfo.countryCode,\n        planGroupInfo.phonePlanGroupId,\n        continuationState.continuationToken,\n        options\n      );\n      continuationState.continuationToken = currentResponse.nextLink;\n\n      if (currentResponse.phonePlans) {\n        yield currentResponse.phonePlans;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   * @ignore\n   * Deals with the iteration of all the available results of listPhonePlans.\n   * @param planGroupInfo Information need to search for plans.\n   * @param {ListPhonePlansOptions} [options] Optional parameters for the underlying HTTP request.\n   */\n  private async *listPhonePlansAll(\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): AsyncIterableIterator<PhonePlan> {\n    for await (const phonePlans of this.listPhonePlansPage({}, planGroupInfo, options)) {\n      yield* phonePlans;\n    }\n  }\n\n  /**\n   * Iterates the available phone plan for a plan group.\n   *\n   * Example usage:\n   * ```ts\n   * let client = new PhoneNumberAdministrationClient(credentials);\n   * for await (const phonePlan of client.listPhonePlanGroups(PLAN_GROUP_INFO)) {\n   *   console.log(\"plan id: \", phonePlan.phonePlanId);\n   * }\n   *\n   * Gets all available phone plans for a given plan group.\n   * @param planGroupInfo Information need to search for plans.\n   * @param options Additional request options.\n   */\n  public listPhonePlans(\n    planGroupInfo: ListPhonePlansRequest,\n    options: ListPhonePlansOptions = {}\n  ): PagedAsyncIterableIterator<PhonePlan> {\n    const { span, updatedOptions } = createSpan(\n      \"PhoneNumberAdministrationClient-listPhonePlans\",\n      options\n    );\n    const iter = this.listPhonePlansAll(planGroupInfo, options);\n\n    span.end();\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings: PageSettings = {}) =>\n        this.listPhonePlansPage(settings, planGroupInfo, updatedOptions)\n    };\n  }\n\n  /**\n   * Starts the release of a list of acquired phone numbers.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const releasePoller = await client.beginReleasePhoneNumbers(PHONE_NUMBERS);\n   *\n   * // Serializing the poller\n   * const serialized = releasePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await releasePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   * @param {string[]} phoneNumbers The phone numbers to be released.\n   * @param {BeginReleasePhoneNumbersOptions} options Additional request options.\n   */\n  public async beginReleasePhoneNumbers(\n    phoneNumbers: string[],\n    options: BeginReleasePhoneNumbersOptions = {}\n  ): Promise<PollerLike<PollOperationState<PhoneNumberRelease>, PhoneNumberRelease>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new ReleasePhoneNumbersPoller({\n      phoneNumbers,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts a search for phone numbers given some constraints such as name or area code.\n   * The phone numbers that are found are reserved until you cancel, purchase or the reservation expires.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const reservePoller = await client.beginReservePhoneNumbers(RESERVATION_REQUEST);\n   *\n   * // Serializing the poller\n   * const serialized = reservePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await reservePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   *\n   * @param {CreateReservationRequest} reservationRequest Request properties to constraint the search scope.\n   * @param {BeginReservePhoneNumbersOptions} options Additional request options.\n   */\n  public async beginReservePhoneNumbers(\n    reservationRequest: CreateReservationRequest,\n    options: BeginReservePhoneNumbersOptions = {}\n  ): Promise<PollerLike<PollOperationState<PhoneNumberReservation>, PhoneNumberReservation>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new ReservePhoneNumbersPoller({\n      reservationRequest,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts the purchase of the phone number(s) in the reservation associated with a given id.\n   *\n   * This function returns a Long Running Operation poller that allows you to wait indefinitely until the operation is complete.\n   *\n   * Example usage:\n   * ```ts\n   * const client = new PhoneNumberAdministrationClient(CONNECTION_STRING);\n   * const purchasePoller = await client.beginPurchaseReservation(RESERVATION_ID);\n   *\n   * // Serializing the poller\n   * const serialized = purchasePoller.toString();\n   *\n   * // Waiting until it's done\n   * const results = await purchasePoller.pollUntilDone();\n   * console.log(results);\n   * ```\n   *\n   * @param {string} reservationId The id of the reservation to purchase.\n   * @param {BeginPurchaseReservationOptions} options Additional request options.\n   */\n  public async beginPurchaseReservation(\n    reservationId: string,\n    options: BeginPurchaseReservationOptions = {}\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const { pollInterval, resumeFrom, ...requestOptions } = options;\n    const poller = new PurchaseReservationPoller({\n      reservationId,\n      client: this.client,\n      pollInterval,\n      resumeFrom,\n      requestOptions\n    });\n\n    await poller.poll();\n    return poller;\n  }\n}\n\nexport {\n  AreaCodes,\n  CarrierDetails,\n  LocationOptions,\n  LocationOptionsDetails,\n  NumberConfiguration,\n  PhoneNumberAdministrationGetAllAreaCodesResponse,\n  PhoneNumberAdministrationReleasePhoneNumbersResponse,\n  PhoneNumberAdministrationGetReleaseByIdResponse,\n  PhoneNumberAdministrationGetCapabilitiesUpdateResponse,\n  PhoneNumberAdministrationGetNumberConfigurationResponse,\n  PhoneNumberAdministrationGetPhonePlanLocationOptionsResponse,\n  PstnConfiguration,\n  ReleaseResponse,\n  NumberUpdateCapabilities,\n  UpdateNumberCapabilitiesResponse,\n  Capability,\n  PhoneNumberCountry,\n  PhoneNumberCountries,\n  LocationOptionsQuery,\n  AcquiredPhoneNumber,\n  AcquiredPhoneNumbers,\n  UpdatePhoneNumberCapabilitiesResponse,\n  PhonePlanGroups,\n  PhonePlanGroup,\n  PhonePlansResponse,\n  PhonePlan,\n  PhoneNumberRelease,\n  PhoneNumberEntities,\n  PhoneNumberReservation,\n  AssignmentStatus,\n  ActivationState,\n  CapabilitiesUpdateStatus,\n  PhoneNumberType,\n  RateInformation,\n  LocationType,\n  ReleaseStatus,\n  PhoneNumberReleaseDetails,\n  PhoneNumberEntity,\n  PhoneNumberReleaseStatus,\n  SearchStatus,\n  LocationOptionsResponse,\n  NumberConfigurationResponse,\n  LocationOptionsQueries\n} from \"./generated/src/models\";\n"],"names":["uuidv4","base64.decodeString","base64.encodeByteArray","utils.isValidUuid","utils.isDuration","debug","logger","coreLogger","utils.delay","utils.generateUuid","utils\n                .delay","retry","trace_flags_1","context_1","platform_1","context_base_1","global_utils_1","setter","setter_1","getter","getter_1","trace_1","metrics_1","propagation_1","TraceFlags","SpanKind","DefaultHttpClient","utils.prepareXMLRootList","utils.isPrimitiveType","URL","CommunicationIdentityUpdateRequestMapper","CommunicationTokenRequestMapper","CommunicationIdentity","coreHttp.operationOptionsToRequestOptionsBase","serializer","coreHttp.Serializer","Mappers.CommunicationIdentity","Parameters.apiVersion","Parameters.endpoint","Parameters.id","Parameters.body","Parameters.contentType","Mappers.CommunicationIdentityToken","Parameters.body1","Parameters.contentType1","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue","operations.CommunicationIdentity","CanonicalCode","endpoint","apiVersion","contentType","body","LocationOptionsQueriesMapper","body1","UpdateNumberCapabilitiesRequestMapper","NumberConfigurationPhoneNumberMapper","NumberConfigurationMapper","ReleaseRequestMapper","CreateSearchOptionsMapper","Mappers","Mappers.AcquiredPhoneNumbers","Mappers.ErrorResponse","Parameters.locale","Parameters.skip","Parameters.take","Mappers.AreaCodes","Parameters.locationType","Parameters.phonePlanId","Parameters.countryCode","Mappers.UpdatePhoneNumberCapabilitiesResponse","Parameters.capabilitiesUpdateId","Mappers.UpdateNumberCapabilitiesResponse","Mappers.PhoneNumberCountries","Mappers.NumberConfigurationResponse","Parameters.body2","Parameters.body3","Mappers.PhonePlanGroups","Parameters.includeRateInformation","Mappers.PhonePlansResponse","Parameters.phonePlanGroupId","Mappers.LocationOptionsResponse","Parameters.phonePlanId1","Mappers.PhoneNumberRelease","Parameters.releaseId","Mappers.ReleaseResponse","Parameters.body4","Mappers.PhoneNumberEntities","Mappers.PhoneNumberReservation","Parameters.searchId","Mappers.CreateSearchResponse","Parameters.body5","Parameters.nextLink","packageName","packageVersion","operations.PhoneNumberAdministration","SDK_VERSION"],"mappings":"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"}