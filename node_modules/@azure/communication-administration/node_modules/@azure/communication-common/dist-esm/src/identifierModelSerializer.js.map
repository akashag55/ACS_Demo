{"version":3,"file":"identifierModelSerializer.js","sourceRoot":"","sources":["../../src/identifierModelSerializer.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  CommunicationIdentifier,\n  CommunicationIdentifierKind,\n  getIdentifierKind\n} from \"./identifierModels\";\n\n/**\n * @internal\n * Identifies a participant in Azure Communication services. A participant is, for example, a phone number or an Azure communication user.\n * This interface is the serialized format of a CommunicationIdentifier used in web requests and responses.\n */\nexport interface _SerializedCommunicationIdentifier {\n  /**\n   * Kind of the communication identifier.\n   */\n  kind: _SerializedCommunicationIdentifierKind;\n  /**\n   * Full Id of the identifier.\n   */\n  id?: string;\n  /**\n   * The phone number in E.164 format.\n   */\n  phoneNumber?: string;\n  /**\n   * The AAD object Id of the Microsoft Teams user.\n   */\n  microsoftTeamsUserId?: string;\n  /**\n   * True if the identifier is anonymous.\n   */\n  isAnonymous?: boolean;\n  /**\n   * The cloud that the identifier belongs to.\n   */\n  cloud?: _SerializedCommunicationCloudEnvironment;\n}\n\n/**\n * @internal\n * Defines values for CommunicationIdentifierKind.\n * This type is the serialized format of a CommunicationIdentifier kind used in web requests and responses.\n */\nexport type _SerializedCommunicationIdentifierKind =\n  | \"unknown\"\n  | \"communicationUser\"\n  | \"phoneNumber\"\n  | \"callingApplication\"\n  | \"microsoftTeamsUser\";\n\n/**\n * @internal\n * Defines values for CommunicationCloudEnvironment.\n * This type is the serialized format of the CommunicationCloudEnvironment used in web requests and responses.\n */\nexport type _SerializedCommunicationCloudEnvironment = \"public\" | \"dod\" | \"gcch\";\n\nconst addIdIfExisting = <T>(identifier: T, id: string | undefined): T & { id?: string } => {\n  return id === undefined ? identifier : { ...identifier, id };\n};\n\n/**\n * @internal\n * Translates a CommunicationIdentifier to its serialized format for sending a request.\n * @param identifier The CommunicationIdentifier to be serialized.\n */\nexport const _serializeCommunicationIdentifier = (\n  identifier: CommunicationIdentifier\n): _SerializedCommunicationIdentifier => {\n  const identifierKind = getIdentifierKind(identifier);\n  switch (identifierKind.kind) {\n    case \"communicationUser\":\n      return { kind: \"communicationUser\", id: identifierKind.communicationUserId };\n    case \"callingApplication\":\n      return { kind: \"callingApplication\", id: identifierKind.callingApplicationId };\n    case \"phoneNumber\":\n      return addIdIfExisting(\n        { kind: \"phoneNumber\", phoneNumber: identifierKind.phoneNumber },\n        identifierKind.id\n      );\n    case \"microsoftTeamsUser\":\n      return addIdIfExisting(\n        {\n          kind: \"microsoftTeamsUser\",\n          microsoftTeamsUserId: identifierKind.microsoftTeamsUserId,\n          isAnonymous: identifierKind.isAnonymous ?? false,\n          cloud: identifierKind.cloud ?? \"public\"\n        },\n        identifierKind.id\n      );\n    case \"unknown\":\n      return { kind: \"unknown\", id: identifierKind.id };\n    default:\n      throw new Error(`Can't serialize an identifier with kind ${(identifierKind as any).kind}`);\n  }\n};\n\n/**\n * @internal\n * Translates the serialized format of a communication identifier to CommunicationIdentifier.\n * @param serializedIdentifier The SerializedCommunicationIdentifier to be deserialized.\n */\nexport const _deserializeCommunicationIdentifier = (\n  serializedIdentifier: _SerializedCommunicationIdentifier\n): CommunicationIdentifierKind => {\n  switch (serializedIdentifier.kind) {\n    case \"communicationUser\":\n      return {\n        kind: \"communicationUser\",\n        communicationUserId: assertNotNullOrUndefined(serializedIdentifier, \"id\"),\n        id: assertNotNullOrUndefined(serializedIdentifier, \"id\")\n      };\n    case \"callingApplication\":\n      return {\n        kind: \"callingApplication\",\n        callingApplicationId: assertNotNullOrUndefined(serializedIdentifier, \"id\"),\n        id: assertNotNullOrUndefined(serializedIdentifier, \"id\")\n      };\n    case \"phoneNumber\":\n      return {\n        kind: \"phoneNumber\",\n        phoneNumber: assertNotNullOrUndefined(serializedIdentifier, \"phoneNumber\"),\n        id: assertNotNullOrUndefined(serializedIdentifier, \"id\")\n      };\n    case \"microsoftTeamsUser\":\n      return {\n        kind: \"microsoftTeamsUser\",\n        microsoftTeamsUserId: assertNotNullOrUndefined(\n          serializedIdentifier,\n          \"microsoftTeamsUserId\"\n        ),\n        isAnonymous: assertNotNullOrUndefined(serializedIdentifier, \"isAnonymous\"),\n        cloud: assertNotNullOrUndefined(serializedIdentifier, \"cloud\"),\n        id: assertNotNullOrUndefined(serializedIdentifier, \"id\")\n      };\n    case \"unknown\":\n      return { kind: \"unknown\", id: assertNotNullOrUndefined(serializedIdentifier, \"id\") };\n    default:\n      return { kind: \"unknown\", id: assertNotNullOrUndefined(serializedIdentifier, \"id\") };\n  }\n};\n\nconst assertNotNullOrUndefined = <T extends _SerializedCommunicationIdentifier, P extends keyof T>(\n  obj: T,\n  prop: P\n): Required<T>[P] => {\n  if (prop in obj) {\n    return obj[prop];\n  }\n  throw new Error(`Property ${prop} is required for identifier of kind ${obj.kind}.`);\n};\n"]}